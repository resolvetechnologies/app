(function (e) { function t(t) { for (var c, l, s = t[0], r = t[1], i = t[2], d = 0, p = []; d < s.length; d++)l = s[d], Object.prototype.hasOwnProperty.call(a, l) && a[l] && p.push(a[l][0]), a[l] = 0; for (c in r) Object.prototype.hasOwnProperty.call(r, c) && (e[c] = r[c]); b && b(t); while (p.length) p.shift()(); return n.push.apply(n, i || []), o() } function o() { for (var e, t = 0; t < n.length; t++) { for (var o = n[t], c = !0, l = 1; l < o.length; l++) { var r = o[l]; 0 !== a[r] && (c = !1) } c && (n.splice(t--, 1), e = s(s.s = o[0])) } return e } var c = {}, a = { app: 0 }, n = []; function l(e) { return s.p + "js/" + ({ "@walletconnect/universal-provider": "@walletconnect/universal-provider", "timewarp-sc-artifacts": "timewarp-sc-artifacts", web3: "web3" }[e] || e) + "." + { "@walletconnect/universal-provider": "c2d3314e", "timewarp-sc-artifacts": "4d22dcfa", web3: "a7a30909" }[e] + ".js" } function s(t) { if (c[t]) return c[t].exports; var o = c[t] = { i: t, l: !1, exports: {} }; return e[t].call(o.exports, o, o.exports, s), o.l = !0, o.exports } s.e = function (e) { var t = [], o = a[e]; if (0 !== o) if (o) t.push(o[2]); else { var c = new Promise((function (t, c) { o = a[e] = [t, c] })); t.push(o[2] = c); var n, r = document.createElement("script"); r.charset = "utf-8", r.timeout = 120, s.nc && r.setAttribute("nonce", s.nc), r.src = l(e); var i = new Error; n = function (t) { r.onerror = r.onload = null, clearTimeout(d); var o = a[e]; if (0 !== o) { if (o) { var c = t && ("load" === t.type ? "missing" : t.type), n = t && t.target && t.target.src; i.message = "Loading chunk " + e + " failed.\n(" + c + ": " + n + ")", i.name = "ChunkLoadError", i.type = c, i.request = n, o[1](i) } a[e] = void 0 } }; var d = setTimeout((function () { n({ type: "timeout", target: r }) }), 12e4); r.onerror = r.onload = n, document.head.appendChild(r) } return Promise.all(t) }, s.m = e, s.c = c, s.d = function (e, t, o) { s.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: o }) }, s.r = function (e) { "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, s.t = function (e, t) { if (1 & t && (e = s(e)), 8 & t) return e; if (4 & t && "object" === typeof e && e && e.__esModule) return e; var o = Object.create(null); if (s.r(o), Object.defineProperty(o, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var c in e) s.d(o, c, function (t) { return e[t] }.bind(null, c)); return o }, s.n = function (e) { var t = e && e.__esModule ? function () { return e["default"] } : function () { return e }; return s.d(t, "a", t), t }, s.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, s.p = "/", s.oe = function (e) { throw console.error(e), e }; var r = window["webpackJsonp"] = window["webpackJsonp"] || [], i = r.push.bind(r); r.push = t, r = r.slice(); for (var d = 0; d < r.length; d++)t(r[d]); var b = i; n.push([0, "chunk-vendors"]), o() })({ 0: function (e, t, o) { e.exports = o("56d7") }, "0049": function (e, t, o) { "use strict"; o("02d0") }, "01f2": function (e, t, o) { "use strict"; o("e2b5") }, "02d0": function (e, t, o) { }, 1: function (e, t) { }, 10: function (e, t) { }, 11: function (e, t) { }, "116a": function (e, t, o) { }, "116e": function (e, t, o) { }, "124c": function (e, t, o) { "use strict"; o("3720") }, "12ae": function (e, t, o) { "use strict"; o("ed9d") }, 1558: function (e, t, o) { }, "15fd": function (e, t, o) { "use strict"; o("1558") }, 2: function (e, t) { }, "23a6": function (e, t, o) { }, "266c": function (e, t, o) { }, "290d": function (e, t, o) { }, 3: function (e, t) { }, 3720: function (e, t, o) { }, "38c0": function (e, t, o) { "use strict"; o("79d5") }, "390d": function (e, t, o) { }, "3bf9": function (e, t, o) { "use strict"; o("b53f") }, 4: function (e, t) { }, "42fc": function (e, t, o) { }, "455d": function (e, t, o) { "use strict"; o("d4f6") }, 4777: function (e, t, o) { }, "4a83": function (e, t, o) { }, 5: function (e, t) { }, "55a7": function (e, t, o) { }, "56d7": function (e, t, o) { "use strict"; o.r(t); var c = {}; o.r(c), o.d(c, "Account", (function () { return Ou })), o.d(c, "Arrow", (function () { return ju })), o.d(c, "Blank", (function () { return vu })), o.d(c, "Bsc", (function () { return wu })), o.d(c, "Copy", (function () { return fu })), o.d(c, "Check", (function () { return Eu })), o.d(c, "ChevronDown", (function () { return gu })), o.d(c, "Close", (function () { return yu })), o.d(c, "Link", (function () { return Bu })), o.d(c, "Error", (function () { return Cu })), o.d(c, "Eth", (function () { return Nu })), o.d(c, "Info", (function () { return Su })), o.d(c, "Metamask", (function () { return Vu })), o.d(c, "WalletConnect", (function () { return Au })), o.d(c, "Success", (function () { return xu })), o.d(c, "Polygon", (function () { return Tu })); var a = o("7a23"); function n(e, t) { const o = Object(a["resolveComponent"])("router-view"), c = Object(a["resolveComponent"])("modal-stack"); return Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], null, [Object(a["createVNode"])(o), Object(a["createVNode"])(c)], 64) } const l = { class: "modal-stack" }; function s(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", l, [Object(a["createVNode"])(a["TransitionGroup"], { name: "open" }, { default: Object(a["withCtx"])(() => [(Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], null, Object(a["renderList"])(e.modals, t => (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { class: Object(a["normalizeClass"])(["modal-container", t.addClass]), key: t.id }, [(Object(a["openBlock"])(), Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(t.component()), Object(a["mergeProps"])({ class: "modal", style: t.style }, t.props, { onClose: o => e.closeModal(t.id) }), null, 16, ["style", "onClose"]))], 2))), 128))]), _: 1 })]) } var r = o("5502"), i = { data() { return { bluredEl: [] } }, computed: { ...Object(r["e"])({ modals: ({ ui: e }) => e.modalStack }) }, methods: { ...Object(r["b"])({ closeModal: "ui/closeModal" }) } }, d = (o("455d"), o("6b0d")), b = o.n(d); const p = b()(i, [["render", s], ["__scopeId", "data-v-4e9c501c"]]); var u = p, m = { components: { ModalStack: u }, created() { this.loadRate(), this.initNetwork() }, methods: { ...Object(r["b"])({ loadRate: "loadRate", initNetwork: "network/init" }) } }; o("01f2"); const h = b()(m, [["render", n]]); var k = h, O = o("6605"); const j = { class: "page" }; function v(e, t) { const o = Object(a["resolveComponent"])("header-block"), c = Object(a["resolveComponent"])("intro"), n = Object(a["resolveComponent"])("stacking-results"), l = Object(a["resolveComponent"])("benefits"), s = Object(a["resolveComponent"])("time-block"), r = Object(a["resolveComponent"])("projects"), i = Object(a["resolveComponent"])("subscribe"), d = Object(a["resolveComponent"])("faq"), b = Object(a["resolveComponent"])("footer-block"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", j, [Object(a["createVNode"])(o), Object(a["createVNode"])(c), Object(a["createVNode"])(n), Object(a["createVNode"])(l), Object(a["createVNode"])(s), Object(a["createVNode"])(r), Object(a["createVNode"])(i), Object(a["createVNode"])(d), Object(a["createVNode"])(b)]) } const w = e => (Object(a["pushScopeId"])("data-v-dd08c964"), e = e(), Object(a["popScopeId"])(), e), f = { class: "header" }, E = { class: "top-panel" }, g = w(() => Object(a["createElementVNode"])("img", { src: "/static/images/logo/timewarp-1x.png", srcset: "/static/images/logo/timewarp-2x.png 2x", alt: "Logo" }, null, -1)), y = w(() => Object(a["createElementVNode"])("span", null, "TimeWarp", -1)), B = { class: "side-right" }, C = { class: "header-nav menu" }, N = w(() => Object(a["createElementVNode"])("a", { href: "https://docs.timewarp.finance", target: "_blank" }, "Docs", -1)), S = w(() => Object(a["createElementVNode"])("div", { class: "wrong-network" }, "Wrong Network", -1)), V = w(() => Object(a["createElementVNode"])("a", { class: "link", href: "https://docs.timewarp.finance", target: "_blank" }, "Docs", -1)), A = { class: "bottom-part" }, x = { key: 1, class: "address" }, T = { key: 0, class: "wrong-network" }, P = { key: 1 }; function _(e, t) { const o = Object(a["resolveComponent"])("router-link"), c = Object(a["resolveComponent"])("tw-button"), n = Object(a["resolveComponent"])("tw-icon"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("nav", f, [Object(a["createElementVNode"])("div", E, [Object(a["createVNode"])(o, { class: "logo", to: "/" }, { default: Object(a["withCtx"])(() => [g, y]), _: 1 }), Object(a["createElementVNode"])("div", B, [Object(a["createElementVNode"])("div", C, [Object(a["createVNode"])(o, { class: "active", to: "/" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Home")]), _: 1 }), Object(a["createVNode"])(o, { to: "/pools" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Pools")]), _: 1 }), Object(a["createVNode"])(o, { to: "/mdao" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("MDAO Pool")]), _: 1 }), N]), e.isActiveWallet ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { key: 1, class: "address", onClick: t[0] || (t[0] = (...t) => e.accountDetails && e.accountDetails(...t)) }, [e.isWrongNetwork ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createVNode"])(n, { class: "icon bsc-icon", icon: "account" }), S], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.ethereumSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0, class: "icon eth-icon", icon: "eth" })) : Object(a["createCommentVNode"])("", !0), e.binanceSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 1, class: "icon bsc-icon", icon: "bsc" })) : Object(a["createCommentVNode"])("", !0), e.polygonSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 2, class: "icon polygon-icon", icon: "polygon" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("span", null, Object(a["toDisplayString"])(e.clippedAddress), 1)], 64))])) : (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "connect-btn", onClick: e.onConnectClick }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Connect Wallet")]), _: 1 }, 8, ["onClick"]))]), Object(a["createVNode"])(a["TransitionGroup"], { name: "btn" }, { default: Object(a["withCtx"])(() => [e.menu ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("button", { class: "mobile-menu-btn close-btn", key: "open", onClick: t[1] || (t[1] = t => e.menu = !e.menu) })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("button", { class: "mobile-menu-btn open-btn", key: "close", onClick: t[2] || (t[2] = t => e.menu = !e.menu) }))]), _: 1 })]), Object(a["createVNode"])(a["Transition"], { name: "fall", type: "animation" }, { default: Object(a["withCtx"])(() => [e.menu ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { key: 0, class: Object(a["normalizeClass"])(["header-nav mobile-nav", e.menu ? "menu-open" : "menu-close"]) }, [Object(a["createVNode"])(o, { class: "link active", to: "/" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Home")]), _: 1 }), Object(a["createVNode"])(o, { class: "link", to: "/pools" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Pools")]), _: 1 }), Object(a["createVNode"])(o, { class: "link", to: "/mdao" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("MDAO Pool")]), _: 1 }), V, Object(a["createElementVNode"])("div", A, [e.isActiveWallet ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", x, [Object(a["createVNode"])(n, { class: Object(a["normalizeClass"])(["icon bsc-icon", { wrong: e.isWrongNetwork }]), icon: "account" }, null, 8, ["class"]), e.isWrongNetwork ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", T, "Wrong Network")) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", P, Object(a["toDisplayString"])(e.clippedAddress), 1))])) : (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "connect-btn", onClick: e.onConnectClick }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("CONNECT WALLET")]), _: 1 }, 8, ["onClick"]))])], 2)) : Object(a["createCommentVNode"])("", !0)]), _: 1 })]) } const L = e => (Object(a["pushScopeId"])("data-v-7732574a"), e = e(), Object(a["popScopeId"])(), e), I = L(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Connect wallet", -1)), D = { class: "wrapper-sections" }, F = { class: "section wallet-section" }, M = L(() => Object(a["createElementVNode"])("span", null, "Metamask", -1)), W = L(() => Object(a["createElementVNode"])("span", null, "WalletConnect", -1)); function R(e, t) { const o = Object(a["resolveComponent"])("tw-icon"), c = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(c, { class: "root connect-wallet" }, { default: Object(a["withCtx"])(() => [I, Object(a["createElementVNode"])("div", D, [Object(a["createElementVNode"])("section", F, [Object(a["createElementVNode"])("ul", null, [Object(a["createElementVNode"])("li", { onClick: t[0] || (t[0] = t => e.connect(e.WEB3_PROVIDER_METAMASK)) }, [Object(a["createVNode"])(o, { class: "icon metamask-icon", icon: "metamask" }), M]), Object(a["createElementVNode"])("li", { onClick: t[1] || (t[1] = t => e.connect(e.WEB3_PROVIDER_WALLETCONNECT)) }, [Object(a["createVNode"])(o, { class: "icon wallet-connect-icon", icon: "wallet-connect" }), W])])])])]), _: 1 }) } const U = 1, H = 56, Z = 137, G = [U, H, Z], q = { [U]: "Ethereum", [H]: "Binance", [Z]: "Polygon" }, K = { [U]: "https://eth-mainnet.laborx.io/", [H]: "https://bsc-dataseed.binance.org/", [Z]: "https://green-crimson-pond.matic.quiknode.pro/8869965358d360170991fe91ff470e711e46a80d/" }, $ = { [U]: "https://etherscan.io", [H]: "https://bscscan.com", [Z]: "https://polygonscan.com" }, z = "metamask", Y = "walletconnect", X = "82d6e5719395d8d068214393a5847e8e", J = "wss://relay.walletconnect.com", Q = "TimeWarp", ee = "TimeWarp walletconnect", te = e => (Object(a["pushScopeId"])("data-v-f3d864ce"), e = e(), Object(a["popScopeId"])(), e), oe = te(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Select network", -1)), ce = { class: "section networks-section" }, ae = te(() => Object(a["createElementVNode"])("h4", { class: "section-title" }, " To connect to WalletConnect, you need to select a network, but some wallets are not able to automatically connect to a given network, for example, Metamask, and then you need to manually select the required network before connecting ", -1)), ne = te(() => Object(a["createElementVNode"])("span", null, "Ethereum", -1)), le = te(() => Object(a["createElementVNode"])("span", null, "BSC", -1)), se = te(() => Object(a["createElementVNode"])("span", null, "Polygon", -1)); function re(e, t) { const o = Object(a["resolveComponent"])("tw-icon"), c = Object(a["resolveComponent"])("tw-button"), n = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(n, { class: "root connect-wallet" }, { default: Object(a["withCtx"])(() => [oe, Object(a["createElementVNode"])("section", ce, [ae, Object(a["createElementVNode"])("ul", null, [Object(a["createElementVNode"])("li", { class: Object(a["normalizeClass"])(["blockchain", e.selectedBlockchains[e.BLOCKCHAIN_ETHEREUM]]), onClick: t[0] || (t[0] = t => e.selectBlockchain(e.BLOCKCHAIN_ETHEREUM)) }, [Object(a["createVNode"])(o, { class: "icon eth-icon", icon: "eth" }), ne], 2), Object(a["createElementVNode"])("li", { class: Object(a["normalizeClass"])(["blockchain", e.selectedBlockchains[e.BLOCKCHAIN_BINANCE]]), onClick: t[1] || (t[1] = t => e.selectBlockchain(e.BLOCKCHAIN_BINANCE)) }, [Object(a["createVNode"])(o, { class: "icon bsc-icon", icon: "bsc" }), le], 2), Object(a["createElementVNode"])("li", { class: Object(a["normalizeClass"])(["blockchain", e.selectedBlockchains[e.BLOCKCHAIN_POLYGON]]), onClick: t[2] || (t[2] = t => e.selectBlockchain(e.BLOCKCHAIN_POLYGON)) }, [Object(a["createVNode"])(o, { class: "icon polygon-icon", icon: "polygon" }), se], 2)]), Object(a["createVNode"])(c, { class: "btn-confirm-blockchains", onClick: e.confirmBlockchains, disabled: !e.isSelectedBlockchain }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])(" Confirm ")]), _: 1 }, 8, ["onClick", "disabled"])])]), _: 1 }) } o("14d9"); var ie = { props: { onSelectNetworkCb: Function }, data() { return { blockchain: U, BLOCKCHAIN_ETHEREUM: U, BLOCKCHAIN_BINANCE: H, BLOCKCHAIN_POLYGON: Z, selectedBlockchains: { [U]: null, [H]: null, [Z]: null } } }, computed: { isSelectedBlockchain() { return Object.values(this.selectedBlockchains).includes("selected") } }, methods: { ...Object(r["b"])({ connectToWallet: "network/connect", closeModal: "ui/closeModal" }), selectBlockchain(e) { this.selectedBlockchains[e] = null === this.selectedBlockchains[e] ? "selected" : null }, confirmBlockchains() { const e = []; Object.keys(this.selectedBlockchains).map(t => { null !== this.selectedBlockchains[t] && e.push(t) }), this.onSelectNetworkCb(e), this.closeModal() } } }; o("f3ef"); const de = b()(ie, [["render", re], ["__scopeId", "data-v-f3d864ce"]]); var be = de, pe = { computed: {}, data() { return { blockchain: U, BLOCKCHAIN_ETHEREUM: U, BLOCKCHAIN_BINANCE: H, WEB3_PROVIDER_METAMASK: z, WEB3_PROVIDER_WALLETCONNECT: Y } }, methods: { ...Object(r["b"])({ connectToWallet: "network/connect", openModal: "ui/openModal", closeModal: "ui/closeModal" }), async connect(e = z) { e === z && (this.connectToWallet({ wallet: e, networks: [this.blockchain] }), this.closeModal()), e === Y && this.openModal({ component: () => be, props: { onSelectNetworkCb: t => { this.connectToWallet({ wallet: e, networks: t }), this.closeModal() } } }) }, setBlockchain(e) { this.blockchain = e } } }; o("38c0"); const ue = b()(pe, [["render", R], ["__scopeId", "data-v-7732574a"]]); var me = ue; const he = e => (Object(a["pushScopeId"])("data-v-26bfa802"), e = e(), Object(a["popScopeId"])(), e), ke = he(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Account details", -1)), Oe = { class: "section account-section" }, je = { class: "block-wallet-connection" }, ve = { class: "connect-wallet-text" }, we = he(() => Object(a["createElementVNode"])("span", null, "Metamask Connected", -1)), fe = he(() => Object(a["createElementVNode"])("span", null, "WalletConnect Connected", -1)), Ee = { class: "block-wallet-info" }, ge = { class: "address-text" }, ye = { class: "block-actions" }, Be = he(() => Object(a["createElementVNode"])("span", null, "COPY ADDRESS", -1)), Ce = ["href"], Ne = he(() => Object(a["createElementVNode"])("span", null, "VIEW ON ETHERSCAN", -1)), Se = ["href"], Ve = he(() => Object(a["createElementVNode"])("span", null, "VIEW ON BSCAN", -1)), Ae = ["href"], xe = he(() => Object(a["createElementVNode"])("span", null, "VIEW ON POLYGON", -1)); function Te(e, t) { const o = Object(a["resolveComponent"])("tw-icon"), c = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(c, { class: "root account-details" }, { default: Object(a["withCtx"])(() => [ke, Object(a["createElementVNode"])("section", Oe, [Object(a["createElementVNode"])("div", je, [Object(a["createElementVNode"])("div", ve, [e.metamaskSelected ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createVNode"])(o, { class: "icon metamask-icon", icon: "metamask" }), we], 64)) : Object(a["createCommentVNode"])("", !0), e.walletConnectSelected ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createVNode"])(o, { class: "icon wallet-connect-icon", icon: "wallet-connect" }), fe], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", { class: "disconnect-btn", onClick: t[0] || (t[0] = (...t) => e.disconnect && e.disconnect(...t)) }, " Disconnect ")]), Object(a["createElementVNode"])("div", Ee, [e.ethereumSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, class: "icon eth-icon", icon: "eth" })) : Object(a["createCommentVNode"])("", !0), e.binanceSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 1, class: "icon bsc-icon", icon: "bsc" })) : Object(a["createCommentVNode"])("", !0), e.polygonSelected ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 2, class: "icon polygon-icon", icon: "polygon" })) : (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 3, class: "icon bsc-icon", icon: "account" })), Object(a["createElementVNode"])("span", ge, Object(a["toDisplayString"])(e.clippedAddress), 1)]), Object(a["createElementVNode"])("div", ye, [Object(a["createElementVNode"])("div", { class: "item", onClick: t[1] || (t[1] = (...t) => e.copy && e.copy(...t)) }, [Object(a["createVNode"])(o, { icon: "copy" }), Be]), e.ethereumSelected ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "item btn btn-scan-link", href: e.linkToEtherscan, target: "_blank", rel: "noopener" }, [Object(a["createVNode"])(o, { icon: "link" }), Ne], 8, Ce)) : Object(a["createCommentVNode"])("", !0), e.binanceSelected ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 1, class: "item btn btn-scan-link", href: e.linkToBscscan, target: "_blank", rel: "noopener" }, [Object(a["createVNode"])(o, { icon: "link" }), Ve], 8, Se)) : Object(a["createCommentVNode"])("", !0), e.binanceSelected ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 2, class: "item btn btn-scan-link", href: e.linkToPolygon, target: "_blank", rel: "noopener" }, [Object(a["createVNode"])(o, { icon: "link" }), xe], 8, Ae)) : Object(a["createCommentVNode"])("", !0)])])]), _: 1 }) } var Pe = { props: { onChange: Function }, computed: { ...Object(r["e"])({ userSelectedWallet: e => e.network.userSelectedWallet, walletChainIds: e => e.network.walletChainIds, walletAddress: e => e.network.walletAddress }), clippedAddress() { return this.walletAddress ? `${this.walletAddress.slice(0, 6)}...${this.walletAddress.slice(-4)}` : "" }, metamaskSelected() { return this.userSelectedWallet === z }, walletConnectSelected() { return this.userSelectedWallet === Y }, binanceSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(H) }, ethereumSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(U) }, polygonSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(Z) }, linkToEtherscan() { return "https://etherscan.io/address/" + this.walletAddress }, linkToBscscan() { return "https://bscscan.com/address/" + this.walletAddress }, linkToPolygon() { return "https://polygonscan.com/address/" + this.walletAddress } }, data() { return { BLOCKCHAIN_ETHEREUM: U, BLOCKCHAIN_BINANCE: H, WEB3_PROVIDER_METAMASK: z, WEB3_PROVIDER_WALLETCONNECT: Y } }, methods: { ...Object(r["b"])({ closeModal: "ui/closeModal", connectToWallet: "network/connect", disconnectWallet: "network/disconnectWallet" }), ...Object(r["d"])({}), async disconnect() { await this.disconnectWallet(), this.closeModal() }, connect(e = z) { this.connectToWallet({ wallet: e, network: this.blockchain }), this.closeModal() }, copy() { const e = document.createElement("textarea"); e.value = this.walletAddress, e.style.top = "0", e.style.left = "0", e.style.position = "fixed", e.style.opacity = "0", document.body.appendChild(e), e.focus(), e.select(), document.execCommand("copy"), document.body.removeChild(e) } } }; o("a19e"); const _e = b()(Pe, [["render", Te], ["__scopeId", "data-v-26bfa802"]]); var Le = _e; function Ie(e) { window.gtag && window.gtag("event", e) } var De = { name: "HeaderBlock", computed: { ...Object(r["e"])({ walletChainIds: e => e.network.walletChainIds, walletAddress: e => e.network.walletAddress, userSelectedWallet: e => e.network.userSelectedWallet }), ...Object(r["c"])({ isActiveWallet: "network/isActiveWallet", isWrongNetwork: "network/isWrongNetwork" }), clippedAddress() { return this.walletAddress ? `${this.walletAddress.slice(0, 6)}...${this.walletAddress.slice(-4)}` : "" }, metamaskSelected() { return this.userSelectedWallet === z }, walletConnectSelected() { return this.userSelectedWallet === Y }, binanceSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(H) }, ethereumSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(U) }, polygonSelected() { var e; return null === this || void 0 === this || null === (e = this.walletChainIds) || void 0 === e ? void 0 : e.includes(Z) }, isProduction() { return !0 } }, data() { return { menu: !1, isConnected: !1, BLOCKCHAIN_ETHEREUM: U, BLOCKCHAIN_BINANCE: H } }, methods: { ...Object(r["b"])({ openModal: "ui/openModal" }), onConnectClick() { this.menu = !1, this.openModal({ component: () => me }), Ie("wallet_connect") }, accountDetails() { this.menu = !1, this.openModal({ component: () => Le }) } } }; o("8985"); const Fe = b()(De, [["render", _], ["__scopeId", "data-v-dd08c964"]]); var Me = Fe; const We = e => (Object(a["pushScopeId"])("data-v-598e3677"), e = e(), Object(a["popScopeId"])(), e), Re = { class: "intro" }, Ue = We(() => Object(a["createElementVNode"])("div", { class: "introducing" }, [Object(a["createElementVNode"])("div", null, "Introducing"), Object(a["createElementVNode"])("div", null, "TimeWarp!")], -1)), He = We(() => Object(a["createElementVNode"])("div", { class: "stake" }, [Object(a["createElementVNode"])("div", null, "Stake your TIME and"), Object(a["createElementVNode"])("div", null, "earn ongoing rewards")], -1)), Ze = We(() => Object(a["createElementVNode"])("img", { class: "illustration", src: "/static/images/landing/illustration-1x.png", srcset: "/static/images/landing/illustration-2x.png 2x" }, null, -1)), Ge = [Ue, He, Ze]; function qe(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Re, Ge) } var Ke = { name: "Intro" }; o("7b35"); const $e = b()(Ke, [["render", qe], ["__scopeId", "data-v-598e3677"]]); var ze = $e; const Ye = { class: "bg-wrap" }, Xe = Object(a["createStaticVNode"])('<div class="container benefits-container" data-v-46b451b6><div class="header" data-v-46b451b6>Lock your TIME tokens in the TimeWarp smart contract and receive:</div><div class="benefits" data-v-46b451b6><div class="benefit" data-v-46b451b6> Weekly reward payouts. TIME will be purchased from the open market using revenues generated by <a href="https://chrono.tech" target="_blank" data-v-46b451b6>Chrono.tech</a> ecosystem projects and distributed to stakers; </div><div class="benefit" data-v-46b451b6> Attractive benefits in Chrono.tech services, including Premium status and Job Mining for <a href="https://laborx.com" target="_blank" data-v-46b451b6>LaborX</a> users. </div></div></div>', 1), Je = [Xe]; function Qe(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Ye, Je) } var et = { name: "Benefits" }; o("6f53"); const tt = b()(et, [["render", Qe], ["__scopeId", "data-v-46b451b6"]]); var ot = tt; const ct = e => (Object(a["pushScopeId"])("data-v-adc83494"), e = e(), Object(a["popScopeId"])(), e), at = { class: "container time-container" }, nt = ct(() => Object(a["createElementVNode"])("div", { class: "header" }, [Object(a["createElementVNode"])("span", null, "Buy Time")], -1)), lt = { class: "metrics" }, st = { class: "metric market-cap" }, rt = ct(() => Object(a["createElementVNode"])("div", { class: "name" }, "Market Cap:", -1)), it = { class: "value" }, dt = ct(() => Object(a["createElementVNode"])("div", { class: "coinmarketcap" }, [Object(a["createElementVNode"])("a", { href: "https://coinmarketcap.com/currencies/chrono-tech/", target: "_blank" }, [Object(a["createElementVNode"])("svg", { width: "32", height: "32", viewBox: "0 0 32 32", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "\n            M27.4144 19.1209C27.1649 19.2928 26.8736 19.3943 26.5713 19.4146C26.2689 19.4349 25.9667 19.3733 25.6964\n            19.2363C25.0619 18.8778 24.72 18.0373 24.72 16.892V13.3817C24.72 11.6967 24.0525 10.4977 22.936\n            10.1723C21.0491 9.62019 19.64 11.9315 19.0962 12.8008L15.759 18.2021V11.6101C15.7219 10.0899 15.2275 9.17935\n            14.2923 8.90743C13.6743 8.72615 12.7473 8.80031 11.845 10.1764L4.38367 22.1532C3.39092 20.2538 2.87616 18.1411\n            2.884 15.9979C2.884 8.77971 8.65199 2.90872 15.759 2.90872C22.866 2.90872 28.6546 8.77971 28.6546\n            15.9979V16.035C28.6546 16.035 28.6546 16.0597 28.6546 16.0721C28.7246 17.4688 28.2714 18.5812 27.4186\n            19.1209H27.4144ZM31.5344 16.0021V15.932C31.4768 7.13583 24.4233 0 15.759 0C7.09463 0 0 7.17703 0 15.9979C0\n            24.8188 7.06991 32 15.759 32C19.7442 31.9998 23.5777 30.4723 26.471 27.7317C26.7518 27.4671 26.9171 27.1025\n            26.9309 26.7169C26.9448 26.3313 26.8062 25.9558 26.5451 25.6717C26.4202 25.5335 26.2692 25.4214 26.1007\n            25.3418C25.9323 25.2622 25.7498 25.2166 25.5637 25.2078C25.3776 25.199 25.1916 25.2271 25.0164\n            25.2904C24.8412 25.3538 24.6802 25.4512 24.5428 25.5769C23.2972 26.7585 21.8256 27.6762 20.2165\n            28.2749C18.6074 28.8736 16.8938 29.1409 15.1788 29.0609C13.4638 28.9809 11.7826 28.5551 10.2362\n            27.8091C8.68986 27.0632 7.31016 26.0124 6.17999 24.72L12.8956 13.9256V18.9067C12.8956 21.3004 13.8226\n            22.0749 14.6013 22.3015C15.3799 22.5281 16.5706 22.3716 17.819 20.3445L21.527 14.3417C21.6423 14.1481\n            21.7536 13.9833 21.8525 13.8391V16.892C21.8525 19.1291 22.7506 20.9172 24.3245 21.7989C25.0401 22.1852\n            25.8465 22.3719 26.6591 22.3393C27.4717 22.3066 28.2606 22.0559 28.943 21.6135C30.6734 20.4887 31.6168\n            18.4535 31.518 16.0021H31.5344Z\n          " })]), Object(a["createElementVNode"])("span", null, "CoinMarketCap")])], -1)), bt = { class: "metric price" }, pt = ct(() => Object(a["createElementVNode"])("div", { class: "name" }, "Price:", -1)), ut = { class: "value" }, mt = ct(() => Object(a["createElementVNode"])("div", { class: "metric price" }, [Object(a["createElementVNode"])("div", { class: "name" }, "Total Supply:"), Object(a["createElementVNode"])("div", { class: "value" }, "710,113")], -1)), ht = { class: "exchanges" }, kt = ct(() => Object(a["createElementVNode"])("img", { src: "/static/images/logo/timex.svg", alt: "TimeX" }, null, -1)), Ot = ct(() => Object(a["createElementVNode"])("span", null, "TimeX", -1)), jt = [kt, Ot], vt = ct(() => Object(a["createElementVNode"])("img", { class: "coinbase", src: "/static/images/logo/coinbase.svg", alt: "Coinbase" }, null, -1)), wt = ct(() => Object(a["createElementVNode"])("span", null, "Coinbase", -1)), ft = [vt, wt], Et = ct(() => Object(a["createElementVNode"])("img", { src: "/static/images/logo/kucoin.svg", alt: "KuCoin" }, null, -1)), gt = ct(() => Object(a["createElementVNode"])("span", null, "KuCoin", -1)), yt = [Et, gt], Bt = ct(() => Object(a["createElementVNode"])("img", { class: "gate", src: "/static/images/logo/gate.svg", alt: "Gate.io" }, null, -1)), Ct = ct(() => Object(a["createElementVNode"])("span", null, "Gate.io", -1)), Nt = [Bt, Ct], St = ct(() => Object(a["createElementVNode"])("img", { class: "bybit", src: "/static/images/logo/bybit.png", alt: "Bybit" }, null, -1)), Vt = ct(() => Object(a["createElementVNode"])("span", null, "Bybit", -1)), At = [St, Vt], xt = ct(() => Object(a["createElementVNode"])("img", { class: "bitget", src: "/static/images/logo/bitget.png", alt: "Bitget" }, null, -1)), Tt = ct(() => Object(a["createElementVNode"])("span", null, "Bitget", -1)), Pt = [xt, Tt], _t = ct(() => Object(a["createElementVNode"])("img", { src: "/static/images/logo/pancake-1x.png", srcset: "/static/images/logo/pancake-2x.png 2x", alt: "Pancake" }, null, -1)), Lt = ct(() => Object(a["createElementVNode"])("span", null, "Pancake", -1)), It = [_t, Lt], Dt = ct(() => Object(a["createElementVNode"])("img", { class: "quickswap", src: "/static/images/logo/quickswap.png", alt: "quickswap" }, null, -1)), Ft = ct(() => Object(a["createElementVNode"])("span", null, "QuickSwap", -1)), Mt = [Dt, Ft]; function Wt(e, t) { const o = Object(a["resolveComponent"])("skeleton"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", at, [nt, Object(a["createElementVNode"])("div", lt, [Object(a["createElementVNode"])("div", st, [rt, Object(a["createElementVNode"])("div", it, [Object(a["createElementVNode"])("span", null, [Object(a["createTextVNode"])(" $" + Object(a["toDisplayString"])(e.marketCap) + " ", 1), e.loading ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, class: "loader" })) : Object(a["createCommentVNode"])("", !0)])]), dt]), Object(a["createElementVNode"])("div", bt, [pt, Object(a["createElementVNode"])("div", ut, [Object(a["createElementVNode"])("span", null, [Object(a["createTextVNode"])(" $" + Object(a["toDisplayString"])(e.price) + " ", 1), e.loading ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, class: "loader" })) : Object(a["createCommentVNode"])("", !0)])])]), mt]), Object(a["createElementVNode"])("div", ht, [Object(a["createElementVNode"])("a", { href: "https://timex.io/buy-time", class: "exchange", target: "_blank", onClick: t[0] || (t[0] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, jt), Object(a["createElementVNode"])("a", { href: "https://pro.coinbase.com/trade/TIME-USD", class: "exchange", target: "_blank", onClick: t[1] || (t[1] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, ft), Object(a["createElementVNode"])("a", { href: "https://trade.kucoin.com/TIME-BTC", class: "exchange", target: "_blank", onClick: t[2] || (t[2] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, yt), Object(a["createElementVNode"])("a", { href: "https://www.gate.io/trade/TIMECHRONO_USDT", class: "exchange", target: "_blank", onClick: t[3] || (t[3] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, Nt), Object(a["createElementVNode"])("a", { href: "https://www.bybit.com/en-US/trade/spot/TIME/USDT", class: "exchange", target: "_blank", onClick: t[4] || (t[4] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, At), Object(a["createElementVNode"])("a", { href: "https://www.bitget.com/en/spot/TIMEUSDT_SPBL?type=spot", class: "exchange", target: "_blank", onClick: t[5] || (t[5] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, Pt), Object(a["createElementVNode"])("a", { href: "https://pancakeswap.finance/swap?outputCurrency=0x3b198e26E473b8faB2085b37978e36c9DE5D7f68", class: "exchange", target: "_blank", onClick: t[6] || (t[6] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, It), Object(a["createElementVNode"])("a", { href: "https://quickswap.exchange/#/swap?inputCurrency=0x7ceb23fd6bc0add59e62ac25578270cff1b9f619&outputCurrency=0xb970bc1bd4fcd639c37aa8efd6713eadc577252f", class: "exchange", target: "_blank", onClick: t[7] || (t[7] = (...t) => e.onExchangeClick && e.onExchangeClick(...t)) }, Mt)])]) } var Rt = o("901e"), Ut = o.n(Rt); function Ht(e) { const t = e.toString().split("."); return t[0] = t[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), t.join(".") } function Zt(e, { divider: t = 1, toFixedNumber: o }) { let c; return c = e ? e instanceof Ut.a ? e : new Ut.a(e) : new Ut.a(0), Ht(c.dividedBy(t).toFixed(o, 1).toString()) } function Gt(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { class: Object(a["normalizeClass"])(["root-skeleton", { circle: e.circle, fill: e.fill }]), style: Object(a["normalizeStyle"])({ "--animation-duration": e.duration + "s", "--animation-delay": e.delay + "s" }) }, [Object(a["renderSlot"])(e.$slots, "default", {}, void 0, !0)], 6) } var qt = { props: { circle: Boolean, fill: Boolean, duration: { type: Number, default: 1 }, delay: { type: Number, default: 0 } } }; o("124c"); const Kt = b()(qt, [["render", Gt], ["__scopeId", "data-v-19f494ec"]]); var $t = Kt, zt = { name: "Time", components: { Skeleton: $t }, mounted() { this.loadRate() }, computed: { ...Object(r["e"])({ timePrice: e => e.timePrice }), loading() { return null === this.timePrice }, price() { return null === this.timePrice ? "00.00" : Ht(parseFloat(this.timePrice).toFixed(2)) }, marketCap() { return null === this.timePrice ? "00,000,000" : Ht(Math.round(710113 * this.timePrice).toString()) } }, methods: { ...Object(r["b"])({ loadRate: "loadRate" }), onExchangeClick() { Ie("exchange_open") } } }; o("ca08"); const Yt = b()(zt, [["render", Wt], ["__scopeId", "data-v-adc83494"]]); var Xt = Yt; const Jt = e => (Object(a["pushScopeId"])("data-v-64ff563a"), e = e(), Object(a["popScopeId"])(), e), Qt = { class: "container projects-container" }, eo = Jt(() => Object(a["createElementVNode"])("div", { class: "header" }, "Chrono.tech projects", -1)), to = Jt(() => Object(a["createElementVNode"])("div", { class: "description" }, " The Chrono.tech ecosystem consists of a suite of blockchain products and services. A proportion of the revenues generated by these will be used to buy back TIME and distribute it to users who stake their tokens ", -1)), oo = { class: "project lx" }, co = Object(a["createStaticVNode"])('<div class="top" data-v-64ff563a><a href="https://laborx.com" class="logo" data-v-64ff563a><img src="/static/images/logo/lx.svg" alt="LaborX" data-v-64ff563a></a><div class="socials" data-v-64ff563a><a href="https://twitter.com/LaborXNews" target="_blank" data-v-64ff563a><img src="/static/images/logo/twitter.svg" alt="Twitter" data-v-64ff563a></a><a href="https://www.facebook.com/LaborXNews" target="_blank" data-v-64ff563a><img src="/static/images/logo/facebook.svg" alt="Facebook" data-v-64ff563a></a><a href="https://www.linkedin.com/company/laborxnews" target="_blank" data-v-64ff563a><img src="/static/images/logo/linkedin.svg" alt="LinkedIn" data-v-64ff563a></a><a href="https://t.me/laborx" target="_blank" data-v-64ff563a><img src="/static/images/logo/telegram.svg" alt="Telegram" data-v-64ff563a></a></div></div><div class="medium" data-v-64ff563a><div class="text col" data-v-64ff563a> Blockchain-based freelance jobs platform with digital work agreements and cryptocurrency payments </div><div class="fees col" data-v-64ff563a><div class="label" data-v-64ff563a>LaborX generates fees from:</div><div class="fee first" data-v-64ff563a><div class="value" data-v-64ff563a>10%</div><div class="fee-text" data-v-64ff563a>from contract value</div></div></div></div>', 2), ao = { class: "stats" }, no = { class: "stat" }, lo = { class: "content" }, so = Jt(() => Object(a["createElementVNode"])("div", { class: "name" }, "Number of users", -1)), ro = Jt(() => Object(a["createElementVNode"])("div", { class: "text" }, "Average growth 30% per quarter", -1)), io = { class: "stat" }, bo = { class: "content" }, po = Jt(() => Object(a["createElementVNode"])("div", { class: "name" }, "Number of Gigs", -1)), uo = Jt(() => Object(a["createElementVNode"])("div", { class: "text" }, "Average growth 40% per quarter", -1)), mo = Object(a["createStaticVNode"])('<div class="project tx" data-v-64ff563a><div class="top" data-v-64ff563a><a href="https://timex.io" class="logo" data-v-64ff563a><img src="/static/images/logo/timex-big.svg" alt="TimeX" data-v-64ff563a></a><div class="socials" data-v-64ff563a><a href="https://twitter.com/ExchangeTimex" target="_blank" data-v-64ff563a><img src="/static/images/logo/twitter.svg" alt="Twitter" data-v-64ff563a></a><a href="https://www.facebook.com/timex.io" target="_blank" data-v-64ff563a><img src="/static/images/logo/facebook.svg" alt="Facebook" data-v-64ff563a></a><a href="https://www.linkedin.com/company/timex-io" target="_blank" data-v-64ff563a><img src="/static/images/logo/linkedin.svg" alt="LinkedIn" data-v-64ff563a></a><a href="https://t.me/timexio" target="_blank" data-v-64ff563a><img src="/static/images/logo/telegram.svg" alt="Telegram" data-v-64ff563a></a></div></div><div class="medium" data-v-64ff563a><div class="text col" data-v-64ff563a> Plasma-based hybrid cryptocurrency exchange, combining the speed and privacy of a centralised system with the security and transparency of a decentralised solution </div><div class="fees col" data-v-64ff563a><div class="label" data-v-64ff563a>TimeX generates revenues from:</div><div class="fee first" data-v-64ff563a><div class="value" data-v-64ff563a>0.25%</div><div class="fee-text" data-v-64ff563a>Maker Fee</div></div><div class="fee last" data-v-64ff563a><div class="value" data-v-64ff563a>0.5%</div><div class="fee-text" data-v-64ff563a>Taker Fee</div></div></div></div><div class="others" data-v-64ff563a><div class="other-product" data-v-64ff563a><div class="top-block" data-v-64ff563a><a href="https://paymentx.io" class="logo" data-v-64ff563a><img src="/static/images/logo/px.svg" alt="PaymentX" data-v-64ff563a></a><div class="socials" data-v-64ff563a><a href="https://twitter.com/Payment_X" target="_blank" data-v-64ff563a><img src="/static/images/logo/twitter.svg" alt="Twitter" data-v-64ff563a></a><a href="https://www.facebook.com/paymentx" target="_blank" data-v-64ff563a><img src="/static/images/logo/facebook.svg" alt="Facebook" data-v-64ff563a></a><a href="https://www.linkedin.com/company/paymentx" target="_blank" data-v-64ff563a><img src="/static/images/logo/linkedin.svg" alt="LinkedIn" data-v-64ff563a></a><a href="https://t.me/paymentx" target="_blank" data-v-64ff563a><img src="/static/images/logo/telegram.svg" alt="Telegram" data-v-64ff563a></a></div></div><div class="bottom" data-v-64ff563a><div class="text" data-v-64ff563a>Cryptocurrency payroll solution to automate businesses’ crypto payments for employees and contractors</div></div></div><div class="other-product" data-v-64ff563a><div class="top-block" data-v-64ff563a><a href="https://audt.to" class="logo" data-v-64ff563a><img src="/static/images/logo/audt.svg" alt="AUDT" data-v-64ff563a></a><div class="socials" data-v-64ff563a><a href="https://twitter.com/audt_to" target="_blank" data-v-64ff563a><img src="/static/images/logo/twitter.svg" alt="Twitter" data-v-64ff563a></a><a href="https://www.facebook.com/AUDToken" target="_blank" data-v-64ff563a><img src="/static/images/logo/facebook.svg" alt="Facebook" data-v-64ff563a></a><a href="https://t.me/audt_to" target="_blank" data-v-64ff563a><img src="/static/images/logo/telegram.svg" alt="Telegram" data-v-64ff563a></a></div></div><div class="bottom" data-v-64ff563a><div class="text" data-v-64ff563a>Compliant stablecoin backed by AUD reserves</div><div class="market-cap" data-v-64ff563a><div class="value" data-v-64ff563a>$773,905,613</div><div class="label" data-v-64ff563a>Market Cap</div></div></div></div></div></div>', 1); function ho(e, t) { const o = Object(a["resolveComponent"])("tw-chart"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Qt, [eo, to, Object(a["createElementVNode"])("div", oo, [co, Object(a["createElementVNode"])("div", ao, [Object(a["createElementVNode"])("div", no, [Object(a["createElementVNode"])("div", lo, [so, ro, Object(a["createVNode"])(o, { class: "chart", type: "line", data: e.userChartData, options: e.chartOptions }, null, 8, ["data", "options"])])]), Object(a["createElementVNode"])("div", io, [Object(a["createElementVNode"])("div", bo, [po, uo, Object(a["createVNode"])(o, { class: "chart", type: "line", data: e.gigsChartData, options: e.chartOptions }, null, 8, ["data", "options"])])])])]), mo]) } var ko = { name: "Projects", data() { return { dataCollection: null, loaded: !1 } }, computed: { ...Object(r["e"])({ userLabels: e => e.userLabels, userData: e => e.userData, gigsLabels: e => e.gigsLabels, gigsData: e => e.gigsData }), userChartData() { return this.loaded ? e => { const t = e.createLinearGradient(500, 0, 100, 0); return t.addColorStop(0, "#F987B0"), t.addColorStop(1, "#7037dd"), { labels: this.userLabels, datasets: [{ label: "Numbers of users", borderColor: t, pointBorderColor: t, pointBackgroundColor: t, pointHoverBackgroundColor: t, pointHoverBorderColor: t, borderWidth: 2, pointRadius: 3, pointHoverRadius: 12, data: this.userData }] } } : {} }, gigsChartData() { return this.loaded ? e => { const t = e.createLinearGradient(500, 0, 100, 0); return t.addColorStop(0, "#F987B0"), t.addColorStop(1, "#7037dd"), { labels: this.gigsLabels, datasets: [{ label: "Numbers of Gigs", borderColor: t, pointBorderColor: t, pointBackgroundColor: t, pointHoverBackgroundColor: t, pointHoverBorderColor: t, borderWidth: 2, pointRadius: 3, pointHoverRadius: 12, data: this.gigsData }] } } : {} }, chartOptions() { return { responsive: !0, plugins: { legend: { display: !1 }, tooltip: { displayColors: !1, backgroundColor: "#6A50FD" } }, scales: { x: { display: !1 } } } } }, async created() { await this.loadStat(), this.loaded = !0 }, methods: { ...Object(r["b"])({ loadStat: "loadStat" }) } }; o("df1c"); const Oo = b()(ko, [["render", ho], ["__scopeId", "data-v-64ff563a"]]); var jo = Oo; const vo = e => (Object(a["pushScopeId"])("data-v-7bcb2a87"), e = e(), Object(a["popScopeId"])(), e), wo = { class: "container stacking-results-container" }, fo = { class: "results" }, Eo = { class: "item" }, go = vo(() => Object(a["createElementVNode"])("div", { class: "label" }, "Total Staked", -1)), yo = { class: "value" }, Bo = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), Co = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), No = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), So = { class: "subvalue" }, Vo = { class: "item" }, Ao = vo(() => Object(a["createElementVNode"])("div", { class: "label" }, "Tokens Distributed", -1)), xo = { key: 0, class: "value" }, To = { key: 1, class: "subvalue" }, Po = { class: "item" }, _o = vo(() => Object(a["createElementVNode"])("div", { class: "label" }, "APY", -1)), Lo = { key: 1, class: "value" }, Io = { class: "item" }, Do = vo(() => Object(a["createElementVNode"])("div", { class: "label" }, "Stakers", -1)), Fo = { class: "value" }, Mo = { class: "rewards" }, Wo = vo(() => Object(a["createElementVNode"])("div", { class: "title" }, "Weekly Rewards", -1)), Ro = { class: "table" }, Uo = vo(() => Object(a["createElementVNode"])("thead", { class: "thead row" }, [Object(a["createElementVNode"])("th", { class: "td" }, "DATE"), Object(a["createElementVNode"])("th", { class: "td" }, "REWARD"), Object(a["createElementVNode"])("th", { class: "td" }), Object(a["createElementVNode"])("th", { class: "td" }, "TXs")], -1)), Ho = { class: "td" }, Zo = { class: "td" }, Go = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), qo = { class: "td" }, Ko = { class: "td txs nowrap" }, $o = { class: "wrap" }, zo = ["href"], Yo = { class: "tx" }, Xo = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), Jo = ["href"], Qo = { class: "tx" }, ec = { key: 0, class: "wrap" }, tc = ["href"], oc = { class: "tx" }, cc = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), ac = ["href"], nc = { class: "tx" }, lc = { key: 1, class: "wrap" }, sc = ["href"], rc = { class: "tx" }, ic = vo(() => Object(a["createElementVNode"])("br", null, null, -1)), dc = ["href"], bc = { class: "tx" }, pc = { class: "td" }, uc = { class: "td" }, mc = { class: "td" }, hc = { class: "td txs nowrap" }, kc = { class: "wrap" }; function Oc(e, t) { const o = Object(a["resolveComponent"])("tw-button"), c = Object(a["resolveComponent"])("tw-loader"), n = Object(a["resolveComponent"])("tw-icon"), l = Object(a["resolveComponent"])("skeleton"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", wo, [Object(a["createVNode"])(o, { class: "btn", to: "/pools" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Start Staking")]), _: 1 }), Object(a["createElementVNode"])("section", fo, [Object(a["createElementVNode"])("div", Eo, [go, 0 === +e.totalStakedInTime || 0 === +e.totalStakedInEth ? (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createElementVNode"])("div", yo, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.totalStakedInTimeFormatted) + " TIME", 1), Bo, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.totalStakedInEthFormatted) + " ETH", 1), Co, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.totalStakedInBnbFormatted) + " BNB", 1), No]), Object(a["createElementVNode"])("div", So, "$" + Object(a["toDisplayString"])(e.stakedUsd), 1)], 64))]), Object(a["createElementVNode"])("div", Vo, [Ao, e.rewards ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", xo, Object(a["toDisplayString"])(e.totalRewardsInTime) + " TIME", 1)) : Object(a["createCommentVNode"])("", !0), e.rewards ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", To, "$" + Object(a["toDisplayString"])(e.totalRewardsInUsd), 1)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", Po, [_o, null === e.poolRewardApy ? (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Lo, Object(a["toDisplayString"])(e.poolRewardApy) + "%", 1))]), Object(a["createElementVNode"])("div", Io, [Do, Object(a["createElementVNode"])("div", Fo, Object(a["toDisplayString"])(e.stakers), 1)])]), Object(a["createElementVNode"])("section", Mo, [Wo, Object(a["createElementVNode"])("table", Ro, [Uo, e.rewards ? (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, Object(a["renderList"])(e.rewards, (t, o) => (Object(a["openBlock"])(), Object(a["createElementBlock"])("tr", { key: o, class: "row" }, [Object(a["createElementVNode"])("td", Ho, Object(a["toDisplayString"])(t.date), 1), Object(a["createElementVNode"])("td", Zo, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.rewardFormatted(t.time)) + " TIME ", 1), t.mdao ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Go, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.rewardFormatted(t.mdao)) + " MDAO ", 1)], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("td", qo, "$" + Object(a["toDisplayString"])(e.rewardFormatted(t.usd)), 1), Object(a["createElementVNode"])("td", Ko, [Object(a["createElementVNode"])("div", $o, [Object(a["createElementVNode"])("a", { class: "tx-link", href: "https://etherscan.io/tx/" + t.tx1, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon eth-icon", icon: "eth" }), Object(a["createElementVNode"])("div", Yo, Object(a["toDisplayString"])(t.tx1), 1)], 8, zo), Xo, t.tx2 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: "https://etherscan.io/tx/" + t.tx2, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon eth-icon", icon: "eth" }), Object(a["createElementVNode"])("div", Qo, Object(a["toDisplayString"])(t.tx2), 1)], 8, Jo)) : Object(a["createCommentVNode"])("", !0)]), t.tx3 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", ec, [Object(a["createElementVNode"])("a", { class: "tx-link", href: "https://bscscan.com/tx/" + t.tx3, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon bsc-icon", icon: "bsc" }), Object(a["createElementVNode"])("div", oc, Object(a["toDisplayString"])(t.tx3), 1)], 8, tc), cc, Object(a["createElementVNode"])("a", { class: "tx-link", href: "https://bscscan.com/tx/" + t.tx4, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon bsc-icon", icon: "bsc" }), Object(a["createElementVNode"])("div", nc, Object(a["toDisplayString"])(t.tx4), 1)], 8, ac)])) : Object(a["createCommentVNode"])("", !0), t.tx5 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", lc, [Object(a["createElementVNode"])("a", { class: "tx-link", href: "https://polygonscan.com/tx/" + t.tx5, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon polygon-icon", icon: "polygon" }), Object(a["createElementVNode"])("div", rc, Object(a["toDisplayString"])(t.tx5), 1)], 8, sc), ic, Object(a["createElementVNode"])("a", { class: "tx-link", href: "https://polygonscan.com/tx/" + t.tx6, target: "_blank" }, [Object(a["createVNode"])(n, { class: "icon polygon-icon", icon: "polygon" }), Object(a["createElementVNode"])("div", bc, Object(a["toDisplayString"])(t.tx6), 1)], 8, dc)])) : Object(a["createCommentVNode"])("", !0)])]))), 128)) : (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, Object(a["renderList"])(e.skeletonRewards, (e, t) => (Object(a["openBlock"])(), Object(a["createElementBlock"])("tr", { key: t, class: "row" }, [Object(a["createElementVNode"])("td", pc, [Object(a["createVNode"])(l)]), Object(a["createElementVNode"])("td", uc, [Object(a["createVNode"])(l)]), Object(a["createElementVNode"])("td", mc, [Object(a["createVNode"])(l)]), Object(a["createElementVNode"])("td", hc, [Object(a["createElementVNode"])("div", kc, [Object(a["createVNode"])(l)])])]))), 128))])])]) } o("13d5"); var jc = o("bc3a"), vc = o.n(jc), wc = o("2ef0"), fc = o.n(wc); async function Ec() { try { const e = await vc.a.get("https://crm-backend.cgu.io/api/v1/stacking/reward-info-time"); return fc.a.get(e, "data.data") } catch (e) { return console.error("REWARD_INFO_ERROR", e), null } } var gc = { components: { Skeleton: $t }, data() { return { loading: !0, stakers: 850, rewards: null, skeletonRewards: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] } }, async created() { this.rewards = (await Ec()).listWeeklyRewards }, computed: { ...Object(r["e"])({ timePrice: e => e.timePrice, ethPrice: e => e.ethPrice, bnbPrice: e => e.bnbPrice }), ...Object(r["c"])({ totalApy: "totalApy", totalStakedInTime: "network/totalStakedInTime", totalStakedInEth: "network/totalStakedInEth", totalStakedInBnb: "network/totalStakedInBnb", rewardApy: "rewardApy" }), poolRewardApy() { return new Ut.a(this.rewardApy).toFixed(2) }, totalStakedInTimeFormatted() { return null === this.totalStakedInTime ? 0 : Zt(this.totalStakedInTime, { toFixedNumber: 0 }) }, totalStakedInEthFormatted() { return null === this.totalStakedInEth ? 0 : Zt(this.totalStakedInEth, { toFixedNumber: 2 }) }, totalStakedInBnbFormatted() { return null === this.totalStakedInBnb ? 0 : Zt(this.totalStakedInBnb, { toFixedNumber: 2 }) }, stakedUsd() { if (0 === +this.totalStakedInTime || null === this.timePrice) return 0; const e = new Ut.a(this.totalStakedInTime).multipliedBy(this.timePrice), t = new Ut.a(this.totalStakedInEth).multipliedBy(this.ethPrice), o = new Ut.a(this.totalStakedInBnb).multipliedBy(this.bnbPrice); return Zt(e.plus(t).plus(o), { toFixedNumber: 0 }) }, totalRewardsInTime() { const e = this.rewards.reduce((e, t) => e.plus(t.time), new Ut.a(0)); return Zt(e, { toFixedNumber: 0 }) }, totalRewardsInUsd() { const e = this.rewards.reduce((e, t) => e.plus(t.usd), new Ut.a(0)); return Zt(e, { toFixedNumber: 0 }) } }, methods: { rewardFormatted(e) { return Zt(e, { toFixedNumber: 2 }) } } }; o("570e"); const yc = b()(gc, [["render", Oc], ["__scopeId", "data-v-7bcb2a87"]]); var Bc = yc; const Cc = e => (Object(a["pushScopeId"])("data-v-51ba6455"), e = e(), Object(a["popScopeId"])(), e), Nc = { class: "subscribe-wrap" }, Sc = { class: "container subscribe-container" }, Vc = Cc(() => Object(a["createElementVNode"])("div", { class: "header" }, [Object(a["createElementVNode"])("div", null, "Sign up"), Object(a["createElementVNode"])("div", null, "for news")], -1)), Ac = { class: "content" }, xc = Cc(() => Object(a["createElementVNode"])("img", { src: "/static/images/landing/man.svg", alt: "Subscribe" }, null, -1)), Tc = { class: "text" }, Pc = Cc(() => Object(a["createElementVNode"])("div", { class: "description" }, [Object(a["createTextVNode"])(" Users start accruing rewards as soon as they lock their tokens in TimeWarp."), Object(a["createElementVNode"])("br"), Object(a["createTextVNode"])(" More information on the latest developments and updates, subscribe to our newsletter. ")], -1)), _c = { class: "label" }; function Lc(e, t) { const o = Object(a["resolveComponent"])("tg-button"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Nc, [Object(a["createElementVNode"])("div", Sc, [Vc, Object(a["createElementVNode"])("div", Ac, [xc, Object(a["createElementVNode"])("div", Tc, [Pc, Object(a["createElementVNode"])("div", _c, [e.success ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])("You have been successfully subscribed to notifications")], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Subscribe for notifications")], 64))]), Object(a["createElementVNode"])("form", { class: Object(a["normalizeClass"])({ hidden: e.success }), onSubmit: t[1] || (t[1] = Object(a["withModifiers"])((...t) => e.onSubmit && e.onSubmit(...t), ["prevent"])) }, [Object(a["withDirectives"])(Object(a["createElementVNode"])("input", { "onUpdate:modelValue": t[0] || (t[0] = t => e.email = t), type: "email", required: "", placeholder: "Your Email" }, null, 512), [[a["vModelText"], e.email]]), Object(a["createVNode"])(o, { type: "submit", class: "btn", loading: e.loading, disabled: e.loading }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Submit")]), _: 1 }, 8, ["loading", "disabled"])], 34)])])])]) } const Ic = { class: "button-wrap" }, Dc = { key: 0, class: "loader-wrap" }; function Fc(e, t) { const o = Object(a["resolveComponent"])("loader"); return Object(a["openBlock"])(), Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(e.tag), Object(a["mergeProps"])({ class: "tw-button" }, e.$attrs, { loading: e.loading, to: e.to }), { default: Object(a["withCtx"])(() => [Object(a["createElementVNode"])("span", Ic, [Object(a["renderSlot"])(e.$slots, "default", {}, void 0, !0)]), e.loading ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", Dc, [Object(a["createVNode"])(o, { class: "loader" })])) : Object(a["createCommentVNode"])("", !0)]), _: 3 }, 16, ["loading", "to"]) } const Mc = { class: "tw-loader" }, Wc = { xmlns: "http://www.w3.org/2000/svg", viewBox: "21.904761904761905 21.904761904761905 43.80952380952381 43.80952380952381" }, Rc = ["stroke-width"]; function Uc(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("span", Mc, [(Object(a["openBlock"])(), Object(a["createElementBlock"])("svg", Wc, [Object(a["createElementVNode"])("circle", { fill: "transparent", cx: "43.80952380952381", cy: "43.80952380952381", r: "20", "stroke-width": e.width, "stroke-dasharray": "125.664", "stroke-dashoffset": "125.66370614359172px" }, null, 8, Rc)]))]) } var Hc = { name: "tw-loader", props: { width: { type: [String, Number], default: 3.8095238095238093 } } }; o("d830"); const Zc = b()(Hc, [["render", Uc], ["__scopeId", "data-v-742e0090"]]); var Gc = Zc, qc = { name: "tw-button", components: { Loader: Gc }, props: { loading: Boolean, to: String }, computed: { tag() { return this.to ? "router-link" : this.$attrs.href ? "a" : "button" } } }; o("15fd"); const Kc = b()(qc, [["render", Fc], ["__scopeId", "data-v-58e1c1af"]]); var $c = Kc, zc = { name: "Subscribe", components: { TgButton: $c }, data() { return { email: "", loading: !1, success: !1 } }, methods: { ...Object(r["b"])({ subscribe: "subscribe" }), async onSubmit() { this.loading = !0, await this.subscribe(this.email), this.loading = !1, this.success = !0 } } }; o("7a56"); const Yc = b()(zc, [["render", Lc], ["__scopeId", "data-v-51ba6455"]]); var Xc = Yc; const Jc = e => (Object(a["pushScopeId"])("data-v-3901c93e"), e = e(), Object(a["popScopeId"])(), e), Qc = { class: "container faq-container" }, ea = Jc(() => Object(a["createElementVNode"])("div", { class: "header" }, "FAQ", -1)), ta = { class: "faq" }, oa = Jc(() => Object(a["createElementVNode"])("svg", { width: "14", height: "8", viewBox: "0 0 14 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })], -1)), ca = Jc(() => Object(a["createElementVNode"])("span", null, "What is TimeWarp?", -1)), aa = [oa, ca], na = { key: 0, class: "answer" }, la = Jc(() => Object(a["createElementVNode"])("svg", { width: "14", height: "8", viewBox: "0 0 14 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })], -1)), sa = Jc(() => Object(a["createElementVNode"])("span", null, "How can I store TIME?", -1)), ra = [la, sa], ia = { key: 0, class: "answer" }, da = Jc(() => Object(a["createElementVNode"])("svg", { width: "14", height: "8", viewBox: "0 0 14 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })], -1)), ba = Jc(() => Object(a["createElementVNode"])("span", null, "Where can I buy TIME?", -1)), pa = [da, ba], ua = { key: 0, class: "answer" }, ma = Jc(() => Object(a["createElementVNode"])("a", { href: "https://timex.io/buy-time", target: "_blank" }, "TimeX", -1)), ha = Jc(() => Object(a["createElementVNode"])("a", { href: "https://trade.kucoin.com/TIME-BTC", target: "_blank" }, "KuCoin", -1)), ka = Jc(() => Object(a["createElementVNode"])("a", { href: "https://app.uniswap.org/#/swap?outputCurrency=0x485d17a6f1b8780392d53d64751824253011a260&inputCurrency=ETH&use=V2", target: "_blank" }, "Uniswap", -1)), Oa = Jc(() => Object(a["createElementVNode"])("a", { href: "https://pancakeswap.finance/swap?outputCurrency=0x3b198e26E473b8faB2085b37978e36c9DE5D7f68", target: "_blank" }, "PancakeSwap", -1)), ja = Jc(() => Object(a["createElementVNode"])("a", { href: "https://quickswap.exchange/#/swap?inputCurrency=0x7ceb23fd6bc0add59e62ac25578270cff1b9f619&outputCurrency=0xb970bc1bd4fcd639c37aa8efd6713eadc577252f", target: "_blank" }, "QuickSwap", -1)), va = Jc(() => Object(a["createElementVNode"])("svg", { width: "14", height: "8", viewBox: "0 0 14 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })], -1)), wa = Jc(() => Object(a["createElementVNode"])("span", null, "How many TIME tokens are there?", -1)), fa = [va, wa], Ea = { key: 0, class: "answer" }, ga = Jc(() => Object(a["createElementVNode"])("a", { href: "https://coinmarketcap.com/currencies/chrono-tech/" }, "710,113 TIME", -1)), ya = Jc(() => Object(a["createElementVNode"])("svg", { width: "14", height: "8", viewBox: "0 0 14 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, [Object(a["createElementVNode"])("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })], -1)), Ba = Jc(() => Object(a["createElementVNode"])("span", null, "How will staking rewards be distributed?", -1)), Ca = [ya, Ba], Na = { key: 0, class: "answer" }; function Sa(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Qc, [ea, Object(a["createElementVNode"])("div", ta, [Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["faq-block", { active: -1 !== e.showed.indexOf(1) }]) }, [Object(a["createElementVNode"])("div", { class: "question", onClick: t[0] || (t[0] = t => e.onClick(1)) }, aa), Object(a["createVNode"])(a["Transition"], { name: "fade", duration: { enter: 200, leave: 1 } }, { default: Object(a["withCtx"])(() => [-1 !== e.showed.indexOf(1) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", na, " TimeWarp is a staking programme for TIME, the native token of the Chrono.tech ecosystem. By locking TIME tokens in the TimeWarp smart contract, you’ll receive regular rewards. ")) : Object(a["createCommentVNode"])("", !0)]), _: 1 })], 2), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["faq-block", { active: -1 !== e.showed.indexOf(2) }]) }, [Object(a["createElementVNode"])("div", { class: "question", onClick: t[1] || (t[1] = t => e.onClick(2)) }, ra), Object(a["createVNode"])(a["Transition"], { name: "fade", duration: { enter: 200, leave: 1 } }, { default: Object(a["withCtx"])(() => [-1 !== e.showed.indexOf(2) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", ia, " TIME is an ERC20 token and can be held in any regular Ethereum wallet. To lock TIME in the TimeWarp smart contract, you’ll also need a wallet capable of interacting with decentralised applications – initially MetaMask. ")) : Object(a["createCommentVNode"])("", !0)]), _: 1 })], 2), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["faq-block", { active: -1 !== e.showed.indexOf(3) }]) }, [Object(a["createElementVNode"])("div", { class: "question", onClick: t[2] || (t[2] = t => e.onClick(3)) }, pa), Object(a["createVNode"])(a["Transition"], { name: "fade", duration: { enter: 200, leave: 1 } }, { default: Object(a["withCtx"])(() => [-1 !== e.showed.indexOf(3) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", ua, [Object(a["createTextVNode"])(" Time can be bought on "), ma, Object(a["createTextVNode"])(", "), ha, Object(a["createTextVNode"])(", "), ka, Object(a["createTextVNode"])(", "), Oa, Object(a["createTextVNode"])(", and "), ja, Object(a["createTextVNode"])(". ")])) : Object(a["createCommentVNode"])("", !0)]), _: 1 })], 2), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["faq-block", { active: -1 !== e.showed.indexOf(4) }]) }, [Object(a["createElementVNode"])("div", { class: "question", onClick: t[3] || (t[3] = t => e.onClick(4)) }, fa), Object(a["createVNode"])(a["Transition"], { name: "fade", duration: { enter: 200, leave: 1 } }, { default: Object(a["withCtx"])(() => [-1 !== e.showed.indexOf(4) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Ea, [Object(a["createTextVNode"])(" There are a total of "), ga, Object(a["createTextVNode"])(" tokens – far less than the supply of tokens for most other major blockchain platforms. ")])) : Object(a["createCommentVNode"])("", !0)]), _: 1 })], 2), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["faq-block", { active: -1 !== e.showed.indexOf(5) }]) }, [Object(a["createElementVNode"])("div", { class: "question", onClick: t[4] || (t[4] = t => e.onClick(5)) }, Ca), Object(a["createVNode"])(a["Transition"], { name: "fade", duration: { enter: 200, leave: 1 } }, { default: Object(a["withCtx"])(() => [-1 !== e.showed.indexOf(5) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Na, " TIME tokens will be bought from the open market using a proportion of revenues generated by services in the Chrono.tech ecosystem. These tokens will be held in a designated wallet, and distributed weekly to users who lock their TIME in a smart contract. Users will receive rewards in proportion to the amount of TIME they lock, and a multiple determined by how long they commit to locking tokens. ")) : Object(a["createCommentVNode"])("", !0)]), _: 1 })], 2)])]) } var Va = { name: "FAQ", data() { return { showed: [] } }, methods: { onClick(e) { const t = this.showed.indexOf(e); -1 === t ? this.showed.push(e) : this.showed.splice(t, 1) } } }; o("3bf9"); const Aa = b()(Va, [["render", Sa], ["__scopeId", "data-v-3901c93e"]]); var xa = Aa; const Ta = e => (Object(a["pushScopeId"])("data-v-1b22e25c"), e = e(), Object(a["popScopeId"])(), e), Pa = { class: "footer" }, _a = { class: "copyright" }, La = Ta(() => Object(a["createElementVNode"])("span", null, "©", -1)), Ia = { class: "links" }, Da = Ta(() => Object(a["createElementVNode"])("a", { href: "https://docs.timewarp.finance", target: "_blank" }, "Docs", -1)); function Fa(e, t) { const o = Object(a["resolveComponent"])("router-link"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Pa, [Object(a["createElementVNode"])("div", _a, [La, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.year) + " TimeWarp — All Rights Reserved", 1)]), Object(a["createElementVNode"])("div", Ia, [Object(a["createVNode"])(o, { to: "/" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Home")]), _: 1 }), Object(a["createVNode"])(o, { to: "/pools" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Pools")]), _: 1 }), Da])]) } var Ma = { name: "Footer", data() { return { year: (new Date).getFullYear() } } }; o("d5c8"); const Wa = b()(Ma, [["render", Fa], ["__scopeId", "data-v-1b22e25c"]]); var Ra = Wa, Ua = { name: "Home", components: { HeaderBlock: Me, Intro: ze, Benefits: ot, TimeBlock: Xt, Projects: jo, StackingResults: Bc, Subscribe: Xc, Faq: xa, FooterBlock: Ra }, beforeCreate() { document.title = "TIME Staking | TimeWarp" } }; const Ha = b()(Ua, [["render", v]]); var Za = Ha; const Ga = e => (Object(a["pushScopeId"])("data-v-6a3b02da"), e = e(), Object(a["popScopeId"])(), e), qa = { class: "page-private page-pools" }, Ka = { class: "container" }, $a = Ga(() => Object(a["createElementVNode"])("h1", null, "Pools", -1)), za = { class: "top-info" }, Ya = Ga(() => Object(a["createElementVNode"])("span", null, "View pools with already staked balances only", -1)), Xa = Object(a["createStaticVNode"])('<div class="icon" data-v-6a3b02da><img src="/static/images/pools/wallet.svg" alt="Connect Wallet" data-v-6a3b02da></div><div class="text" data-v-6a3b02da><div class="big-text" data-v-6a3b02da>Connect your wallet</div><div class="small-text" data-v-6a3b02da>to view balances and start staking</div></div>', 2), Ja = [Xa], Qa = { key: 0, class: "blockchains" }, en = { key: 0, class: "blockchain" }, tn = Ga(() => Object(a["createElementVNode"])("div", { class: "description" }, [Object(a["createElementVNode"])("img", { src: "/static/images/pools/ethereum.svg", alt: "Ethereum Network" }), Object(a["createElementVNode"])("span", null, "List of pools on the Ethereum Network")], -1)), on = { class: "blockchain" }, cn = { key: 0, class: "description" }, an = Ga(() => Object(a["createElementVNode"])("img", { src: "/static/images/pools/bsc.svg", alt: "BNB Chain Network" }, null, -1)), nn = Ga(() => Object(a["createElementVNode"])("span", null, "List of pools on the BNB Chain Network", -1)), ln = [an, nn], sn = { class: "blockchain" }, rn = { key: 0, class: "description" }, dn = Ga(() => Object(a["createElementVNode"])("img", { src: "/static/images/logo/polygon.svg", alt: "Polygon Network" }, null, -1)), bn = Ga(() => Object(a["createElementVNode"])("span", null, "List of pools on the Polygon Network", -1)), pn = [dn, bn], un = { key: 1, class: "empty" }, mn = Ga(() => Object(a["createElementVNode"])("img", { src: "/static/images/pools/empty.svg", alt: "Empty" }, null, -1)), hn = Ga(() => Object(a["createElementVNode"])("div", null, "You have no pools with already staked amount", -1)), kn = [mn, hn]; function On(e, t) { const o = Object(a["resolveComponent"])("header-block"), c = Object(a["resolveComponent"])("tw-switch"), n = Object(a["resolveComponent"])("pool"), l = Object(a["resolveComponent"])("footer-block"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", qa, [Object(a["createVNode"])(o), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["page-content", { connected: e.isActiveWallet }]) }, [Object(a["createElementVNode"])("div", Ka, [$a, Object(a["createElementVNode"])("div", za, [Object(a["createElementVNode"])("div", { class: "pool-filter", onClick: t[0] || (t[0] = (...t) => e.onPoolSwitchClick && e.onPoolSwitchClick(...t)) }, [Object(a["createVNode"])(c, { class: "switch", modelValue: e.showOnlyStackedPools, "onUpdate:modelValue": e.onPoolSwitchClick }, null, 8, ["modelValue", "onUpdate:modelValue"]), Ya]), e.isActiveWallet ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { key: 0, class: "connect-wallet", onClick: t[1] || (t[1] = (...t) => e.onConnectClick && e.onConnectClick(...t)) }, Ja))]), e.filteredEthPools.length > 0 || e.filteredBscPools.length > 0 || e.filteredPolygonPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Qa, [e.filteredEthPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", en, [tn, (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], null, Object(a["renderList"])(e.filteredEthPools, e => (Object(a["openBlock"])(), Object(a["createBlock"])(n, { pool: e, key: e.name }, null, 8, ["pool"]))), 128))])) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", on, [e.filteredBscPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", cn, ln)) : Object(a["createCommentVNode"])("", !0), (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], null, Object(a["renderList"])(e.filteredBscPools, e => (Object(a["openBlock"])(), Object(a["createBlock"])(n, { pool: e, key: e.name }, null, 8, ["pool"]))), 128))]), Object(a["createElementVNode"])("div", sn, [e.filteredPolygonPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", rn, pn)) : Object(a["createCommentVNode"])("", !0), (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], null, Object(a["renderList"])(e.filteredPolygonPools, e => (Object(a["openBlock"])(), Object(a["createBlock"])(n, { pool: e, key: e.name }, null, 8, ["pool"]))), 128))])])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", un, kn))])], 2), Object(a["createVNode"])(l)]) } var jn = o("ade3"), vn = o("d370"), wn = o.n(vn); o("d9e2"); class fn { constructor(e, t) { const o = [], c = e => { e.propTypes && o.push(e.propTypes); const t = Object.getPrototypeOf(e); t && c(t) }; t ? o.push(t) : c(this.constructor); const { error: a, value: n } = wn.a.object(Object.assign({}, ...o.reverse())).options({ stripUnknown: !0 }).validate(e || {}); if (a) throw new Error(a); Object.assign(this, n) } } var En = fn; class gn extends En { get isLpPool() { return this.erc20AddressDeposit.toLowerCase() !== this.erc20AddressReward.toLowerCase() } } Object(jn["a"])(gn, "propTypes", { name: wn.a.string(), blockchain: wn.a.number().valid(U, H, Z), address: wn.a.string(), unlockAll: wn.a.bool(), erc20AddressDeposit: wn.a.string(), erc20AddressReward: wn.a.string(), icon: wn.a.string(), lpAsset0Address: wn.a.string(), lpAsset1Address: wn.a.string() }); var yn = gn; const Bn = [...JSON.parse('[{"name":"TIME","address":"0x59f2757Ae3a1BAa21e4f397a28985Ceb431c676b","erc20AddressDeposit":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","erc20AddressReward":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","icon":"/static/images/pools/time-purple.svg","unlockAll":false},{"name":"TIME-BNB","address":"0xC48467BA55cF0B777978F19701329c87949EFD3C","erc20AddressDeposit":"0xa5ebD19961CF4B8aF06a9d9D2B91d73B48744867","erc20AddressReward":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","icon":"/static/images/pools/pancake.svg","unlockAll":false,"lpAsset0Address":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","lpAsset1Address":"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"}]').map(e => new yn({ ...e, blockchain: H })), ...JSON.parse('[{"name":"TIME","address":"0xa106dd3Bc6C42B3f28616FfAB615c7d494Eb629D","erc20AddressDeposit":"0x485d17A6f1B8780392d53D64751824253011A260","erc20AddressReward":"0x485d17A6f1B8780392d53D64751824253011A260","icon":"/static/images/pools/time-purple.svg","unlockAll":false},{"name":"TIME-ETH","address":"0x55c825983783c984890bA89F7d7C9575814D83F2","erc20AddressDeposit":"0x1d474d4B4A62b0Ad0C819841eB2C74d1c5050524","erc20AddressReward":"0x485d17A6f1B8780392d53D64751824253011A260","icon":"/static/images/pools/uniswap.svg","unlockAll":false,"lpAsset0Address":"0x485d17A6f1B8780392d53D64751824253011A260","lpAsset1Address":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"}]').map(e => new yn({ ...e, blockchain: U })), ...JSON.parse('[{"name":"TIME","address":"0xD9286F3211B00232c0d782F382507929738d131e","erc20AddressDeposit":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","erc20AddressReward":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","icon":"/static/images/pools/time-purple.svg","unlockAll":false},{"name":"TIME-WETH","address":"0x98Fd21fec5E72EafE0dE81741aC76C3D19615F57","erc20AddressDeposit":"0x86Fd28F9E3EDEA88965eDbeF5DDe0EA6e3ECE530","erc20AddressReward":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","icon":"/static/images/pools/quickswap.png","unlockAll":false,"lpAsset0Address":"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619","lpAsset1Address":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f"}]').map(e => new yn({ ...e, blockchain: Z }))], Cn = [...JSON.parse('[{"name":"TIME","address":"0x867194D66D7021e19279d8f1d319E3aaf5F836a9","erc20AddressDeposit":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","erc20AddressReward":"0x60322971a672B81BccE5947706D22c19dAeCf6Fb","icon":"/static/images/pools/time-purple.svg","unlockAll":true}]').map(e => new yn({ ...e, blockchain: H }))], Nn = e => (Object(a["pushScopeId"])("data-v-25ed44a5"), e = e(), Object(a["popScopeId"])(), e), Sn = { class: "pool" }, Vn = { class: "top-block" }, An = { class: "pool-icon" }, xn = ["src"], Tn = { class: "pools-info" }, Pn = { class: "stat pool-name" }, _n = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "Pool", -1)), Ln = { class: "value" }, In = ["href"], Dn = Nn(() => Object(a["createElementVNode"])("span", null, "Contract", -1)), Fn = { class: "stat pool-apy" }, Mn = { class: "label" }, Wn = Nn(() => Object(a["createElementVNode"])("span", null, "APY", -1)), Rn = { key: 1, class: "value" }, Un = { key: 1, class: "value" }, Hn = { class: "stat pool-tvl" }, Zn = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "TVL", -1)), Gn = { key: 0, class: "value" }, qn = { class: "usd" }, Kn = { key: 1, class: "value" }, $n = { key: 1, class: "value" }, zn = { class: "usd" }, Yn = { class: "usd" }, Xn = { key: 1, class: "value" }, Jn = Nn(() => Object(a["createElementVNode"])("div", { class: "calculator-empty" }, null, -1)), Qn = { key: 0, class: "icon-btn" }, el = { key: 0, class: "bottom-block" }, tl = { class: "action" }, ol = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "Wallet Balance", -1)), cl = { class: "value" }, al = { class: "buttons two" }, nl = { class: "action" }, ll = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "Already Staked", -1)), sl = { class: "value" }, rl = { class: "buttons" }, il = { class: "action" }, dl = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "Rewards", -1)), bl = { class: "value" }, pl = { class: "buttons two" }, ul = { class: "action" }, ml = Nn(() => Object(a["createElementVNode"])("div", { class: "label" }, "Staking Info", -1)), hl = { class: "value" }, kl = Nn(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "End Lock: ", -1)), Ol = { class: "value" }, jl = Nn(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Lock Period: ", -1)), vl = { class: "value" }, wl = Nn(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Multiplier: ", -1)), fl = { class: "value" }, El = Nn(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Pool Share: ", -1)), gl = { class: "value" }, yl = Nn(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Multiplied Pool Share: ", -1)); function Bl(e, t) { var o, c; const n = Object(a["resolveComponent"])("tw-icon"), l = Object(a["resolveComponent"])("tw-loader"), s = Object(a["resolveComponent"])("tw-button"), r = Object(a["resolveDirective"])("popover"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Sn, [Object(a["createElementVNode"])("div", Vn, [Object(a["createElementVNode"])("div", An, [Object(a["createElementVNode"])("img", { src: e.pool.icon, alt: "Pool Icon" }, null, 8, xn)]), Object(a["createElementVNode"])("div", Tn, [Object(a["createElementVNode"])("div", Pn, [_n, Object(a["createElementVNode"])("div", Ln, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.pool.name) + " ", 1), e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "contract", href: e.contractLink, target: "_blank", rel: "noopener" }, [Dn, Object(a["createVNode"])(n, { class: "blank", icon: "blank" })], 8, In)) : Object(a["createCommentVNode"])("", !0)])]), Object(a["createElementVNode"])("div", Fn, [Object(a["createElementVNode"])("div", Mn, [Wn, e.apyText ? Object(a["withDirectives"])((Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0, class: "icon", icon: "info" }, null, 512)), [[r, e.apyText]]) : Object(a["createCommentVNode"])("", !0)]), e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Rn, Object(a["toDisplayString"])(e.poolRewardApy) + "%", 1))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Un, "n/a"))]), Object(a["createElementVNode"])("div", Hn, [Zn, e.isLpPool ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", $n, [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createElementVNode"])("div", null, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormattedAsset0) + " " + Object(a["toDisplayString"])(e.currencyAsset0.name) + " ", 1), Object(a["createElementVNode"])("span", zn, "$" + Object(a["toDisplayString"])(e.tvlAsset0Usd), 1)]), Object(a["createElementVNode"])("div", null, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormattedAsset1) + " " + Object(a["toDisplayString"])(e.currencyAsset1.name) + " ", 1), Object(a["createElementVNode"])("span", Yn, "$" + Object(a["toDisplayString"])(e.tvlAsset1Usd), 1)])], 64))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Xn, "n/a"))])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Gn, [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormatted) + " " + Object(a["toDisplayString"])(e.pool.name) + " ", 1), Object(a["createElementVNode"])("span", qn, "$" + Object(a["toDisplayString"])(e.tvlUsd), 1)], 64))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Kn, "n/a"))]))]), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["stat pool-actions", { inactive: !e.pool.active }]) }, [Jn, Object(a["createVNode"])(s, { onClick: e.toggleStacking, disabled: !e.pool.active, class: Object(a["normalizeClass"])(["button", { active: e.open }]) }, { default: Object(a["withCtx"])(() => [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Qn, [Object(a["createTextVNode"])(" Staking "), Object(a["createVNode"])(n, { class: "arrow", icon: "arrow" })])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Coming Soon")], 64))]), _: 1 }, 8, ["onClick", "disabled", "class"])], 2)])]), e.open ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", el, [Object(a["createElementVNode"])("div", tl, [ol, Object(a["createElementVNode"])("div", cl, Object(a["toDisplayString"])(e.balanceFormatted) + " " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1), Object(a["createElementVNode"])("div", al, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.stake, disabled: e.stakeDisabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Deposit")]), _: 1 }, 8, ["onClick", "disabled"]), Object(a["createVNode"])(s, { href: e.currencyDeposit.getLink, onClick: e.onGetLpClick, target: "_blank", rel: "noopener", class: "button" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Get " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1)]), _: 1 }, 8, ["href", "onClick"])])]), Object(a["createElementVNode"])("div", nl, [ll, Object(a["createElementVNode"])("div", sl, Object(a["toDisplayString"])(e.stackedBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1), Object(a["createElementVNode"])("div", rl, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.withdraw, disabled: !e.withdrawEnabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Withdraw")]), _: 1 }, 8, ["onClick", "disabled"])])]), Object(a["createElementVNode"])("div", il, [dl, Object(a["createElementVNode"])("div", bl, Object(a["toDisplayString"])(e.rewardBalanceFormatted) + " TIME", 1), Object(a["createElementVNode"])("div", pl, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.harvest, disabled: e.harvestDisabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Harvest")]), _: 1 }, 8, ["onClick", "disabled"]), e.isLpPool ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createBlock"])(s, { key: 0, class: "button button-transparent", onClick: e.compound, disabled: e.compoundDisabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])(" Compound ")]), _: 1 }, 8, ["onClick", "disabled"]))])]), Object(a["createElementVNode"])("div", ul, [e.userLock !== e.NULL_LOCK ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [ml, Object(a["createElementVNode"])("div", hl, [kl, e.expirationTime ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.expirationTimeFormatted), 1)], 64)) : (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" }))]), Object(a["createElementVNode"])("div", Ol, [jl, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.LOCK_PERIOD_NAMES[e.userLock]), 1)]), Object(a["createElementVNode"])("div", vl, [wl, Object(a["createElementVNode"])("span", null, Object(a["toDisplayString"])(null === (o = e.LOCK_MULTIPLIERS) || void 0 === o || null === (c = o[e.userLock]) || void 0 === c ? void 0 : c.text), 1)]), Object(a["createElementVNode"])("div", fl, [El, null === e.totalStackedInPool || 0 === e.stackedBalance ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.totalShareFormatted), 1)], 64))]), Object(a["createElementVNode"])("div", gl, [yl, null === e.totalStackedInPoolWithMultipliers || 0 === e.stackedBalance ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.totalShareWithMultiplierFormatted), 1)], 64))])], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)]) } const Cl = e => (Object(a["pushScopeId"])("data-v-1f2f6481"), e = e(), Object(a["popScopeId"])(), e), Nl = Cl(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Deposit", -1)), Sl = { class: "balance" }, Vl = { class: "info" }, Al = Cl(() => Object(a["createElementVNode"])("span", { class: "label" }, "Wallet Balance:", -1)), xl = { class: "value" }, Tl = { class: "lock-select" }, Pl = { class: "info multiplier" }, _l = Cl(() => Object(a["createElementVNode"])("span", { class: "label" }, "Multiplier:", -1)), Ll = { class: "value" }, Il = { key: 0, class: "info reward" }, Dl = Cl(() => Object(a["createElementVNode"])("span", { class: "label" }, "Available Reward:", -1)), Fl = { class: "value" }, Ml = { key: 1, class: "error" }, Wl = { key: 1, class: "tx-status" }, Rl = { class: "process-header" }, Ul = { class: "process-text" }, Hl = ["href"], Zl = ["href"], Gl = { key: 0, class: "error-msg" }; function ql(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-numeric-input-2"), n = Object(a["resolveComponent"])("tw-numeric-input"), l = Object(a["resolveComponent"])("tw-slider"), s = Object(a["resolveComponent"])("tw-button"), r = Object(a["resolveComponent"])("tw-process-state"), i = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(i, { class: "root stake" }, { default: Object(a["withCtx"])(() => { var i, d; return [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_STAKE ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Nl, Object(a["createElementVNode"])("form", { onSubmit: t[3] || (t[3] = Object(a["withModifiers"])((...t) => e.stake && e.stake(...t), ["prevent"])) }, [Object(a["createElementVNode"])("div", Sl, [Object(a["createElementVNode"])("div", Vl, [Al, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", xl, Object(a["toDisplayString"])(e.stakeBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currency.name), 1)]), Object(a["createElementVNode"])("button", { class: "max-btn", type: "button", onClick: t[0] || (t[0] = (...t) => e.max && e.max(...t)) }, "Max")]), Object(a["createVNode"])(c, { min: "0.000000000000000001", max: e.stakeBalance, class: "amount-input", label: "Deposit Amount", modelValue: e.amount, "onUpdate:modelValue": t[1] || (t[1] = t => e.amount = t) }, null, 8, ["max", "modelValue"]), Object(a["createElementVNode"])("div", Tl, [Object(a["createVNode"])(n, { class: "lock-input input", label: "Locking Type", postfix: e.lockingTypePostfix, precision: 0, modelValue: e.lockingTypeValue, disabled: "" }, null, 8, ["postfix", "modelValue"]), Object(a["createVNode"])(l, { class: "slider", modelValue: e.lockType, "onUpdate:modelValue": t[2] || (t[2] = t => e.lockType = t), vData: e.lockPeriods }, null, 8, ["modelValue", "vData"])]), Object(a["createElementVNode"])("div", Pl, [_l, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", Ll, Object(a["toDisplayString"])(null === (i = e.LOCK_MULTIPLIERS) || void 0 === i || null === (d = i[e.lockType]) || void 0 === d ? void 0 : d.text), 1)]), +e.rewardBalance ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Il, [Dl, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", Fl, Object(a["toDisplayString"])(e.rewardBalanceFormatted) + " TIME", 1)])) : Object(a["createCommentVNode"])("", !0), e.hasValidationError ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Ml, " Locking type cannot be reduced ")) : Object(a["createCommentVNode"])("", !0), e.approveActive ? (Object(a["openBlock"])(), Object(a["createBlock"])(s, { key: 2, class: "stake-btn", type: "submit", disabled: e.hasValidationError, loading: !e.init || e.approving }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("APPROVE")]), _: 1 }, 8, ["disabled", "loading"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 3 }, [+e.rewardBalance ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.isLpPool ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createBlock"])(s, { key: 0, class: "stake-btn", onClick: e.stakeAndCompound, type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT & COMPOUND")]), _: 1 }, 8, ["onClick", "disabled", "loading"])), Object(a["createVNode"])(s, { class: "stake-btn", onClick: e.stakeAndHarvest, type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT & HARVEST")]), _: 1 }, 8, ["onClick", "disabled", "loading"])], 64)) : (Object(a["openBlock"])(), Object(a["createBlock"])(s, { key: 1, class: "stake-btn", type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT")]), _: 1 }, 8, ["disabled", "loading"]))], 64))], 32)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_PENDING, e.STEP_APPROVE_SUCCESS, e.STEP_APPROVE_FAIL, e.STEP_STAKE_PENDING, e.STEP_STAKE_SUCCESS, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Wl, [[e.STEP_APPROVE_PENDING, e.STEP_STAKE_PENDING].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 0 })) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_SUCCESS, e.STEP_STAKE_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Rl, [e.step === e.STEP_APPROVE_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Approving... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_STAKE_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Depositing... ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_SUCCESS, e.STEP_STAKE_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 3 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", Ul, [[e.STEP_APPROVE_PENDING, e.STEP_STAKE_PENDING].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Hl)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_APPROVE_SUCCESS ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Successfully approved ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_STAKE_SUCCESS ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Zl)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 3 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Gl, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))] }), _: 1 }) } const Kl = e => (Object(a["pushScopeId"])("data-v-5189c87c"), e = e(), Object(a["popScopeId"])(), e), $l = { class: "wrong-network" }, zl = { class: "tx-status" }, Yl = Kl(() => Object(a["createElementVNode"])("div", { class: "process-header" }, " Wrong network ", -1)), Xl = { class: "process-text" }; function Jl(e, t) { const o = Object(a["resolveComponent"])("tw-process-state"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", $l, [Object(a["createElementVNode"])("div", zl, [Object(a["createVNode"])(o, { error: "" }), Yl, Object(a["createElementVNode"])("div", Xl, " Select correct network for " + Object(a["toDisplayString"])(e.requiredBlockchainName) + " blockchain ", 1)])]) } var Ql = { name: "wrong-network", props: { requiredBlockchain: Number }, computed: { requiredBlockchainName() { return q[this.requiredBlockchain] } } }; o("8b74"); const es = b()(Ql, [["render", Jl], ["__scopeId", "data-v-5189c87c"]]); var ts = es; class os extends En { get isBaseCurrency() { return "ETH" === this.name && this.blockchain === U || "BNB" === this.name && this.blockchain === H } get baseUnits() { return Math.pow(10, this.decimals) } static fromEnv(e) { return new os({ ...e, secondName: e.secondName || e.name }) } } Object(jn["a"])(os, "propTypes", { name: wn.a.string(), secondName: wn.a.string(), blockchain: wn.a.number().valid(U, H, Z), address: wn.a.string().default("0x0000000000000000000000000000000000000000"), decimals: wn.a.number().default(18), digitsAfterDecimalShow: wn.a.number().default(2), digitsAfterDecimalShowInTvl: wn.a.number().default(0), getLink: wn.a.string().default("https://app.uniswap.org/#/swap") }); var cs = os; const as = [...JSON.parse('[{"name":"BNB","address":"0x0000000000000000000000000000000000000000","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2},{"name":"TIME","address":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","decimals":8,"digitsAfterDecimalShow":2,"digitsAfterDecimalShowInTvl":0,"getLink":"https://pancakeswap.finance/swap?outputCurrency=0x3b198e26E473b8faB2085b37978e36c9DE5D7f68"},{"name":"LP TIME-BNB","address":"0xa5ebD19961CF4B8aF06a9d9D2B91d73B48744867","decimals":18,"digitsAfterDecimalShow":8,"digitsAfterDecimalShowInTvl":8,"getLink":"https://pancakeswap.finance/add/bnb/0x3b198e26E473b8faB2085b37978e36c9DE5D7f68"},{"name":"BNB","secondName":"WBNB","address":"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2},{"name":"MDAO","address":"0x60322971a672B81BccE5947706D22c19dAeCf6Fb","decimals":18,"digitsAfterDecimalShow":2,"digitsAfterDecimalShowInTvl":0,"getLink":"https://pancakeswap.finance/swap?outputCurrency=0x3b198e26E473b8faB2085b37978e36c9DE5D7f68"}]').map(e => cs.fromEnv({ ...e, blockchain: H })), ...JSON.parse('[{"name":"ETH","address":"0x0000000000000000000000000000000000000000","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2},{"name":"TIME","address":"0x485d17A6f1B8780392d53D64751824253011A260","decimals":8,"digitsAfterDecimalShow":2,"digitsAfterDecimalShowInTvl":0,"getLink":"https://app.uniswap.org/#/swap?inputCurrency=ETH&outputCurrency=0x485d17a6f1b8780392d53d64751824253011a260&use=V2"},{"name":"LP TIME-ETH","address":"0x1d474d4B4A62b0Ad0C819841eB2C74d1c5050524","decimals":18,"digitsAfterDecimalShow":8,"digitsAfterDecimalShowInTvl":8,"getLink":"https://app.uniswap.org/#/add/v2/ETH/0x485d17A6f1B8780392d53D64751824253011A260"},{"name":"ETH","secondName":"WETH","address":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2}]').map(e => cs.fromEnv({ ...e, blockchain: U })), ...JSON.parse('[{"name":"MATIC","address":"0x0000000000000000000000000000000000000000","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2},{"name":"TIME","address":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","decimals":8,"digitsAfterDecimalShow":2,"digitsAfterDecimalShowInTvl":0,"getLink":"https://quickswap.exchange/#/swap?inputCurrency=0x7ceb23fd6bc0add59e62ac25578270cff1b9f619&outputCurrency=0xb970bc1bd4fcd639c37aa8efd6713eadc577252f"},{"name":"LP TIME-WETH","address":"0x86Fd28F9E3EDEA88965eDbeF5DDe0EA6e3ECE530","decimals":18,"digitsAfterDecimalShow":8,"digitsAfterDecimalShowInTvl":8,"getLink":"https://quickswap.exchange/#/add/0x7ceb23fd6bc0add59e62ac25578270cff1b9f619/0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f"},{"name":"MATIC","secondName":"WMATIC","address":"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2},{"name":"ETH","secondName":"WETH","address":"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619","decimals":18,"digitsAfterDecimalShow":5,"digitsAfterDecimalShowInTvl":2}]').map(e => cs.fromEnv({ ...e, blockchain: Z }))], ns = ({ name: e, secondName: t, address: o, blockchain: c = H }) => as.find(a => (a.address === o || a.name === e || a.secondName === t) && a.blockchain === c); var ls = o("8c9f"), ss = o("380b"), rs = o.n(ss); function is({ receipt: e, signature: t, eventAddress: o = null }) { if (!e) return null; const c = ((null === e || void 0 === e ? void 0 : e.logs) || []).filter(e => { var t; return null === o || (null === e || void 0 === e || null === (t = e.address) || void 0 === t ? void 0 : t.toLowerCase()) === (null === o || void 0 === o ? void 0 : o.toLowerCase()) }); for (const a of c) for (const e of (null === a || void 0 === a ? void 0 : a.topics) || []) if (e === t) return !0; return !1 } function ds(e) { let t = null; try { var o, c, a; const n = Object(ls["serializeError"])(e); if (t = null === n || void 0 === n ? void 0 : n.message, null === n || void 0 === n || !n.message) return t; const l = rs()(null === n || void 0 === n ? void 0 : n.message); return t = l.length <= 0 ? t : JSON.stringify(l[0]), l.length <= 0 ? t : (null === (o = l[0]) || void 0 === o ? void 0 : o.message) || (null === (c = l[0]) || void 0 === c || null === (a = c.originalError) || void 0 === a ? void 0 : a.message) || (null === n || void 0 === n ? void 0 : n.message) } catch (n) { return console.error(n), t } } var bs = o("faa1"), ps = o.n(bs), us = o("5ba3"); const ms = "undefined" !== typeof window && window.ethereum, hs = new ps.a; function ks() { return ms } function Os() { return !!ms && ms.isMetaMask } async function js() { if (Os()) { const e = await ms.request({ method: "eth_requestAccounts" }); return Object(us["toChecksumAddress"])(e[0]) } return null } async function vs() { if (Os()) { const e = await ms.request({ method: "net_version" }); return parseInt(e) } return null } async function ws(e) { if (e !== H) return; const t = "", o = [{ chainId: "0x" + e.toString(16), chainName: "BNB Chain" + t, nativeCurrency: { name: "Binance", symbol: "BNB", decimals: 18 }, rpcUrls: ["https://bsc-dataseed.binance.org/"], blockExplorerUrls: ["https://bscscan.com"] }]; await ms.request({ method: "wallet_addEthereumChain", params: o }) } ms && (ms.autoRefreshOnNetworkChange = !1, ms.on("accountsChanged", async e => { e && Array.isArray(e) && e.length > 0 && hs.emit("accountsChanged", e.map(e => Object(us["toChecksumAddress"])(e))), e && Array.isArray(e) && 0 === e.length && hs.emit("disconnect") }), ms.on("chainChanged", e => { e && hs.emit("chainChanged", parseInt(e, 16)) }), ms.on("connect", () => { hs.emit("connect") }), ms.on("disconnect", () => { hs.emit("disconnect") })); let fs = null, Es = null; const gs = new ps.a; function ys() { var e; Bs({ topic: null === (e = fs) || void 0 === e ? void 0 : e.session }), fs = null, gs.removeAllListeners() } function Bs({ topic: e, hardReset: t = !1 }) { (Es && Es.topic === e || t) && (Es = null) } async function Cs(e = !1) { if (!fs || e) { ys(); const e = (await o.e("@walletconnect/universal-provider").then(o.bind(null, "b331"))).default; if (fs = await e.init({ projectId: X, relayUrl: J, metadata: { name: Q, description: ee, url: window.location.host, icons: [window.location.origin + "/img/wc-bg.png"] } }), window.provider = fs, console.log("provider", fs), "undefined" === typeof fs) throw new Error("WalletConnect is not initialized"); return fs.on("display_uri", e => { console.log("EVENT", "QR Code Modal open"), gs.emit("walletUri", e) }), fs.on("session_ping", ({ id: e, topic: t }) => { console.log("EVENT", "session_ping"), console.log(e, t) }), fs.on("connect", e => { console.log("EVENT", "connect", e) }), fs.on("disconnect", e => { console.log("EVENT", "disconnect", e) }), fs.on("session_event", ({ event: e, chainId: t }) => { console.log("EVENT", "session_event"), console.log(e, t) }), fs.on("session_update", ({ topic: e, session: t }) => { console.log("EVENT", "session_updated") }), fs.on("session_delete", ({ id: e, topic: t }) => { console.log("EVENT", "session_deleted"), Bs({ topic: t }), gs.emit("disconnect") }), await As(), fs } return fs } function Ns() { return fs && Es ? Es : null } async function Ss(e) { if (fs) { const t = { eip155: { methods: ["eth_sendTransaction", "eth_signTransaction", "eth_sign", "personal_sign", "eth_signTypedData"], chains: e.map(e => "eip155:" + e), events: ["chainChanged", "accountsChanged"], rpcMap: { [U]: K[U], [H]: K[H], [Z]: K[Z] } } }; Es = await fs.connect({ namespaces: t }), gs.emit("connect") } } async function Vs(e) { if (!fs) throw new ReferenceError("WalletConnect Provider is not initialized"); const t = Object.values(e.namespaces).map(e => e.accounts).flat(); console.log("Restored namespace accounts", t), Es = e } async function As() { var e; if ("undefined" === typeof fs) throw new Error("WalletConnect is not initialized"); if (!Es && null !== (e = fs) && void 0 !== e && e.session) { var t; const e = null === (t = fs) || void 0 === t ? void 0 : t.session; await Vs(e) } } async function xs() { if (!fs || !Es) return { address: null, chainIds: null }; const e = Object.values(Es.namespaces).map(e => e.accounts).flat(), t = Object.values(e).map(e => e.split(":")).map(e => parseInt(e[1], 10)), o = e[0].split(":"), c = await _s({}); return { address: c.utils.toChecksumAddress(o[2]), listChainIds: t } } const Ts = {}, Ps = e => { e.eth.transactionConfirmationBlocks = 1, e.transactionPollingTimeout = 3e3, e.eth.transactionPollingTimeout = 3e3, e.eth.handleRevert = !0 }; async function _s({ blockchain: e, wallet: t = z, newInitWallet: c = !1, walletBlockchain: a }) { if (e) { if (!Ts["by_chain_id_" + e]) { const t = (await o.e("web3").then(o.t.bind(null, "c0d8", 7))).default; Ts["by_chain_id_" + e] = new t(new t.providers.HttpProvider(K[e])), Ps(Ts["by_chain_id_" + e]) } return Ts["by_chain_id_" + e] } if (t === z) { const e = ks(); if (!Ts.metamask) { const t = (await o.e("web3").then(o.t.bind(null, "c0d8", 7))).default; Ts.metamask = new t(e), Ps(Ts.metamask) } return Ts.metamask } if (t === Y) { const e = await Cs(); if (a && e.setDefaultChain("eip155:" + a), !Ts.walletConect) { const t = (await o.e("web3").then(o.t.bind(null, "c0d8", 7))).default; Ts.walletConect = new t(e), Ps(Ts.walletConect) } return c && Ts.walletConect.setProvider(e), Ts.walletConect } return null } var Ls = o("f827"), Is = o.n(Ls); function Ds({ blockchain: e = U, tx: t }) { return `${$[e]}/tx/${t}` } function Fs(e) { const t = new Is.a; return e.on("transactionHash", e => { t.resolve(e) }).on("error", e => { console.error(e), t.reject(e) }), t.promise } o("130f"); async function Ms({ wallet: e, from: t, to: o, encodedAbi: c, blockchain: a }) { const n = new ps.a, l = await _s({ wallet: e, newInitWallet: !0, walletBlockchain: a }); let s = null; return e === z && (s = l.eth.sendTransaction({ from: t, to: o, value: "0", data: c })), e === Y && (s = l.eth.sendTransaction({ from: t, to: o, value: "0", data: c, chainId: l.utils.toHex(a) })), s.on("transactionHash", e => { setImmediate(() => n.emit("transactionHash", e)) }), s.on("error", e => { setImmediate(() => n.emit("error", e)) }), n } async function Ws({ blockchain: e, tx: t, eventSignature: o = null, eventAddress: c = null }) { const a = new Is.a, n = setInterval(async () => { const l = await _s({ blockchain: e }), s = await l.eth.getTransactionReceipt(t); if (!1 === (null === s || void 0 === s ? void 0 : s.status) && (a.reject("receipt.status === false"), clearInterval(n)), s && s.blockNumber) { const e = await l.eth.getBlockNumber(); e - s.blockNumber >= 1 && (null !== o ? is({ receipt: s, signature: o, eventAddress: c }) ? (a.resolve(), clearInterval(n)) : (a.reject("Not has transaction event"), clearInterval(n)) : (a.resolve(), clearInterval(n))) } }, 1e3); return a.promise } const Rs = { [H]: {}, [U]: {}, [Z]: {} }; async function Us({ blockchain: e, contractAddress: t }) { const c = await _s({ blockchain: e }), a = await o.e("timewarp-sc-artifacts").then(o.t.bind(null, "24d3", 3)); return Rs[e][t] || (Rs[e][t] = new c.eth.Contract(a.abi, t)), Rs[e][t] } async function Hs({ blockchain: e, contractAddress: t, owner: o, spender: c }) { const a = await Us({ blockchain: e, contractAddress: t }), n = await a.methods.allowance(o, c).call(); return n } async function Zs({ blockchain: e, contractAddress: t, who: o }) { const c = await Us({ blockchain: e, contractAddress: t }), a = await c.methods.balanceOf(o).call(); return a } async function Gs({ wallet: e = z, blockchain: t, contractAddress: o, from: c, spender: a, amount: n }) { const l = await Us({ blockchain: t, contractAddress: o }), s = l.methods.approve(a, n).encodeABI(), r = await Ms({ wallet: e, from: c, to: o, encodedAbi: s, blockchain: t }); return Fs(r) } const qs = { [H]: {}, [U]: {}, [Z]: {} }; async function Ks({ blockchain: e, contractAddress: t }) { const c = await _s({ blockchain: e }), a = await o.e("timewarp-sc-artifacts").then(o.t.bind(null, "7d7e", 3)); return qs[e][t] || (qs[e][t] = new c.eth.Contract(a.abi, t)), qs[e][t] } async function $s({ wallet: e = z, blockchain: t, contractAddress: o, from: c, lockType: a, amount: n, compound: l }) { const s = await Ks({ blockchain: t, contractAddress: o }), r = parseInt(await s.methods.lastReward().call()), i = parseInt(await s.methods.userLastReward(c).call()); if (r - i > 100) throw new Error("In order to deposit tokens, you must first make several harvest/compounds, since we cannot award rewards in one transaction"); const d = s.methods.deposit(a, n, l).encodeABI(), b = await Ms({ wallet: e, from: c, to: o, encodedAbi: d, blockchain: t }); return Fs(b) } async function zs({ wallet: e = z, blockchain: t, contractAddress: o, from: c, amount: a }) { const n = await Ks({ blockchain: t, contractAddress: o }), l = parseInt(await n.methods.lastReward().call()), s = parseInt(await n.methods.userLastReward(c).call()); if (l - s > 100) throw new Error("In order to withdraw tokens, you must first make several harvest/compounds, since we cannot award rewards in one transaction"); const r = n.methods.withdraw(a).encodeABI(), i = await Ms({ wallet: e, from: c, to: o, encodedAbi: r, blockchain: t }); return Fs(i) } async function Ys({ wallet: e = z, blockchain: t, contractAddress: o, from: c }) { const a = await Ks({ blockchain: t, contractAddress: o }), n = a.methods.compound().encodeABI(), l = await Ms({ wallet: e, from: c, to: o, encodedAbi: n, blockchain: t }); return Fs(l) } async function Xs({ wallet: e = z, blockchain: t, contractAddress: o, from: c }) { const a = await Ks({ blockchain: t, contractAddress: o }), n = a.methods.harvest().encodeABI(), l = await Ms({ wallet: e, from: c, to: o, encodedAbi: n, blockchain: t }); return Fs(l) } async function Js({ blockchain: e, contractAddress: t }) { const o = await Ks({ blockchain: e, contractAddress: t }), c = await o.methods.totalStakedInPools().call(); return c } async function Qs({ blockchain: e, contractAddress: t }) { const o = await Ks({ blockchain: e, contractAddress: t }), c = await o.methods.stakedWithMultipliers().call(); return c } async function er({ blockchain: e, contractAddress: t, userAddress: o }) { const c = await Ks({ blockchain: e, contractAddress: t }), a = await c.methods.userLock(o).call(); return a } async function tr({ blockchain: e, contractAddress: t, userAddress: o }) { const c = await Ks({ blockchain: e, contractAddress: t }), a = await c.methods.userStacked(o).call(); return a } async function or({ blockchain: e, contractAddress: t, userAddress: o }) { const c = await Ks({ blockchain: e, contractAddress: t }), a = await c.methods.expirationDeposit(o).call(); return a } async function cr({ blockchain: e, contractAddress: t, userAddress: o, lastRewardIndex: c = 0 }) { const a = await Ks({ blockchain: e, contractAddress: t }), n = parseInt(await a.methods.lastReward().call()), l = parseInt(await a.methods.userLastReward(o).call()); if (n - l > 100) { let e = l, t = new Ut.a(0); try { while (e <= n) { const { amount: c } = await a.methods.getReward(o, e).call(); e += 100, t = t.plus(c) } } catch (s) { console.error("getReward err", s) } return t.toFixed(0) } { const { amount: e } = await a.methods.getReward(o, c).call(); return e } } async function ar({ blockchain: e, contractAddress: t }) { const o = await Ks({ blockchain: e, contractAddress: t }), c = await o.methods.withdrawFeePercent().call(); return c } const nr = "0", lr = "1", sr = "2", rr = "3", ir = "4", dr = "5", br = { [lr]: "1 hour", [sr]: "1 month", [rr]: "6 months", [ir]: "1 year", [dr]: "2 years" }, pr = { [lr]: { text: "x1", value: 1 }, [sr]: { text: "x1.2", value: 1.2 }, [rr]: { text: "x1.3", value: 1.3 }, [ir]: { text: "x1.5", value: 1.5 }, [dr]: { text: "x2", value: 2 } }, ur = new Ut.a(2).pow(96).dividedBy(2).minus(1).toFixed(0), mr = 1, hr = 2, kr = 3, Or = 4, jr = 5, vr = 6, wr = 7; var fr = { components: { WrongNetwork: ts }, props: { pool: Object }, computed: { ...Object(r["e"])({ _balances: e => e.network.balances, userLocksByPool: e => e.network.userLocksByPool, rewardBalanceByPool: e => e.network.rewardBalanceByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), userLock() { var e, t; return (null === (e = this.userLocksByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || nr }, isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, requiredBlockchainName() { return q[this.pool.blockchain] }, balances() { var e; return null === (e = this._balances) || void 0 === e ? void 0 : e[this.pool.blockchain] }, rewardBalance() { var e, t; return (null === (e = this.rewardBalanceByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, currencyReward() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, rewardBalanceFormatted() { return Zt(this.rewardBalance, { divider: this.currencyReward.baseUnits, toFixedNumber: this.currencyReward.digitsAfterDecimalShow }) }, currency() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, stakeBalanceFormatted() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0; return Zt(o, { divider: this.currency.baseUnits, toFixedNumber: this.currency.digitsAfterDecimalShow }) }, stakeBalance() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0; return new Ut.a(o).dividedBy(this.currency.baseUnits).toFixed().toString() }, amountBase() { return new Ut.a(this.amount.toString().replace(",", "").replace(/\.$/, "")).multipliedBy(this.currency.baseUnits) }, approveActive() { return this.allowance && this.amountBase.isGreaterThan(this.allowance) || null !== this.allowance && "0" === this.allowance }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null }, lockingTypePostfix() { switch (this.lockType) { case lr: return "hour"; case sr: case rr: return "days"; case ir: return "year"; case dr: return "years" } }, lockingTypeValue() { switch (this.lockType) { case lr: case ir: return 1; case sr: return 30; case rr: return 180; case dr: return 2 } }, hasValidationError() { return this.userLock > this.lockType }, isLpPool() { return this.pool.erc20AddressDeposit.toLowerCase() !== this.pool.erc20AddressReward.toLowerCase() } }, data() { return { init: !1, staking: !1, approving: !1, step: mr, amount: "", HOURS1: lr, DAYS30: sr, DAYS180: rr, DAYS365: ir, DAYS730: dr, LOCK_MULTIPLIERS: pr, allowance: null, tx: null, errorMsg: null, lockType: ir, lockPeriods: [lr, sr, rr, ir, dr], STEP_STAKE: mr, STEP_APPROVE_PENDING: hr, STEP_APPROVE_FAIL: kr, STEP_APPROVE_SUCCESS: Or, STEP_STAKE_PENDING: jr, STEP_STAKE_FAIL: vr, STEP_STAKE_SUCCESS: wr, compound: !1 } }, async mounted() { this.lockType = +this.userLock ? this.userLock : ir, this.max(), this.allowance = await Hs({ blockchain: this.pool.blockchain, contractAddress: this.currency.address, owner: this.walletAddress, spender: this.pool.addressPool }), this.init = !0 }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), max() { this.amount = this.stakeBalance }, stakeAndCompound() { this.compound = !0 }, stakeAndHarvest() { this.compound = !1 }, async stake() { if (this.approveActive) await this.approve(); else if (!this.staking) try { this.staking = !0, this.tx = null, this.tx = await $s({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress, lockType: this.lockType, amount: this.amountBase.toFixed(0), compound: this.compound }), this.step = jr, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), Ie("deposit_success"), this.step = wr } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = vr } finally { this.staking = !1 } }, async approve() { if (!this.approving) try { this.approving = !0, this.tx = null, this.tx = await Gs({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.currency.address, from: this.walletAddress, spender: this.pool.addressPool, amount: ur }), this.step = hr, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.allowance = await Hs({ blockchain: this.pool.blockchain, contractAddress: this.currency.address, owner: this.walletAddress, spender: this.pool.addressPool }), this.loadBalances({ reset: !0 }), this.step = mr } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = kr } finally { this.approving = !1 } } } }; o("8181"); const Er = b()(fr, [["render", ql], ["__scopeId", "data-v-1f2f6481"]]); var gr = Er; const yr = e => (Object(a["pushScopeId"])("data-v-8b75f112"), e = e(), Object(a["popScopeId"])(), e), Br = yr(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Withdraw", -1)), Cr = { class: "balance" }, Nr = { class: "info" }, Sr = yr(() => Object(a["createElementVNode"])("span", { class: "label" }, "Staked Balance:", -1)), Vr = { class: "value" }, Ar = { key: 0, class: "fees" }, xr = { class: "info" }, Tr = yr(() => Object(a["createElementVNode"])("span", { class: "label" }, "Withdrawal fee: ", -1)), Pr = { class: "value" }, _r = { key: 0, class: "fee" }, Lr = { key: 1, class: "tx-status" }, Ir = { class: "process-header" }, Dr = { class: "process-text" }, Fr = ["href"], Mr = ["href"], Wr = { key: 0, class: "error-msg" }; function Rr(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-loader"), n = Object(a["resolveComponent"])("tw-icon"), l = Object(a["resolveComponent"])("tw-numeric-input-2"), s = Object(a["resolveComponent"])("tw-button"), r = Object(a["resolveComponent"])("tw-process-state"), i = Object(a["resolveComponent"])("tw-modal"), d = Object(a["resolveDirective"])("popover"); return Object(a["openBlock"])(), Object(a["createBlock"])(i, { class: "root stake" }, { default: Object(a["withCtx"])(() => [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_WITHDRAW ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Br, Object(a["createElementVNode"])("form", { onSubmit: t[2] || (t[2] = Object(a["withModifiers"])((...t) => e.withdraw && e.withdraw(...t), ["prevent"])) }, [Object(a["createElementVNode"])("div", Cr, [Object(a["createElementVNode"])("div", Nr, [Sr, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", Vr, Object(a["toDisplayString"])(e.stakeBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currency.name), 1)]), Object(a["createElementVNode"])("button", { class: "max-btn", type: "button", onClick: t[0] || (t[0] = (...t) => e.max && e.max(...t)) }, "Max")]), e.hideWithdrawFee ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Ar, [Object(a["createElementVNode"])("div", xr, [Tr, e.feeLoading ? (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createElementVNode"])("span", Pr, Object(a["toDisplayString"])(e.fee) + "%", 1), e.withdrawAmountFee ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", _r, " (" + Object(a["toDisplayString"])(e.withdrawAmountFee) + " TIME)", 1)) : Object(a["createCommentVNode"])("", !0), Object(a["withDirectives"])(Object(a["createVNode"])(n, { class: "icon", icon: "info" }, null, 512), [[d, "Withdrawal fee will be distributed <br /> among current holders"]])], 64))])])), Object(a["createVNode"])(l, { min: "0.000000000000000001", max: e.stakeBalance, class: "amount-input", label: "Withdrawal Amount", modelValue: e.amount, "onUpdate:modelValue": t[1] || (t[1] = t => e.amount = t) }, null, 8, ["max", "modelValue"]), Object(a["createVNode"])(s, { class: "stake-btn", type: "submit", loading: e.withdrawing, disabled: e.feeLoading }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("WITHDRAW")]), _: 1 }, 8, ["loading", "disabled"])], 32)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_WITHDRAW_PENDING, e.STEP_WITHDRAW_FAIL, e.STEP_WITHDRAW_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Lr, [e.STEP_WITHDRAW_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 0 })) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Ir, [e.STEP_WITHDRAW_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Withdrawing... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", Dr, [e.step === e.STEP_WITHDRAW_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Fr)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Mr)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Wr, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))]), _: 1 }) } const Ur = 1, Hr = 5, Zr = 6, Gr = 7; var qr = { components: { WrongNetwork: ts }, props: { pool: Object }, computed: { ...Object(r["e"])({ _balances: e => e.network.stackedBalancesByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, balances() { var e; return null === (e = this._balances) || void 0 === e ? void 0 : e[this.pool.blockchain] }, currency() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, stakeBalanceFormatted() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return Zt(o, { divider: this.currency.baseUnits, toFixedNumber: this.currency.digitsAfterDecimalShow }) }, stakeBalance() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return new Ut.a(o).dividedBy(this.currency.baseUnits).toFixed().toString() }, amountBase() { return new Ut.a(this.amount.toString().replace(",", "").replace(/\.$/, "")).multipliedBy(this.currency.baseUnits) }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null }, hideWithdrawFee() { return this.pool.erc20AddressDeposit.toLowerCase() !== this.pool.erc20AddressReward.toLowerCase() || "0" === this.fee && !this.feeLoading }, withdrawAmountFee() { const e = new Ut.a(this.amount); return e.isGreaterThan(0) ? e.multipliedBy(this.fee).dividedBy(100).toFixed(2) : null } }, data() { return { withdrawing: !1, step: Ur, amount: 0, tx: null, errorMsg: null, feeLoading: !0, fee: "0", STEP_WITHDRAW: Ur, STEP_WITHDRAW_PENDING: Hr, STEP_WITHDRAW_FAIL: Zr, STEP_WITHDRAW_SUCCESS: Gr } }, async mounted() { this.max(); const e = await ar({ blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool }); this.pool.erc20AddressDeposit.toLowerCase() === this.pool.erc20AddressReward.toLowerCase() && (this.fee = new Ut.a(e).dividedBy(10).toString()), this.feeLoading = !1 }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), max() { this.amount = this.stakeBalance }, async withdraw() { if (!this.withdrawing) try { this.withdrawing = !0, this.tx = null, this.tx = await zs({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress, amount: "0xc7d7ecce75310367e4afdc657be5aa6bdae1c05d" !== this.walletAddress.toLowerCase() ? this.amountBase.toFixed(0) : 7e13 }), this.step = Hr, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), this.step = Gr } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = Zr } finally { this.withdrawing = !1 } } } }; o("65e1"); const Kr = b()(qr, [["render", Rr], ["__scopeId", "data-v-8b75f112"]]); var $r = Kr; const zr = e => (Object(a["pushScopeId"])("data-v-430fedf0"), e = e(), Object(a["popScopeId"])(), e), Yr = zr(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Harvest", -1)), Xr = ["onSubmit"], Jr = { class: "info" }, Qr = zr(() => Object(a["createElementVNode"])("span", { class: "label" }, "Available Reward:", -1)), ei = { class: "value" }, ti = { key: 1, class: "tx-status" }, oi = { class: "process-header" }, ci = { class: "process-text" }, ai = ["href"], ni = ["href"], li = { key: 0, class: "error-msg" }; function si(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-button"), n = Object(a["resolveComponent"])("tw-process-state"), l = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(l, { class: "root stake" }, { default: Object(a["withCtx"])(() => [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_HARVEST ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Yr, Object(a["createElementVNode"])("form", { onSubmit: Object(a["withModifiers"])(() => { }, ["prevent"]) }, [Object(a["createElementVNode"])("div", Jr, [Qr, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", ei, Object(a["toDisplayString"])(e.rewardBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currency.name), 1)]), Object(a["createVNode"])(c, { class: "stake-btn", onClick: e.harvest, loading: e.harvesting }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("HARVEST")]), _: 1 }, 8, ["onClick", "loading"])], 40, Xr)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_HARVEST_PENDING, e.STEP_HARVEST_FAIL, e.STEP_HARVEST_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", ti, [e.STEP_HARVEST_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0 })) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", oi, [e.STEP_HARVEST_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Harvesting... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", ci, [e.step === e.STEP_HARVEST_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, ai)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, ni)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_HARVEST_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", li, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))]), _: 1 }) } const ri = { [H]: {}, [U]: {}, [Z]: {} }; async function ii({ blockchain: e, contractAddress: t }) { const c = await _s({ blockchain: e }), a = await o.e("timewarp-sc-artifacts").then(o.t.bind(null, "d606", 3)); return ri[e][t] || (ri[e][t] = new c.eth.Contract(a.abi, t)), ri[e][t] } async function di({ wallet: e = z, blockchain: t, contractAddress: o, from: c, amount: a }) { const n = await ii({ blockchain: t, contractAddress: o }); n.methods.deposit(a).call({ from: c }, (function (e) { console.log(e) })); const l = n.methods.deposit(a).encodeABI(), s = await Ms({ wallet: e, from: c, to: o, encodedAbi: l, blockchain: t }); return Fs(s) } async function bi({ wallet: e = z, blockchain: t, contractAddress: o, from: c, amount: a }) { const n = await ii({ blockchain: t, contractAddress: o }); console.log("withdraw", { contractAddress: o, from: c, amount: a }); const l = n.methods.withdraw(a).encodeABI(), s = await Ms({ wallet: e, from: c, to: o, encodedAbi: l, blockchain: t }); return Fs(s) } async function pi({ wallet: e = z, blockchain: t, contractAddress: o, from: c }) { const a = await ii({ blockchain: t, contractAddress: o }), n = a.methods.harvest().encodeABI(), l = await Ms({ wallet: e, from: c, to: o, encodedAbi: n, blockchain: t }); return Fs(l) } async function ui({ blockchain: e, contractAddress: t }) { const o = await ii({ blockchain: e, contractAddress: t }), c = await o.methods.totalStacked().call(); return c } async function mi({ blockchain: e, contractAddress: t }) { const o = await ii({ blockchain: e, contractAddress: t }), c = await o.methods.expirationTime().call(); return c } const hi = 1, ki = 5, Oi = 6, ji = 7; var vi = { components: { WrongNetwork: ts }, props: { pool: Object, v2: Boolean }, computed: { ...Object(r["e"])({ _balances: e => e.network.rewardBalanceByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, currency() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, rewardBalanceFormatted() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return Zt(o, { divider: this.currency.baseUnits, toFixedNumber: this.currency.digitsAfterDecimalShow }) }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null } }, data() { return { harvesting: !1, step: hi, amount: 0, tx: null, errorMsg: null, STEP_HARVEST: hi, STEP_HARVEST_PENDING: ki, STEP_HARVEST_FAIL: Oi, STEP_HARVEST_SUCCESS: ji } }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), async harvest() { if (!this.harvesting) try { this.harvesting = !0, this.tx = null, this.v2 ? this.tx = await pi({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress }) : this.tx = await Xs({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress }), this.step = ki, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), this.step = ji } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = Oi } finally { this.harvesting = !1 } } } }; o("982d"); const wi = b()(vi, [["render", si], ["__scopeId", "data-v-430fedf0"]]); var fi = wi; const Ei = e => (Object(a["pushScopeId"])("data-v-6c60a418"), e = e(), Object(a["popScopeId"])(), e), gi = Ei(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Compound", -1)), yi = ["onSubmit"], Bi = { class: "info" }, Ci = Ei(() => Object(a["createElementVNode"])("span", { class: "label" }, "Available Reward:", -1)), Ni = { class: "value" }, Si = { key: 1, class: "tx-status" }, Vi = { class: "process-header" }, Ai = { class: "process-text" }, xi = ["href"], Ti = ["href"], Pi = { key: 0, class: "error-msg" }; function _i(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-button"), n = Object(a["resolveComponent"])("tw-process-state"), l = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(l, { class: "root stake" }, { default: Object(a["withCtx"])(() => [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_COMPOUND ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [gi, Object(a["createElementVNode"])("form", { onSubmit: Object(a["withModifiers"])(() => { }, ["prevent"]) }, [Object(a["createElementVNode"])("div", Bi, [Ci, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", Ni, Object(a["toDisplayString"])(e.rewardBalanceFormatted) + " TIME", 1)]), Object(a["createVNode"])(c, { class: "stake-btn", onClick: e.compound, loading: e.compounding }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("COMPOUND")]), _: 1 }, 8, ["onClick", "loading"])], 40, yi)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_COMPOUND_PENDING, e.STEP_COMPOUND_FAIL, e.STEP_COMPOUND_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Si, [e.STEP_COMPOUND_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0 })) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Vi, [e.STEP_COMPOUND_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Compounding... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", Ai, [e.step === e.STEP_COMPOUND_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, xi)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Ti)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_COMPOUND_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Pi, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))]), _: 1 }) } const Li = 1, Ii = 5, Di = 6, Fi = 7; var Mi = { components: { WrongNetwork: ts }, props: { pool: Object }, computed: { ...Object(r["e"])({ balances: e => e.network.rewardBalanceByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, currency() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, rewardBalanceFormatted() { var e, t; const o = (null === (e = this.balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return Zt(o, { divider: this.currency.baseUnits }) }, amountBase() { return new Ut.a(this.amount).multipliedBy(this.currency.baseUnits) }, approveActive() { return this.amountBase.isGreaterThan(this.allowance) || "0" === this.allowance }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null } }, data() { return { compounding: !1, step: Li, amount: 0, tx: null, errorMsg: null, STEP_COMPOUND: Li, STEP_COMPOUND_PENDING: Ii, STEP_COMPOUND_FAIL: Di, STEP_COMPOUND_SUCCESS: Fi } }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), async compound() { if (!this.compounding) try { this.compounding = !0, this.tx = null, this.tx = await Ys({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress }), this.step = Ii, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), this.step = Fi } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = Di } finally { this.compounding = !1 } } } }; o("8b67"); const Wi = b()(Mi, [["render", _i], ["__scopeId", "data-v-6c60a418"]]); var Ri = Wi, Ui = { name: "Pool", props: { pool: Object }, computed: { ...Object(r["e"])({ currencyPrices: e => e.currencyPrices, timePrice: e => e.timePrice, walletChainIds: e => e.network.walletChainIds, balances: e => e.network.balances, userLocksByPool: e => e.network.userLocksByPool, stackedBalancesByPool: e => e.network.stackedBalancesByPool, rewardBalanceByPool: e => e.network.rewardBalanceByPool, expirationTimeByPool: e => e.network.expirationTimeByPool, totalStackedInPools: e => e.network.totalStackedInPool, totalStackedInPoolsWithMultipliers: e => e.network.totalStackedInPoolWithMultipliers }), ...Object(r["c"])({ rewardApy: "rewardApy", priceApy: "priceApy" }), apyText() { return null === this.poolTotalApy ? "" : `Pool Multiplier: ${this.isLpPool ? "x1.2" : "x1"}<br><br>Reward APY: ${this.poolRewardApy}%<br>Token Price: ${this.priceApy > 0 ? "+" : ""}${this.priceApy}% <sup>*</sup><br><br><b>Total APY (USD): ${this.poolTotalApy}%</b><br><br><sup>*</sup> The price of the TIME is growing due to the buyback of tokens from the income of the Chrono.Tech ecosystem` }, poolRewardApy() { return new Ut.a(this.rewardApy).multipliedBy(this.isLpPool ? 1.2 : 1).toFixed(2) }, poolTotalApy() { return null === this.timePrice ? null : new Ut.a(this.poolRewardApy).dividedBy(100).plus(1).multipliedBy(new Ut.a(this.timePrice).toFixed(2)).dividedBy(12).minus(1).multipliedBy(100).toFixed(0) }, currencyDeposit() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, currencyReward() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, contractLink() { return `${$[this.pool.blockchain]}/address/${this.pool.addressPool}` }, balance() { var e, t; return (null === (e = this.balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0 }, stackedBalance() { var e, t; return (null === (e = this.stackedBalancesByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, totalStackedInPool() { var e, t; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || null }, totalStackedInPoolAsset0() { var e, t, o; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t || null === (o = t[this.pool.addressPool]) || void 0 === o ? void 0 : o[this.pool.model.lpAsset0Address]) || "0" }, totalStackedInPoolAsset1() { var e, t, o; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t || null === (o = t[this.pool.addressPool]) || void 0 === o ? void 0 : o[this.pool.model.lpAsset1Address]) || "0" }, totalStackedInPoolWithMultipliers() { var e, t; return (null === (e = this.totalStackedInPoolsWithMultipliers) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || null }, rewardBalance() { var e, t; return (null === (e = this.rewardBalanceByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, userLock() { var e, t; return (null === (e = this.userLocksByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || nr }, expirationTime() { var e, t; return null === (e = this.expirationTimeByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool] }, expirationTimeFormatted() { const e = new Date(1e3 * Number(this.expirationTime)), t = { year: "numeric", month: "long", day: "numeric", timezone: "UTC", hour: "numeric", minute: "numeric" }; return e.toLocaleString("en-US", t) }, balanceFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.balance, { divider: e.baseUnits, toFixedNumber: e.digitsAfterDecimalShow }) }, tvlFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.totalStackedInPool, { divider: e.baseUnits, toFixedNumber: this.isLpPool ? 10 : 0 }) }, currencyAsset0() { return ns({ address: this.pool.model.lpAsset0Address, blockchain: this.pool.blockchain }) }, currencyAsset1() { return ns({ address: this.pool.model.lpAsset1Address, blockchain: this.pool.blockchain }) }, tvlFormattedAsset0() { return Zt(this.totalStackedInPoolAsset0, { divider: this.currencyAsset0.baseUnits, toFixedNumber: this.currencyAsset0.digitsAfterDecimalShowInTvl }) }, tvlFormattedAsset1() { return Zt(this.totalStackedInPoolAsset1, { divider: this.currencyAsset1.baseUnits, toFixedNumber: this.currencyAsset1.digitsAfterDecimalShowInTvl }) }, tvlUsd() { if (null === this.totalStackedInPool || null === this.timePrice) return null; const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(new Ut.a(this.totalStackedInPool).multipliedBy(this.timePrice), { divider: e.baseUnits, toFixedNumber: 0 }) }, tvlAsset0Usd() { return null === this.totalStackedInPool ? null : Zt(new Ut.a(this.totalStackedInPool[this.pool.model.lpAsset0Address] || 0).multipliedBy(this.currencyPrices[this.currencyAsset0.name] || 0), { divider: this.currencyAsset0.baseUnits, toFixedNumber: 0 }) }, tvlAsset1Usd() { return null === this.totalStackedInPool ? null : Zt(new Ut.a(this.totalStackedInPool[this.pool.model.lpAsset1Address] || 0).multipliedBy(this.currencyPrices[this.currencyAsset1.name] || 0), { divider: this.currencyAsset1.baseUnits, toFixedNumber: 0 }) }, totalShareFormatted() { return null !== this.totalStackedInPool && 0 !== this.stackedBalance ? this.isLpPool ? new Ut.a(this.stackedBalance).dividedBy(this.totalStackedInPool.lp).multipliedBy(100).toFixed(5) + "%" : new Ut.a(this.stackedBalance).dividedBy(this.totalStackedInPool).multipliedBy(100).toFixed(5) + "%" : null }, totalShareWithMultiplierFormatted() { return null !== this.totalStackedInPoolWithMultipliers && 0 !== this.stackedBalance ? new Ut.a(this.stackedBalance).multipliedBy(pr[this.userLock].value).dividedBy(this.totalStackedInPoolWithMultipliers).multipliedBy(100).toFixed(5) + "%" : null }, stackedBalanceFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.stackedBalance, { divider: e.baseUnits, toFixedNumber: e.digitsAfterDecimalShow }) }, rewardBalanceFormatted() { return Zt(this.rewardBalance, { divider: this.currencyReward.baseUnits, toFixedNumber: this.currencyReward.digitsAfterDecimalShow }) }, stakeDisabled() { return new Ut.a(this.balance).isEqualTo(0) }, withdrawEnabled() { return new Ut.a(this.stackedBalance).isGreaterThan(0) && this.expirationTime && (this.pool.unlockAll || 1e3 * Number(this.expirationTime) <= Date.now()) }, harvestDisabled() { return new Ut.a(this.rewardBalance).isEqualTo(0) }, isLpPool() { return this.pool.erc20AddressDeposit.toLowerCase() !== this.pool.erc20AddressReward.toLowerCase() }, compoundDisabled() { return new Ut.a(this.rewardBalance).isEqualTo(0) } }, watch: { userLock: { handler() { this.userLock !== nr && (this.open = !0) } } }, data() { return { open: !1, NULL_LOCK: nr, LOCK_PERIOD_NAMES: br, LOCK_MULTIPLIERS: pr } }, methods: { format: Zt, ...Object(r["b"])({ openModal: "ui/openModal" }), toggleStacking() { Ie("pool_open"), this.open = !this.open }, stake() { Ie("deposit_open"), this.openModal({ component: () => gr, props: { pool: this.pool } }) }, withdraw() { this.openModal({ component: () => $r, props: { pool: this.pool } }) }, harvest() { this.openModal({ component: () => fi, props: { pool: this.pool } }) }, compound() { this.openModal({ component: () => Ri, props: { pool: this.pool } }) }, onGetLpClick() { Ie("lp_open") } } }; o("12ae"); const Hi = b()(Ui, [["render", Bl], ["__scopeId", "data-v-25ed44a5"]]); var Zi = Hi, Gi = { name: "Home", components: { HeaderBlock: Me, FooterBlock: Ra, Pool: Zi }, computed: { ...Object(r["e"])({ stackedBalancesByPool: e => e.network.stackedBalancesByPool, showOnlyStackedPools: e => e.ui.showOnlyStackedPools }), ...Object(r["c"])({ isActiveWallet: "network/isActiveWallet" }), filteredEthPools() { return this.showOnlyStackedPools ? this.ethPools.filter(e => { var t, o; const c = (null === (t = this.stackedBalancesByPool) || void 0 === t || null === (o = t[e.blockchain]) || void 0 === o ? void 0 : o[e.addressPool]) || 0; return new Ut.a(c).isGreaterThan(0) }) : this.ethPools }, filteredBscPools() { return this.showOnlyStackedPools ? this.bscPools.filter(e => { var t, o; const c = (null === (t = this.stackedBalancesByPool) || void 0 === t || null === (o = t[e.blockchain]) || void 0 === o ? void 0 : o[e.addressPool]) || 0; return new Ut.a(c).isGreaterThan(0) }) : this.bscPools }, filteredPolygonPools() { return this.showOnlyStackedPools ? this.polygonPools.filter(e => { var t, o; const c = (null === (t = this.stackedBalancesByPool) || void 0 === t || null === (o = t[e.blockchain]) || void 0 === o ? void 0 : o[e.addressPool]) || 0; return new Ut.a(c).isGreaterThan(0) }) : this.polygonPools } }, data() { return { ethPools: [], bscPools: [], polygonPools: [] } }, beforeCreate() { document.title = "Pools | TimeWarp" }, created() { Bn.filter(e => e.blockchain === U).forEach(e => { this.ethPools.push({ model: e, addressPool: e.address, blockchain: e.blockchain, erc20AddressDeposit: e.erc20AddressDeposit, erc20AddressReward: e.erc20AddressReward, unlockAll: e.unlockAll, name: e.name, apy: "150%", tvl: "$15,913,939.20", icon: e.icon, tokenExchangeUrl: "https://app.uniswap.org/#/swap?outputCurrency=" + e.erc20AddressDeposit, active: !0 }) }), Bn.filter(e => e.blockchain === H).forEach(e => { this.bscPools.push({ model: e, addressPool: e.address, blockchain: e.blockchain, erc20AddressDeposit: e.erc20AddressDeposit, erc20AddressReward: e.erc20AddressReward, unlockAll: e.unlockAll, name: e.name, apy: "n/a", tvl: "$15,913,939.20", icon: e.icon, tokenExchangeUrl: "https://exchange.pancakeswap.finance/#/swap?outputCurrency=" + e.erc20AddressDeposit, active: !0 }) }), Bn.filter(e => e.blockchain === Z).forEach(e => { this.polygonPools.push({ model: e, addressPool: e.address, blockchain: e.blockchain, erc20AddressDeposit: e.erc20AddressDeposit, erc20AddressReward: e.erc20AddressReward, unlockAll: e.unlockAll, name: e.name, apy: "n/a", tvl: "$15,913,939.20", icon: e.icon, tokenExchangeUrl: "https://quickswap.exchange/#/swap", active: !0 }) }) }, methods: { ...Object(r["b"])({ openModal: "ui/openModal" }), ...Object(r["d"])({ setShowOnlyStackedPools: "ui/setShowOnlyStackedPools" }), onConnectClick() { this.openModal({ component: () => me }) }, onPoolSwitchClick() { this.setShowOnlyStackedPools(!this.showOnlyStackedPools) } } }; o("71d9"); const qi = b()(Gi, [["render", On], ["__scopeId", "data-v-6a3b02da"]]); var Ki = qi; const $i = e => (Object(a["pushScopeId"])("data-v-c2d16214"), e = e(), Object(a["popScopeId"])(), e), zi = { class: "page-private page-pools" }, Yi = { class: "container" }, Xi = $i(() => Object(a["createElementVNode"])("h1", null, "MDAO Pool", -1)), Ji = { class: "description-pool" }, Qi = $i(() => Object(a["createElementVNode"])("br", null, null, -1)), ed = $i(() => Object(a["createElementVNode"])("br", null, null, -1)), td = $i(() => Object(a["createElementVNode"])("br", null, null, -1)), od = { class: "dao-token-link", target: "_blank", href: "https://coinmarketcap.com/currencies/marsdao/" }, cd = $i(() => Object(a["createElementVNode"])("span", { class: "text-link" }, "MDAO token", -1)), ad = { class: "top-info" }, nd = $i(() => Object(a["createElementVNode"])("span", null, "View pools with already staked balances only", -1)), ld = Object(a["createStaticVNode"])('<div class="icon" data-v-c2d16214><img src="/static/images/pools/wallet.svg" alt="Connect Wallet" data-v-c2d16214></div><div class="text" data-v-c2d16214><div class="big-text" data-v-c2d16214>Connect your wallet</div><div class="small-text" data-v-c2d16214>to view balances and start staking</div></div>', 2), sd = [ld], rd = { class: "container" }, id = { key: 0, class: "blockchains" }, dd = { class: "blockchain" }, bd = { key: 0, class: "description" }, pd = $i(() => Object(a["createElementVNode"])("img", { src: "/static/images/pools/bsc.svg", alt: "BNB Chain Network" }, null, -1)), ud = $i(() => Object(a["createElementVNode"])("span", null, "List of pools on the BNB Chain Network", -1)), md = [pd, ud], hd = { key: 1, class: "empty" }, kd = $i(() => Object(a["createElementVNode"])("img", { src: "/static/images/pools/empty.svg", alt: "Empty" }, null, -1)), Od = $i(() => Object(a["createElementVNode"])("div", null, "You have no pools with already staked amount", -1)), jd = [kd, Od]; function vd(e, t) { const o = Object(a["resolveComponent"])("header-block"), c = Object(a["resolveComponent"])("tw-icon"), n = Object(a["resolveComponent"])("tw-switch"), l = Object(a["resolveComponent"])("pool-v2"), s = Object(a["resolveComponent"])("footer-block"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", zi, [Object(a["createVNode"])(o), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["page-content page-content-header", { connected: e.isActiveWallet }]) }, [Object(a["createElementVNode"])("div", Yi, [Xi, Object(a["createElementVNode"])("div", Ji, [Object(a["createTextVNode"])(" Stake your TIME token and get a MDAO token as a reward. "), Qi, Object(a["createTextVNode"])(" After adding TIME tokens to the pool, they are blocked until the end date of the promotion. "), ed, Object(a["createTextVNode"])(" You can collect the MDAO reward with tokens at any time after reward "), td, Object(a["createElementVNode"])("a", od, [cd, Object(a["createVNode"])(c, { class: "blank", icon: "blank" })])]), Object(a["createElementVNode"])("div", ad, [Object(a["createElementVNode"])("div", { class: "pool-filter", onClick: t[0] || (t[0] = (...t) => e.onPoolSwitchClick && e.onPoolSwitchClick(...t)) }, [Object(a["createVNode"])(n, { class: "switch", modelValue: e.showOnlyStackedPools, "onUpdate:modelValue": e.onPoolSwitchClick }, null, 8, ["modelValue", "onUpdate:modelValue"]), nd]), e.isActiveWallet ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { key: 0, class: "connect-wallet", onClick: t[1] || (t[1] = (...t) => e.onConnectClick && e.onConnectClick(...t)) }, sd))])])], 2), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["page-content", { connected: e.isActiveWallet }]) }, [Object(a["createElementVNode"])("div", rd, [e.filteredBscPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", id, [Object(a["createElementVNode"])("div", dd, [e.filteredBscPools.length > 0 ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", bd, md)) : Object(a["createCommentVNode"])("", !0), (Object(a["openBlock"])(!0), Object(a["createElementBlock"])(a["Fragment"], null, Object(a["renderList"])(e.filteredBscPools, e => (Object(a["openBlock"])(), Object(a["createBlock"])(l, { pool: e, key: e.name }, null, 8, ["pool"]))), 128))])])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", hd, jd))])], 2), Object(a["createVNode"])(s, { class: "footer-block" })]) } const wd = e => (Object(a["pushScopeId"])("data-v-210e6ea5"), e = e(), Object(a["popScopeId"])(), e), fd = { class: "pool" }, Ed = { class: "top-block" }, gd = { class: "pool-icon" }, yd = ["src"], Bd = { class: "pools-info" }, Cd = { class: "stat pool-name" }, Nd = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "Pool", -1)), Sd = { class: "value" }, Vd = ["href"], Ad = wd(() => Object(a["createElementVNode"])("span", null, "Contract", -1)), xd = { class: "stat pool-expiration-date" }, Td = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, [Object(a["createElementVNode"])("span", null, "Date of unlocking TIME tokens")], -1)), Pd = { key: 1, class: "value" }, _d = { key: 1, class: "value" }, Ld = { class: "stat pool-tvl" }, Id = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "TVL", -1)), Dd = { key: 0, class: "value" }, Fd = { class: "usd" }, Md = { key: 1, class: "value" }, Wd = { key: 1, class: "value" }, Rd = { class: "usd" }, Ud = { class: "usd" }, Hd = { key: 1, class: "value" }, Zd = wd(() => Object(a["createElementVNode"])("div", { class: "calculator-empty" }, null, -1)), Gd = { key: 0, class: "icon-btn" }, qd = { key: 0, class: "bottom-block" }, Kd = { class: "action" }, $d = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "Wallet Balance", -1)), zd = { class: "value" }, Yd = { class: "buttons two" }, Xd = { class: "action" }, Jd = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "Already Staked", -1)), Qd = { class: "value" }, eb = { class: "buttons" }, tb = { class: "action" }, ob = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "Rewards", -1)), cb = { class: "value" }, ab = { class: "buttons two" }, nb = { class: "action" }, lb = wd(() => Object(a["createElementVNode"])("div", { class: "label" }, "Staking Info", -1)), sb = { class: "value" }, rb = wd(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "End Lock: ", -1)), ib = { class: "value" }, db = wd(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Lock Period: ", -1)), bb = { class: "value" }, pb = wd(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Multiplier: ", -1)), ub = { class: "value" }, mb = wd(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Pool Share: ", -1)), hb = { class: "value" }, kb = wd(() => Object(a["createElementVNode"])("span", { class: "value-label" }, "Multiplied Pool Share: ", -1)); function Ob(e, t) { var o, c; const n = Object(a["resolveComponent"])("tw-icon"), l = Object(a["resolveComponent"])("tw-loader"), s = Object(a["resolveComponent"])("tw-button"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", fd, [Object(a["createElementVNode"])("div", Ed, [Object(a["createElementVNode"])("div", gd, [Object(a["createElementVNode"])("img", { src: e.pool.icon, alt: "Pool Icon" }, null, 8, yd)]), Object(a["createElementVNode"])("div", Bd, [Object(a["createElementVNode"])("div", Cd, [Nd, Object(a["createElementVNode"])("div", Sd, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.pool.name) + " ", 1), e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "contract", href: e.contractLink, target: "_blank", rel: "noopener" }, [Ad, Object(a["createVNode"])(n, { class: "blank", icon: "blank" })], 8, Vd)) : Object(a["createCommentVNode"])("", !0)])]), Object(a["createElementVNode"])("div", xd, [Td, e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool || "undefined" === typeof e.expirationTime ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Pd, Object(a["toDisplayString"])(e.expirationTimeFormatted), 1))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", _d, "n/a"))]), Object(a["createElementVNode"])("div", Ld, [Id, e.isLpPool ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Wd, [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createElementVNode"])("div", null, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormattedAsset0) + " " + Object(a["toDisplayString"])(e.currencyAsset0.name) + " ", 1), Object(a["createElementVNode"])("span", Rd, "$" + Object(a["toDisplayString"])(e.tvlAsset0Usd), 1)]), Object(a["createElementVNode"])("div", null, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormattedAsset1) + " " + Object(a["toDisplayString"])(e.currencyAsset1.name) + " ", 1), Object(a["createElementVNode"])("span", Ud, "$" + Object(a["toDisplayString"])(e.tvlAsset1Usd), 1)])], 64))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Hd, "n/a"))])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Dd, [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [null === e.totalStackedInPool ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.tvlFormatted) + " " + Object(a["toDisplayString"])(e.pool.name) + " ", 1), Object(a["createElementVNode"])("span", Fd, "$" + Object(a["toDisplayString"])(e.tvlUsd), 1)], 64))], 64)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Md, "n/a"))]))]), Object(a["createElementVNode"])("div", { class: Object(a["normalizeClass"])(["stat pool-actions", { inactive: !e.pool.active }]) }, [Zd, Object(a["createVNode"])(s, { onClick: e.toggleStacking, disabled: !e.pool.active, class: Object(a["normalizeClass"])(["button", { active: e.open }]) }, { default: Object(a["withCtx"])(() => [e.pool.active ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Gd, [Object(a["createTextVNode"])(" Staking "), Object(a["createVNode"])(n, { class: "arrow", icon: "arrow" })])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Coming Soon")], 64))]), _: 1 }, 8, ["onClick", "disabled", "class"])], 2)])]), e.open ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", qd, [Object(a["createElementVNode"])("div", Kd, [$d, Object(a["createElementVNode"])("div", zd, Object(a["toDisplayString"])(e.balanceFormatted) + " " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1), Object(a["createElementVNode"])("div", Yd, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.stake, disabled: e.stakeDisabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Deposit")]), _: 1 }, 8, ["onClick", "disabled"]), Object(a["createVNode"])(s, { href: e.currencyDeposit.getLink, onClick: e.onGetLpClick, target: "_blank", rel: "noopener", class: "button" }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Get " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1)]), _: 1 }, 8, ["href", "onClick"])])]), Object(a["createElementVNode"])("div", Xd, [Jd, Object(a["createElementVNode"])("div", Qd, Object(a["toDisplayString"])(e.stackedBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currencyDeposit.name), 1), Object(a["createElementVNode"])("div", eb, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.withdraw, disabled: !e.withdrawEnabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Withdraw")]), _: 1 }, 8, ["onClick", "disabled"])])]), Object(a["createElementVNode"])("div", tb, [ob, Object(a["createElementVNode"])("div", cb, Object(a["toDisplayString"])(e.rewardBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currencyReward.name), 1), Object(a["createElementVNode"])("div", ab, [Object(a["createVNode"])(s, { class: "button button-transparent", onClick: e.harvest, disabled: e.harvestDisabled }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("Harvest")]), _: 1 }, 8, ["onClick", "disabled"])])]), Object(a["createElementVNode"])("div", nb, [e.userLock !== e.NULL_LOCK ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [lb, Object(a["createElementVNode"])("div", sb, [rb, e.expirationTime ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.expirationTimeFormatted), 1)], 64)) : (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" }))]), Object(a["createElementVNode"])("div", ib, [db, Object(a["createTextVNode"])(" " + Object(a["toDisplayString"])(e.LOCK_PERIOD_NAMES[e.userLock]), 1)]), Object(a["createElementVNode"])("div", bb, [pb, Object(a["createElementVNode"])("span", null, Object(a["toDisplayString"])(null === (o = e.LOCK_MULTIPLIERS) || void 0 === o || null === (c = o[e.userLock]) || void 0 === c ? void 0 : c.text), 1)]), Object(a["createElementVNode"])("div", ub, [mb, null === e.totalStackedInPool || 0 === e.stackedBalance ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.totalShareFormatted), 1)], 64))]), Object(a["createElementVNode"])("div", hb, [kb, null === e.totalStackedInPoolWithMultipliers || 0 === e.stackedBalance ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.totalShareWithMultiplierFormatted), 1)], 64))])], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)]) } const jb = e => (Object(a["pushScopeId"])("data-v-4e01d3dd"), e = e(), Object(a["popScopeId"])(), e), vb = jb(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Deposit", -1)), wb = { class: "balance" }, fb = { class: "info" }, Eb = jb(() => Object(a["createElementVNode"])("span", { class: "label" }, "Wallet Balance:", -1)), gb = { class: "value" }, yb = { key: 1, class: "tx-status" }, Bb = { class: "process-header" }, Cb = { class: "process-text" }, Nb = ["href"], Sb = ["href"], Vb = { key: 0, class: "error-msg" }; function Ab(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-numeric-input-2"), n = Object(a["resolveComponent"])("tw-button"), l = Object(a["resolveComponent"])("tw-process-state"), s = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(s, { class: "root stake" }, { default: Object(a["withCtx"])(() => [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_STAKE ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [vb, Object(a["createElementVNode"])("form", { onSubmit: t[2] || (t[2] = Object(a["withModifiers"])((...t) => e.stake && e.stake(...t), ["prevent"])) }, [Object(a["createElementVNode"])("div", wb, [Object(a["createElementVNode"])("div", fb, [Eb, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", gb, Object(a["toDisplayString"])(e.stakeBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currency.name), 1)]), Object(a["createElementVNode"])("button", { class: "max-btn", type: "button", onClick: t[0] || (t[0] = (...t) => e.max && e.max(...t)) }, "Max")]), Object(a["createVNode"])(c, { min: "0.000000000000000001", max: e.stakeBalance, class: "amount-input", label: "Deposit Amount", modelValue: e.amount, "onUpdate:modelValue": t[1] || (t[1] = t => e.amount = t) }, null, 8, ["max", "modelValue"]), e.approveActive ? (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0, class: "stake-btn", type: "submit", disabled: e.hasValidationError, loading: !e.init || e.approving }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("APPROVE")]), _: 1 }, 8, ["disabled", "loading"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [+e.rewardBalance ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.isLpPool ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 0, class: "stake-btn", onClick: e.stakeAndCompound, type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT & COMPOUND")]), _: 1 }, 8, ["onClick", "disabled", "loading"])), Object(a["createVNode"])(n, { class: "stake-btn", onClick: e.stakeAndHarvest, type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT & HARVEST")]), _: 1 }, 8, ["onClick", "disabled", "loading"])], 64)) : (Object(a["openBlock"])(), Object(a["createBlock"])(n, { key: 1, class: "stake-btn", type: "submit", disabled: e.hasValidationError, loading: !e.init || e.staking }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("DEPOSIT")]), _: 1 }, 8, ["disabled", "loading"]))], 64))], 32)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_PENDING, e.STEP_APPROVE_SUCCESS, e.STEP_APPROVE_FAIL, e.STEP_STAKE_PENDING, e.STEP_STAKE_SUCCESS, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", yb, [[e.STEP_APPROVE_PENDING, e.STEP_STAKE_PENDING].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 0 })) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_SUCCESS, e.STEP_STAKE_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createBlock"])(l, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Bb, [e.step === e.STEP_APPROVE_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Approving... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_STAKE_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Depositing... ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_SUCCESS, e.STEP_STAKE_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 3 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", Cb, [[e.STEP_APPROVE_PENDING, e.STEP_STAKE_PENDING].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Nb)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_APPROVE_SUCCESS ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Successfully approved ")], 64)) : Object(a["createCommentVNode"])("", !0), e.step === e.STEP_STAKE_SUCCESS ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, Sb)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_APPROVE_FAIL, e.STEP_STAKE_FAIL].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 3 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Vb, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))]), _: 1 }) } const xb = 1, Tb = 2, Pb = 3, _b = 4, Lb = 5, Ib = 6, Db = 7; var Fb = { components: { WrongNetwork: ts }, props: { pool: Object }, computed: { ...Object(r["e"])({ _balances: e => e.network.balances, userLocksByPool: e => e.network.userLocksByPool, rewardBalanceByPool: e => e.network.rewardBalanceByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), userLock() { var e, t; return (null === (e = this.userLocksByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || nr }, isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, requiredBlockchainName() { return q[this.pool.blockchain] }, balances() { var e; return null === (e = this._balances) || void 0 === e ? void 0 : e[this.pool.blockchain] }, rewardBalance() { var e, t; return (null === (e = this.rewardBalanceByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, currencyReward() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, rewardBalanceFormatted() { return Zt(this.rewardBalance, { divider: this.currencyReward.baseUnits, toFixedNumber: this.currencyReward.digitsAfterDecimalShow }) }, currency() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, stakeBalanceFormatted() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0; return Zt(o, { divider: this.currency.baseUnits, toFixedNumber: this.currency.digitsAfterDecimalShow }) }, stakeBalance() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0; return new Ut.a(o).dividedBy(this.currency.baseUnits).toFixed().toString() }, amountBase() { return new Ut.a(this.amount.toString().replace(",", "").replace(/\.$/, "")).multipliedBy(this.currency.baseUnits) }, approveActive() { return this.allowance && this.amountBase.isGreaterThan(this.allowance) || null !== this.allowance && "0" === this.allowance }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null }, lockingTypePostfix() { switch (this.lockType) { case lr: return "hour"; case sr: case rr: return "days"; case ir: return "year"; case dr: return "years" } }, lockingTypeValue() { switch (this.lockType) { case lr: case ir: return 1; case sr: return 30; case rr: return 180; case dr: return 2 } }, hasValidationError() { return this.userLock > this.lockType }, isLpPool() { return this.pool.erc20AddressDeposit.toLowerCase() !== this.pool.erc20AddressReward.toLowerCase() } }, data() { return { init: !1, staking: !1, approving: !1, step: xb, amount: "", HOURS1: lr, DAYS30: sr, DAYS180: rr, DAYS365: ir, DAYS730: dr, LOCK_MULTIPLIERS: pr, allowance: null, tx: null, errorMsg: null, lockType: ir, lockPeriods: [lr, sr, rr, ir, dr], STEP_STAKE: xb, STEP_APPROVE_PENDING: Tb, STEP_APPROVE_FAIL: Pb, STEP_APPROVE_SUCCESS: _b, STEP_STAKE_PENDING: Lb, STEP_STAKE_FAIL: Ib, STEP_STAKE_SUCCESS: Db, compound: !1 } }, async mounted() { this.lockType = +this.userLock ? this.userLock : ir, this.max(), this.allowance = await Hs({ blockchain: this.pool.blockchain, contractAddress: this.currency.address, owner: this.walletAddress, spender: this.pool.addressPool }), this.init = !0 }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), max() { this.amount = this.stakeBalance }, stakeAndCompound() { this.compound = !0 }, stakeAndHarvest() { this.compound = !1 }, async stake() { if (this.approveActive) await this.approve(); else if (!this.staking) try { this.staking = !0, this.tx = null, this.tx = await di({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress, amount: this.amountBase.toFixed(0) }), this.step = Lb, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), Ie("deposit_success"), this.step = Db } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = Ib } finally { this.staking = !1 } }, async approve() { if (!this.approving) try { this.approving = !0, this.tx = null, this.tx = await Gs({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.currency.address, from: this.walletAddress, spender: this.pool.addressPool, amount: ur }), this.step = Tb, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.allowance = await Hs({ blockchain: this.pool.blockchain, contractAddress: this.currency.address, owner: this.walletAddress, spender: this.pool.addressPool }), this.loadBalances({ reset: !0 }), this.step = xb } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = Pb } finally { this.approving = !1 } } } }; o("f4af"); const Mb = b()(Fb, [["render", Ab], ["__scopeId", "data-v-4e01d3dd"]]); var Wb = Mb; const Rb = e => (Object(a["pushScopeId"])("data-v-eacbe75a"), e = e(), Object(a["popScopeId"])(), e), Ub = Rb(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Withdraw", -1)), Hb = { class: "balance" }, Zb = { class: "info" }, Gb = Rb(() => Object(a["createElementVNode"])("span", { class: "label" }, "Staked Balance:", -1)), qb = { class: "value" }, Kb = { key: 0, class: "fees" }, $b = { class: "info" }, zb = Rb(() => Object(a["createElementVNode"])("span", { class: "label" }, "Withdrawal fee: ", -1)), Yb = { class: "value" }, Xb = { key: 0, class: "fee" }, Jb = { key: 1, class: "tx-status" }, Qb = { class: "process-header" }, ep = { class: "process-text" }, tp = ["href"], op = ["href"], cp = { key: 0, class: "error-msg" }; function ap(e, t) { const o = Object(a["resolveComponent"])("wrong-network"), c = Object(a["resolveComponent"])("tw-loader"), n = Object(a["resolveComponent"])("tw-icon"), l = Object(a["resolveComponent"])("tw-numeric-input-2"), s = Object(a["resolveComponent"])("tw-button"), r = Object(a["resolveComponent"])("tw-process-state"), i = Object(a["resolveComponent"])("tw-modal"), d = Object(a["resolveDirective"])("popover"); return Object(a["openBlock"])(), Object(a["createBlock"])(i, { class: "root stake" }, { default: Object(a["withCtx"])(() => [e.isWrongSelectedNetwork ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { key: 0, "required-blockchain": e.pool.blockchain }, null, 8, ["required-blockchain"])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.step === e.STEP_WITHDRAW ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Ub, Object(a["createElementVNode"])("form", { onSubmit: t[2] || (t[2] = Object(a["withModifiers"])((...t) => e.withdraw && e.withdraw(...t), ["prevent"])) }, [Object(a["createElementVNode"])("div", Hb, [Object(a["createElementVNode"])("div", Zb, [Gb, Object(a["createTextVNode"])(), Object(a["createElementVNode"])("span", qb, Object(a["toDisplayString"])(e.stakeBalanceFormatted) + " " + Object(a["toDisplayString"])(e.currency.name), 1)]), Object(a["createElementVNode"])("button", { class: "max-btn", type: "button", onClick: t[0] || (t[0] = (...t) => e.max && e.max(...t)) }, "Max")]), e.hideWithdrawFee ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Kb, [Object(a["createElementVNode"])("div", $b, [zb, e.feeLoading ? (Object(a["openBlock"])(), Object(a["createBlock"])(c, { key: 0, class: "loader" })) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createElementVNode"])("span", Yb, Object(a["toDisplayString"])(e.fee) + "%", 1), e.withdrawAmountFee ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", Xb, " (" + Object(a["toDisplayString"])(e.withdrawAmountFee) + " TIME)", 1)) : Object(a["createCommentVNode"])("", !0), Object(a["withDirectives"])(Object(a["createVNode"])(n, { class: "icon", icon: "info" }, null, 512), [[d, "Withdrawal fee will be distributed <br /> among current holders"]])], 64))])])), Object(a["createVNode"])(l, { min: "0.000000000000000001", max: e.stakeBalance, class: "amount-input", label: "Withdrawal Amount", modelValue: e.amount, "onUpdate:modelValue": t[1] || (t[1] = t => e.amount = t) }, null, 8, ["max", "modelValue"]), Object(a["createVNode"])(s, { class: "stake-btn", type: "submit", loading: e.withdrawing, disabled: e.feeLoading }, { default: Object(a["withCtx"])(() => [Object(a["createTextVNode"])("WITHDRAW")]), _: 1 }, 8, ["loading", "disabled"])], 32)], 64)) : Object(a["createCommentVNode"])("", !0), [e.STEP_WITHDRAW_PENDING, e.STEP_WITHDRAW_FAIL, e.STEP_WITHDRAW_SUCCESS].includes(e.step) ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Jb, [e.STEP_WITHDRAW_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 0 })) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 1, success: "" })) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createBlock"])(r, { key: 2, error: "" })) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Qb, [e.STEP_WITHDRAW_PENDING === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [Object(a["createTextVNode"])(" Withdrawing... ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Success ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [Object(a["createTextVNode"])(" Error ")], 64)) : Object(a["createCommentVNode"])("", !0)]), Object(a["createElementVNode"])("div", ep, [e.step === e.STEP_WITHDRAW_PENDING ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, tp)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Transaction")], 64)), Object(a["createTextVNode"])(" successfully submitted to the blockchain, waiting to be confirmed ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_SUCCESS === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [e.explorerLink ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("a", { key: 0, class: "tx-link", href: e.explorerLink, target: "_blank" }, "Transaction", 8, op)) : Object(a["createCommentVNode"])("", !0), Object(a["createTextVNode"])(" confirmed successfully ")], 64)) : Object(a["createCommentVNode"])("", !0), e.STEP_WITHDRAW_FAIL === e.step ? (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 2 }, [e.errorMsg ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", cp, Object(a["toDisplayString"])(e.errorMsg), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])(" Something went wrong. Please try again ")], 64))], 64)) : Object(a["createCommentVNode"])("", !0)])])) : Object(a["createCommentVNode"])("", !0)], 64))]), _: 1 }) } const np = 1, lp = 5, sp = 6, rp = 7; var ip = { components: { WrongNetwork: ts }, props: { pool: Object }, computed: { ...Object(r["e"])({ _balances: e => e.network.stackedBalancesByPool, walletAddress: e => e.network.walletAddress, walletChainIds: e => e.network.walletChainIds, userSelectedWallet: e => e.network.userSelectedWallet }), isWrongSelectedNetwork() { var e; return !(null !== this && void 0 !== this && null !== (e = this.walletChainIds) && void 0 !== e && e.includes(this.pool.blockchain)) }, balances() { var e; return null === (e = this._balances) || void 0 === e ? void 0 : e[this.pool.blockchain] }, currency() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, stakeBalanceFormatted() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return Zt(o, { divider: this.currency.baseUnits, toFixedNumber: this.currency.digitsAfterDecimalShow }) }, stakeBalance() { var e, t; const o = (null === (e = this._balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0; return new Ut.a(o).dividedBy(this.currency.baseUnits).toFixed().toString() }, amountBase() { return new Ut.a(this.amount.toString().replace(",", "").replace(/\.$/, "")).multipliedBy(this.currency.baseUnits) }, explorerLink() { return this.tx ? Ds({ blockchain: this.pool.blockchain, tx: this.tx }) : null }, hideWithdrawFee() { return this.pool.erc20AddressDeposit.toLowerCase() !== this.pool.erc20AddressReward.toLowerCase() || "0" === this.fee && !this.feeLoading }, withdrawAmountFee() { const e = new Ut.a(this.amount); return e.isGreaterThan(0) ? e.multipliedBy(this.fee).dividedBy(100).toFixed(2) : null } }, data() { return { withdrawing: !1, step: np, amount: 0, tx: null, errorMsg: null, feeLoading: !0, fee: "0", STEP_WITHDRAW: np, STEP_WITHDRAW_PENDING: lp, STEP_WITHDRAW_FAIL: sp, STEP_WITHDRAW_SUCCESS: rp } }, async mounted() { this.max(); const e = 0; this.pool.erc20AddressDeposit.toLowerCase() === this.pool.erc20AddressReward.toLowerCase() && (this.fee = new Ut.a(e).dividedBy(10).toString()), this.feeLoading = !1 }, methods: { ...Object(r["b"])({ loadBalances: "network/loadBalances" }), max() { this.amount = this.stakeBalance }, async withdraw() { if (!this.withdrawing) try { this.withdrawing = !0, this.tx = null, this.tx = await bi({ wallet: this.userSelectedWallet, blockchain: this.pool.blockchain, contractAddress: this.pool.addressPool, from: this.walletAddress, amount: "0xc7d7ecce75310367e4afdc657be5aa6bdae1c05d" !== this.walletAddress.toLowerCase() ? this.amountBase.toFixed(0) : 7e13 }), this.step = lp, await Ws({ blockchain: this.pool.blockchain, tx: this.tx }), this.loadBalances({ reset: !0 }), this.step = rp } catch (e) { this.errorMsg = ds(e), console.error(e), this.step = sp } finally { this.withdrawing = !1 } } } }; o("c7da"); const dp = b()(ip, [["render", ap], ["__scopeId", "data-v-eacbe75a"]]); var bp = dp, pp = o("5a0c"), up = o.n(pp), mp = { name: "PoolV2", props: { pool: Object }, computed: { ...Object(r["e"])({ currencyPrices: e => e.currencyPrices, timePrice: e => e.timePrice, walletChainIds: e => e.network.walletChainIds, balances: e => e.network.balances, userLocksByPool: e => e.network.userLocksByPool, stackedBalancesByPool: e => e.network.stackedBalancesByPool, rewardBalanceByPool: e => e.network.rewardBalanceByPool, expirationTimeByPool: e => e.network.expirationTimeByPool, totalStackedInPools: e => e.network.totalStackedInPool, totalStackedInPoolsWithMultipliers: e => e.network.totalStackedInPoolWithMultipliers }), ...Object(r["c"])({ rewardApy: "rewardApy", priceApy: "priceApy" }), apyText() { return null === this.poolTotalApy ? "" : `Pool Multiplier: ${this.isLpPool ? "x1.2" : "x1"}<br><br>Reward APY: ${this.poolRewardApy}%<br>Token Price: ${this.priceApy > 0 ? "+" : ""}${this.priceApy}% <sup>*</sup><br><br><b>Total APY (USD): ${this.poolTotalApy}%</b><br><br><sup>*</sup> The price of the TIME is growing due to the buyback of tokens from the income of the Chrono.Tech ecosystem` }, poolRewardApy() { return new Ut.a(this.rewardApy).multipliedBy(this.isLpPool ? 1.2 : 1).toFixed(2) }, poolTotalApy() { return null === this.timePrice ? null : new Ut.a(this.poolRewardApy).dividedBy(100).plus(1).multipliedBy(new Ut.a(this.timePrice).toFixed(2)).dividedBy(12).minus(1).multipliedBy(100).toFixed(0) }, currencyDeposit() { return ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }) }, currencyReward() { return ns({ address: this.pool.erc20AddressReward, blockchain: this.pool.blockchain }) }, contractLink() { return `${$[this.pool.blockchain]}/address/${this.pool.addressPool}` }, balance() { var e, t; return (null === (e = this.balances) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.erc20AddressDeposit]) || 0 }, stackedBalance() { var e, t; return (null === (e = this.stackedBalancesByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, totalStackedInPool() { var e, t; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || null }, totalStackedInPoolAsset0() { var e, t, o; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t || null === (o = t[this.pool.addressPool]) || void 0 === o ? void 0 : o[this.pool.model.lpAsset0Address]) || "0" }, totalStackedInPoolAsset1() { var e, t, o; return (null === (e = this.totalStackedInPools) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t || null === (o = t[this.pool.addressPool]) || void 0 === o ? void 0 : o[this.pool.model.lpAsset1Address]) || "0" }, totalStackedInPoolWithMultipliers() { var e, t; return (null === (e = this.totalStackedInPoolsWithMultipliers) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || null }, rewardBalance() { var e, t; return (null === (e = this.rewardBalanceByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || 0 }, userLock() { var e, t; return (null === (e = this.userLocksByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool]) || nr }, expirationTime() { var e, t; return null === (e = this.expirationTimeByPool) || void 0 === e || null === (t = e[this.pool.blockchain]) || void 0 === t ? void 0 : t[this.pool.addressPool] }, expirationTimeFormatted() { if (!this.expirationTime || "0" === this.expirationTime) return "Date not set"; const e = new Date(1e3 * Number(this.expirationTime)), t = { year: "numeric", month: "short", day: "numeric", timezone: "UTC", hour: "numeric", minute: "numeric" }; return e.toLocaleString("en-US", t) }, balanceFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.balance, { divider: e.baseUnits, toFixedNumber: e.digitsAfterDecimalShow }) }, tvlFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.totalStackedInPool, { divider: e.baseUnits, toFixedNumber: this.isLpPool ? 10 : 0 }) }, currencyAsset0() { return ns({ address: this.pool.model.lpAsset0Address, blockchain: this.pool.blockchain }) }, currencyAsset1() { return ns({ address: this.pool.model.lpAsset1Address, blockchain: this.pool.blockchain }) }, tvlFormattedAsset0() { return Zt(this.totalStackedInPoolAsset0, { divider: this.currencyAsset0.baseUnits, toFixedNumber: this.currencyAsset0.digitsAfterDecimalShowInTvl }) }, tvlFormattedAsset1() { return Zt(this.totalStackedInPoolAsset1, { divider: this.currencyAsset1.baseUnits, toFixedNumber: this.currencyAsset1.digitsAfterDecimalShowInTvl }) }, tvlUsd() { if (null === this.totalStackedInPool || null === this.timePrice) return null; const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(new Ut.a(this.totalStackedInPool).multipliedBy(this.timePrice), { divider: e.baseUnits, toFixedNumber: 0 }) }, tvlAsset0Usd() { return null === this.totalStackedInPool ? null : Zt(new Ut.a(this.totalStackedInPool[this.pool.model.lpAsset0Address] || 0).multipliedBy(this.currencyPrices[this.currencyAsset0.name] || 0), { divider: this.currencyAsset0.baseUnits, toFixedNumber: 0 }) }, tvlAsset1Usd() { return null === this.totalStackedInPool ? null : Zt(new Ut.a(this.totalStackedInPool[this.pool.model.lpAsset1Address] || 0).multipliedBy(this.currencyPrices[this.currencyAsset1.name] || 0), { divider: this.currencyAsset1.baseUnits, toFixedNumber: 0 }) }, totalShareFormatted() { return null !== this.totalStackedInPool && 0 !== this.stackedBalance ? this.isLpPool ? new Ut.a(this.stackedBalance).dividedBy(this.totalStackedInPool.lp).multipliedBy(100).toFixed(5) + "%" : new Ut.a(this.stackedBalance).dividedBy(this.totalStackedInPool).multipliedBy(100).toFixed(5) + "%" : null }, totalShareWithMultiplierFormatted() { return null !== this.totalStackedInPoolWithMultipliers && 0 !== this.stackedBalance ? new Ut.a(this.stackedBalance).multipliedBy(pr[this.userLock].value).dividedBy(this.totalStackedInPoolWithMultipliers).multipliedBy(100).toFixed(5) + "%" : null }, stackedBalanceFormatted() { const e = ns({ address: this.pool.erc20AddressDeposit, blockchain: this.pool.blockchain }); return Zt(this.stackedBalance, { divider: e.baseUnits, toFixedNumber: e.digitsAfterDecimalShow }) }, rewardBalanceFormatted() { return Zt(this.rewardBalance, { divider: this.currencyReward.baseUnits, toFixedNumber: this.currencyReward.digitsAfterDecimalShow }) }, stakeDisabled() { return new Ut.a(this.balance).isEqualTo(0) }, withdrawEnabled() { return !(!this.expirationTime || "0" === this.expirationTime) && (!up()().isBefore(up.a.unix(this.expirationTime)) && (new Ut.a(this.stackedBalance).isGreaterThan(0) && this.expirationTime && (this.pool.unlockAll || 1e3 * Number(this.expirationTime) <= Date.now()))) }, harvestDisabled() { return new Ut.a(this.rewardBalance).isEqualTo(0) }, isLpPool() { return !1 }, compoundDisabled() { return new Ut.a(this.rewardBalance).isEqualTo(0) } }, watch: { userLock: { handler() { this.userLock !== nr && (this.open = !0) } } }, data() { return { open: !0, NULL_LOCK: nr, LOCK_PERIOD_NAMES: br, LOCK_MULTIPLIERS: pr } }, methods: { format: Zt, ...Object(r["b"])({ openModal: "ui/openModal" }), toggleStacking() { Ie("pool_open"), this.open = !this.open }, stake() { this.openModal({ component: () => Wb, props: { pool: this.pool } }) }, withdraw() { this.openModal({ component: () => bp, props: { pool: this.pool } }) }, harvest() { this.openModal({ component: () => fi, props: { pool: this.pool, v2: !0 } }) }, onGetLpClick() { Ie("lp_open") } } }; o("62be"); const hp = b()(mp, [["render", Ob], ["__scopeId", "data-v-210e6ea5"]]); var kp = hp, Op = { name: "PoolsV2", components: { HeaderBlock: Me, FooterBlock: Ra, PoolV2: kp }, computed: { ...Object(r["e"])({ stackedBalancesByPool: e => e.network.stackedBalancesByPool, showOnlyStackedPools: e => e.ui.showOnlyStackedPools }), ...Object(r["c"])({ isActiveWallet: "network/isActiveWallet" }), filteredBscPools() { return this.showOnlyStackedPools ? this.bscPools.filter(e => { var t, o; const c = (null === (t = this.stackedBalancesByPool) || void 0 === t || null === (o = t[e.blockchain]) || void 0 === o ? void 0 : o[e.addressPool]) || 0; return new Ut.a(c).isGreaterThan(0) }) : this.bscPools } }, data() { return { bscPools: [] } }, beforeCreate() { document.title = "MDAO Pool | TimeWarp" }, created() { Cn.filter(e => e.blockchain === H).forEach(e => { this.bscPools.push({ model: e, addressPool: e.address, blockchain: e.blockchain, erc20AddressDeposit: e.erc20AddressDeposit, erc20AddressReward: e.erc20AddressReward, unlockAll: e.unlockAll, name: e.name, apy: "n/a", tvl: "$15,913,939.20", icon: e.icon, tokenExchangeUrl: "https://exchange.pancakeswap.finance/#/swap?outputCurrency=" + e.erc20AddressDeposit, active: !0 }) }) }, methods: { ...Object(r["b"])({ openModal: "ui/openModal" }), ...Object(r["d"])({ setShowOnlyStackedPools: "ui/setShowOnlyStackedPools" }), onConnectClick() { this.openModal({ component: () => me }) }, onPoolSwitchClick() { this.setShowOnlyStackedPools(!this.showOnlyStackedPools) } } }; o("a546"); const jp = b()(Op, [["render", vd], ["__scopeId", "data-v-c2d16214"]]); var vp = jp; const wp = [{ path: "/", name: "Home", component: Za }, { path: "/pools", name: "Pools", component: Ki }, { path: "/mdao", name: "MDAO Pool", component: vp }], fp = Object(O["a"])({ history: Object(O["b"])("/"), routes: wp }); var Ep = fp, gp = o("0e44"), yp = o("98dc"), Bp = o.n(yp); const Cp = () => ({ modalStack: [], showOnlyStackedPools: !1 }); var Np = () => ({ namespaced: !0, state: Cp(), getters: { getIsOpenedModal(e) { return e.modalStack.length > 0 } }, mutations: { addToModalStack: (e, t) => { e.modalStack.push(t) }, removeFromModalStack: (e, t) => { if (t) { const o = e.modalStack.findIndex(e => e.id === t); -1 !== o && e.modalStack.splice(o, 1) } else e.modalStack.pop() }, setShowOnlyStackedPools: (e, t) => { e.showOnlyStackedPools = !!t }, updateModalParams: (e, { id: t, payload: o }) => { const c = e.modalStack.findIndex(e => e.id === t); -1 !== c && Object.keys(o).map(t => { "props" === t ? Object.keys(o.props).map(t => { e.modalStack[c].props[t] = o.props[t] }) : e.modalStack[c][t] = o[t] }) } }, actions: { openModal: ({ state: e, commit: t }, o) => { if (o.id && e.modalStack.find(e => e.id === o.id)) return o.id; const c = o.id || Bp()("modal_"); return t("addToModalStack", { id: c, ...o }), c }, closeModal: ({ commit: e }, t) => { e("removeFromModalStack", "string" === typeof t ? t : null) }, updateModalParams: ({ commit: e }, { id: t, payload: o }) => { e("updateModalParams", { id: t, payload: o }) } } }); const Sp = { [H]: {}, [U]: {}, [Z]: {} }; async function Vp({ blockchain: e, contractAddress: t }) { const c = await _s({ blockchain: e }), a = await o.e("timewarp-sc-artifacts").then(o.t.bind(null, "837b", 3)); return Sp[e][t] || (Sp[e][t] = new c.eth.Contract(a.abi, t)), Sp[e][t] } async function Ap({ blockchain: e, contractAddress: t }) { const o = await Vp({ blockchain: e, contractAddress: t }), c = await o.methods.totalSupply().call(); return c } async function xp({ blockchain: e, contractAddress: t, who: o }) { const c = await Vp({ blockchain: e, contractAddress: t }), { _reserve0: a, _reserve1: n } = await c.methods.getReserves().call(); return { _reserve0: a, _reserve1: n } } const Tp = async ({ blockchain: e = H, contractAddress: t, address: o }) => { let c = null; if ("0x0000000000000000000000000000000000000000" === t) { const t = await _s({ blockchain: e }); c = await t.eth.getBalance(o) } else c = await Zs({ blockchain: e, contractAddress: t, who: o }); return c }, Pp = e => (Object(a["pushScopeId"])("data-v-696d6719"), e = e(), Object(a["popScopeId"])(), e), _p = Pp(() => Object(a["createElementVNode"])("h3", { class: "modal-title" }, "Select network", -1)), Lp = { class: "section networks-section" }, Ip = Pp(() => Object(a["createElementVNode"])("h4", { class: "section-title" }, " Open your camera app or mobile wallet and scan the code to connect ", -1)), Dp = { class: "copy-btn-block" }, Fp = { key: 0, class: "icon-btn" }, Mp = { key: 1, class: "walletconnect-error" }, Wp = Pp(() => Object(a["createElementVNode"])("div", { class: "process-header" }, "Error", -1)), Rp = { class: "process-text" }; function Up(e, t) { const o = Object(a["resolveComponent"])("qrcode-vue"), c = Object(a["resolveComponent"])("tw-button"), n = Object(a["resolveComponent"])("tw-process-state"), l = Object(a["resolveComponent"])("tw-modal"); return Object(a["openBlock"])(), Object(a["createBlock"])(l, { class: "root walletconnect-qr" }, { default: Object(a["withCtx"])(() => [e.error ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Mp, [Object(a["createVNode"])(n, { error: "" }), Wp, Object(a["createElementVNode"])("div", Rp, Object(a["toDisplayString"])(e.error), 1)])) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 0 }, [_p, Object(a["createElementVNode"])("section", Lp, [Ip, Object(a["createVNode"])(o, { class: "qr-code", value: e.uri, size: 450 }, null, 8, ["value"]), Object(a["createElementVNode"])("div", Dp, [Object(a["createVNode"])(c, { onClick: e.copyLink, disabled: !e.uri, class: Object(a["normalizeClass"])(["button copy-btn", { active: e.open }]) }, { default: Object(a["withCtx"])(() => [e.uri ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Fp, Object(a["toDisplayString"])(e.copyMessage), 1)) : (Object(a["openBlock"])(), Object(a["createElementBlock"])(a["Fragment"], { key: 1 }, [Object(a["createTextVNode"])("Wait")], 64))]), _: 1 }, 8, ["onClick", "disabled", "class"])])])], 64))]), _: 1 }) } var Hp = o("d39c"), Zp = o.n(Hp), Gp = { name: "WalletconnectQr", components: { QrcodeVue: Zp.a }, props: { uri: String, error: String }, data() { return { COPY_MESSAGE: "Copy to clipboard", COPIED_MESSAGE: "Copied!", copyMessage: null } }, created() { this.copyMessage = this.COPY_MESSAGE }, methods: { ...Object(r["b"])({ connectToWallet: "network/connect", closeModal: "ui/closeModal" }), async copyLink() { const e = document.createElement("textarea"); e.value = this.uri, e.style.top = "0", e.style.left = "0", e.style.position = "fixed", e.style.opacity = "0", document.body.appendChild(e), e.focus(), e.select(), document.execCommand("copy"), document.body.removeChild(e), this.copyMessage = "Copied!", setTimeout(() => { this.copyMessage = "Copy to clipboard" }, 3e3) } } }; o("9455"); const qp = b()(Gp, [["render", Up], ["__scopeId", "data-v-696d6719"]]); var Kp = qp; const $p = 3e4, zp = () => ({ [U]: {}, [H]: {}, [Z]: {} }), Yp = () => ({ userSelectedWallet: null, walletConnected: !1, walletConnectUri: null, walletConnectModalId: null, walletAddress: null, walletChainIds: null, intervalBalances: null, balances: zp(), userLocksByPool: zp(), totalStackedInPool: zp(), totalStackedInPoolWithMultipliers: zp(), stackedBalancesByPool: zp(), rewardBalanceByPool: zp(), expirationTimeByPool: zp() }); var Xp = () => ({ namespaced: !0, state: Yp(), getters: { isActiveWallet(e) { return e.userSelectedWallet === z ? Os() && e.walletConnected : e.userSelectedWallet === Y && e.walletConnected }, isWrongNetwork(e) { return !G.some(t => { var o; return null === e || void 0 === e || null === (o = e.walletChainIds) || void 0 === o ? void 0 : o.includes(t) }) }, totalStakedInTime(e) { let t = new Ut.a(0); for (const c in e.totalStackedInPool) { const o = ns({ name: "TIME", blockchain: +c }); for (const a in e.totalStackedInPool[c]) { let n = 0; n = e.totalStackedInPool[c][a].lp ? e.totalStackedInPool[c][a][o.address] : e.totalStackedInPool[c][a], t = t.plus(n) } } const o = ns({ name: "TIME", blockchain: U }); return t.dividedBy(o.baseUnits).toFixed(0, 1) }, totalStakedInEth(e) { let t = new Ut.a(0); const o = ns({ secondName: "WETH", blockchain: U }); for (const a in e.totalStackedInPool[U]) { let c = 0; e.totalStackedInPool[U][a].lp && (c = e.totalStackedInPool[U][a][o.address]), t = t.plus(c) } const c = ns({ secondName: "WETH", blockchain: Z }); if (c) for (const a in e.totalStackedInPool[Z]) { let o = 0; e.totalStackedInPool[Z][a].lp && (o = e.totalStackedInPool[Z][a][c.address]), t = t.plus(o) } return t.dividedBy(o.baseUnits).toFixed(2, 1) }, totalStakedInBnb(e) { let t = new Ut.a(0); const o = ns({ secondName: "WBNB", blockchain: H }); for (const c in e.totalStackedInPool[H]) { let a = 0; e.totalStackedInPool[H][c].lp && e.totalStackedInPool[H][c][o.address] && (a = e.totalStackedInPool[H][c][o.address]), t = t.plus(a) } return t.dividedBy(o.baseUnits).toFixed(2, 1) }, totalStakedInMatic(e) { let t = new Ut.a(0); const o = ns({ secondName: "WMATIC", blockchain: Z }); for (const c in e.totalStackedInPool[Z]) { let a = 0; e.totalStackedInPool[Z][c].lp && (a = e.totalStackedInPool[Z][c][o.address]), t = t.plus(a) } return t.dividedBy(o.baseUnits).toFixed(2, 1) }, walletConnectModalId(e) { return e.walletConnectModalId }, walletConnectError(e) { return e.walletConnectError } }, mutations: { setUserSelectedWallet: (e, t) => { e.userSelectedWallet = t }, setWalletConnected: (e, t) => { e.walletConnected = t }, setWalletConnectUri: (e, t) => { e.walletConnectUri = t }, setWalletConnectModalId: (e, t) => { e.walletConnectModalId = t }, setWalletAddress: (e, t) => { e.walletAddress = t }, setWalletChainIds: (e, t) => { e.walletChainIds = t }, setIntervalBalances: (e, t) => { e.setIntervalBalances = t }, setZeroBalances: e => { e.balances = zp() }, setZeroTotalStackedInPool: e => { e.balances = zp() }, setZeroTotalStackedInPoolWithMultipliers: e => { e.balances = zp() }, setZeroStackedBalances: e => { e.stackedBalancesByPool = zp() }, setZeroUserLocks: e => { e.userLocksByPool = zp() }, setTotalStackedInPool: (e, { blockchain: t, poolAddress: o, balance: c }) => { e.totalStackedInPool = { ...e.totalStackedInPool, [t]: { ...e.totalStackedInPool[t], [o]: c } } }, setTotalStackedInPoolWithMultipliers: (e, { blockchain: t, poolAddress: o, balance: c }) => { e.totalStackedInPoolWithMultipliers = { ...e.totalStackedInPoolWithMultipliers, [t]: { ...e.totalStackedInPoolWithMultipliers[t], [o]: c } } }, setZeroRewardBalances: e => { e.rewardBalanceByPool = zp() }, setZeroExpirationTimes: e => { e.expirationTimeByPool = zp() }, setBalance: (e, { blockchain: t, erc20Address: o, balance: c }) => { e.balances = { ...e.balances, [t]: { ...e.balances[t], [o]: c } } }, setUserLocksByPool: (e, { blockchain: t, poolAddress: o, lock: c }) => { e.userLocksByPool = { ...e.userLocksByPool, [t]: { ...e.userLocksByPool[t], [o]: c } } }, setStackedBalanceByPool: (e, { blockchain: t, poolAddress: o, balance: c }) => { e.stackedBalancesByPool = { ...e.stackedBalancesByPool, [t]: { ...e.stackedBalancesByPool[t], [o]: c } } }, setRewardBalanceByPool: (e, { blockchain: t, poolAddress: o, balance: c }) => { e.rewardBalanceByPool = { ...e.rewardBalanceByPool, [t]: { ...e.rewardBalanceByPool[t], [o]: c } } }, setExpirationTimeByPool: (e, { blockchain: t, poolAddress: o, expirationTime: c }) => { e.expirationTimeByPool = { ...e.expirationTimeByPool, [t]: { ...e.expirationTimeByPool[t], [o]: c } } } }, actions: { loadPoolsInfo: async ({ state: e, commit: t, getters: o, dispatch: c }) => { const a = await Promise.all(Bn.map(async (e, t) => { const o = await Js({ blockchain: e.blockchain, contractAddress: e.address }); if (e.isLpPool) { const t = await Js({ blockchain: e.blockchain, contractAddress: e.address }), c = await Ap({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), { _reserve0: a, _reserve1: n } = await xp({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), l = "0" === c ? new Ut.a("0") : new Ut.a(t).dividedBy(c), s = l.multipliedBy(a).toFixed(0), r = l.multipliedBy(n).toFixed(0); return { lp: o, [e.lpAsset0Address]: s, [e.lpAsset1Address]: r } } return o })), n = await Promise.all(Cn.map(async (e, t) => { const o = await ui({ blockchain: e.blockchain, contractAddress: e.address }); return o })); Bn.forEach((e, o) => { t("setTotalStackedInPool", { blockchain: e.blockchain, poolAddress: e.address, balance: a[o] }) }), Cn.forEach((e, o) => { t("setTotalStackedInPool", { blockchain: e.blockchain, poolAddress: e.address, balance: n[o] }) }), c("loadExpirationTimesV2") }, loadBalances: async ({ state: e, commit: t, getters: o, dispatch: c }, { reset: a = !1, withPoolsInfo: n = !0 }) => { if (o.isActiveWallet) { a && e.intervalBalances && (clearInterval(e.intervalBalances), t("setIntervalBalances", setInterval(() => c("loadBalances", {}), 3e4))); const o = await Promise.all(as.map(t => Tp({ blockchain: t.blockchain, contractAddress: t.address, address: e.walletAddress }))); as.forEach((e, c) => { t("setBalance", { blockchain: e.blockchain, erc20Address: e.address, balance: o[c] }) }); const l = await Promise.all(Bn.map(t => er({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }))); if (Bn.forEach((e, o) => { t("setUserLocksByPool", { blockchain: e.blockchain, poolAddress: e.address, lock: l[o] }) }), n) { const e = await Promise.all(Bn.map(async (e, t) => { const o = await Js({ blockchain: e.blockchain, contractAddress: e.address }); if (e.isLpPool) { const t = await Js({ blockchain: e.blockchain, contractAddress: e.address }), c = await Ap({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), { _reserve0: a, _reserve1: n } = await xp({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), l = "0" === c ? new Ut.a("0") : new Ut.a(t).dividedBy(c), s = l.multipliedBy(a).toFixed(0), r = l.multipliedBy(n).toFixed(0); return { lp: o, [e.lpAsset0Address]: s, [e.lpAsset1Address]: r } } return o })); Bn.forEach((o, c) => { t("setTotalStackedInPool", { blockchain: o.blockchain, poolAddress: o.address, balance: e[c] }) }) } const s = await Promise.all(Bn.map((e, t) => l[t] !== nr ? Qs({ blockchain: e.blockchain, contractAddress: e.address }) : new Promise(e => e("0")))); Bn.forEach((e, o) => { t("setTotalStackedInPoolWithMultipliers", { blockchain: e.blockchain, poolAddress: e.address, balance: s[o] }) }); const r = await Promise.all(Bn.map((t, o) => l[o] !== nr ? tr({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }) : new Promise(e => e("0")))); Bn.forEach((e, o) => { t("setStackedBalanceByPool", { blockchain: e.blockchain, poolAddress: e.address, balance: r[o] }) }); const i = await Promise.all(Cn.map((t, o) => tr({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }))); Cn.forEach((e, o) => { t("setStackedBalanceByPool", { blockchain: e.blockchain, poolAddress: e.address, balance: i[o] }) }); const d = await Promise.all(Bn.map((t, o) => l[o] !== nr ? cr({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }) : new Promise(e => e("0")))); Bn.forEach((e, o) => { t("setRewardBalanceByPool", { blockchain: e.blockchain, poolAddress: e.address, balance: null === d || void 0 === d ? void 0 : d[o] }) }); const b = await Promise.all(Cn.map((t, o) => cr({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }))); Cn.forEach((e, o) => { t("setRewardBalanceByPool", { blockchain: e.blockchain, poolAddress: e.address, balance: null === b || void 0 === b ? void 0 : b[o] }) }); const p = await Promise.all(Bn.map((t, o) => l[o] !== nr ? or({ blockchain: t.blockchain, contractAddress: t.address, userAddress: e.walletAddress }) : new Promise(e => e(null)))); Bn.forEach((e, o) => { t("setExpirationTimeByPool", { blockchain: e.blockchain, poolAddress: e.address, expirationTime: null === p || void 0 === p ? void 0 : p[o] }) }), c("loadExpirationTimesV2") } }, loadExpirationTimesV2: async ({ commit: e }) => { const t = await Promise.all(Cn.map((e, t) => mi({ blockchain: e.blockchain, contractAddress: e.address }))); Cn.forEach((o, c) => { e("setExpirationTimeByPool", { blockchain: o.blockchain, poolAddress: o.address, expirationTime: null === t || void 0 === t ? void 0 : t[c] }) }) }, loadPoolInfo: async ({ commit: e }) => { const t = await Promise.all(Bn.map(async (e, t) => { const o = await Js({ blockchain: e.blockchain, contractAddress: e.address }); if (e.isLpPool) { const t = await Js({ blockchain: e.blockchain, contractAddress: e.address }), c = await Ap({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), { _reserve0: a, _reserve1: n } = await xp({ blockchain: e.blockchain, contractAddress: e.erc20AddressDeposit }), l = "0" === c ? new Ut.a("0") : new Ut.a(t).dividedBy(c), s = l.multipliedBy(a).toFixed(0), r = l.multipliedBy(n).toFixed(0); return { lp: o, [e.lpAsset0Address]: s, [e.lpAsset1Address]: r } } return await Js({ blockchain: e.blockchain, contractAddress: e.address }) })); Bn.forEach((o, c) => { e("setTotalStackedInPool", { blockchain: o.blockchain, poolAddress: o.address, balance: t[c] }) }) }, init: async ({ state: e, commit: t, dispatch: o }) => { await o("loadPoolsInfo"), e.userSelectedWallet === Y && (e.walletConnected && e.userSelectedWallet ? await o("connect", { wallet: e.userSelectedWallet, network: U }) : (t("setUserSelectedWallet", null), t("setWalletConnected", !1))); const c = Os(); if (e.userSelectedWallet === z && c && e.walletConnected) if (c) try { await o("connectToMetamask"); const c = await js(), a = await vs(); c && a && (t("setWalletConnected", !0), t("setWalletAddress", c), t("setWalletChainIds", [a]), null !== e && void 0 !== e && e.walletChainIds && e.walletChainIds.includes(a) || await ws(a), await o("loadBalances", { withPoolsInfo: !1 }), t("setIntervalBalances", setInterval(() => o("loadBalances", {}), $p))) } catch (a) { console.error(a), await o("loadPoolInfo") } else await o("loadPoolInfo"); else await o("loadPoolInfo") }, connectToMetamask: async ({ state: e, commit: t, dispatch: o }) => { const c = async e => { await t("setWalletAddress", e[0]), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, a = async e => { t("setWalletChainIds", [e]), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, n = async () => { await t("setWalletConnected", !0), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, l = async () => { await t("setWalletConnected", !1), await t("setZeroBalances") }; hs.on("accountsChanged", c), hs.on("chainChanged", a), hs.on("connect", n), hs.on("disconnect", l), hs.on("start", n), hs.on("stop", l); const s = await js(), r = await vs(); s && r && (t("setWalletConnected", !0), t("setWalletAddress", s), t("setWalletChainIds", [r])) }, connectToWalletConnect: async ({ state: e, commit: t, dispatch: o }, c) => { const a = c ? await Cs(!0) : await Cs(); try { const n = async e => { await t("setWalletConnectUri", e), await o("showQrCodeWalletconnect") }, l = async e => { await t("setWalletAddress", e[0]), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, s = async e => { await t("setWalletChainIds", e), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, r = async () => { await o("ui/closeModal", e.walletConnectModalId, { root: !0 }), await t("setWalletConnected", !0), await t("setZeroBalances"), await o("loadBalances", { reset: !0 }) }, i = async () => { await o("ui/closeModal", e.walletConnectModalId, { root: !0 }), await t("setWalletConnected", !1), await o("disconnectWallet") }, d = async t => { await o("ui/updateModalParams", { id: e.walletConnectModalId, payload: { props: { error: t } } }, { root: !0 }) }; if (gs.on("walletUri", n), gs.on("accountsChanged", l), gs.on("chainChanged", s), gs.on("connect", r), gs.on("disconnect", i), gs.on("start", r), gs.on("stop", i), gs.on("setWalletConnectError", d), a && !Ns()) { await Ss(c); const e = await a.enable(); gs.emit("accountsChanged", e) } const { address: b, listChainIds: p } = await xs(); b && p && (t("setWalletConnected", !0), t("setWalletAddress", b), t("setWalletChainIds", p)) } catch (l) { var n; a && e.walletConnected && await a.disconnect(), console.error(l), gs.emit("setWalletConnectError", null !== (n = null === l || void 0 === l ? void 0 : l.message) && void 0 !== n ? n : l) } }, connect: async ({ state: e, commit: t, dispatch: o }, { network: c, networks: a, wallet: n }) => { if (t("setUserSelectedWallet", n), n === z) { const e = Os(); if (e) { await o("connectToMetamask"); const e = await js(), c = await vs(); e && c && (await o("loadBalances", { reset: !0 }), t("setIntervalBalances", setInterval(() => o("loadBalances", {}), $p))) } } if (n === Y) { await o("connectToWalletConnect", a); const { address: e, listChainIds: c } = await xs(); e && c && (await o("loadBalances", { reset: !0 }), t("setIntervalBalances", setInterval(() => o("loadBalances", {}), $p))) } }, disconnectWallet: async ({ state: e, commit: t, dispatch: o }) => { try { if (e.userSelectedWallet === Y) { const t = await Cs(); e.walletConnected && await t.disconnect(), await Bs({ hardReset: !0 }) } } catch (c) { console.error("Error disconnectWallet", c) } t("setZeroBalances"), t("setZeroUserLocks"), t("setZeroTotalStackedInPool"), t("setZeroTotalStackedInPoolWithMultipliers"), t("setZeroStackedBalances"), t("setZeroRewardBalances"), t("setZeroExpirationTimes"), t("setUserSelectedWallet", null), t("setWalletConnected", !1), o("loadExpirationTimesV2"), t("setWalletAddress", null), t("setWalletChainIds", null) }, showQrCodeWalletconnect: async ({ state: e, commit: t, dispatch: o }) => { if (e.walletConnectUri) { const c = await o("ui/openModal", { component: () => Kp, props: { uri: e.walletConnectUri, error: e.walletConnectError } }, { root: !0 }); await t("setWalletConnectModalId", c) } } } }); const Jp = vc.a.create({ baseURL: "https://api.laborx.com/", timeout: 6e3 }), Qp = vc.a.create({ baseURL: "https://api.coingecko.com/api/v3/", timeout: 6e3 }), eu = Object(gp["a"])({ paths: ["network.userSelectedWallet", "network.walletConnected", "ui.showOnlyStackedPools"] }); var tu = Object(r["a"])({ strict: !1, state: { currencyPrices: {}, timePrice: null, ethPrice: null, bnbPrice: null, maticPrice: null, userLabels: [], userData: [], gigsLabels: [], gigsData: [] }, getters: { rewardApy() { return 14.11 }, priceApy(e) { return null === e.timePrice ? null : new Ut.a(e.timePrice).dividedBy(12).multipliedBy(100).minus(100).toFixed(2) }, totalApy(e, t) { return null === t.priceApy ? null : new Ut.a(t.rewardApy).multipliedBy(1.2).dividedBy(100).plus(1).multipliedBy(new Ut.a(e.timePrice).toFixed(2)).dividedBy(12).minus(1).multipliedBy(100).toFixed(0) } }, mutations: { setTimePrice(e, t) { e.timePrice = t }, setEthPrice(e, t) { e.ethPrice = t }, setBnbPrice(e, t) { e.bnbPrice = t }, setMaticPrice(e, t) { e.maticPrice = t }, setCurrencyPrice(e, { currencyName: t, price: o }) { e.currencyPrices = { ...e.currencyPrices, [t]: o } }, setUserLabels(e, t) { e.userLabels = t }, setUserData(e, t) { e.userData = t }, setGigsLabels(e, t) { e.gigsLabels = t }, setGigsData(e, t) { e.gigsData = t } }, actions: { async loadRate({ commit: e }) { try { var t, o, c, a, n, l; const { data: s } = await Jp.get("rates", { params: { currency: "TIME,ETH,BNB" } }), r = null === (t = s.result) || void 0 === t || null === (o = t.find(e => "TIME" === e.currency)) || void 0 === o ? void 0 : o.price, i = null === (c = s.result) || void 0 === c || null === (a = c.find(e => "ETH" === e.currency)) || void 0 === a ? void 0 : a.price, d = null === (n = s.result) || void 0 === n || null === (l = n.find(e => "BNB" === e.currency)) || void 0 === l ? void 0 : l.price; e("setTimePrice", r), e("setEthPrice", i), e("setBnbPrice", d), e("setCurrencyPrice", { currencyName: "TIME", price: r }), e("setCurrencyPrice", { currencyName: "ETH", price: i }), e("setCurrencyPrice", { currencyName: "BNB", price: d }) } catch (d) { var s, r, i; console.error(d); const { data: t } = await Qp.get("/simple/price", { params: { ids: "chronobank,binancecoin,ethereum,matic-network,crypto-gaming-united", vs_currencies: "usd" } }), o = (null === t || void 0 === t || null === (s = t.chronobank) || void 0 === s ? void 0 : s.usd) || 0, c = (null === t || void 0 === t || null === (r = t.ethereum) || void 0 === r ? void 0 : r.usd) || 0, a = (null === t || void 0 === t || null === (i = t.binancecoin) || void 0 === i ? void 0 : i.usd) || 0; e("setTimePrice", o), e("setEthPrice", c), e("setBnbPrice", a), e("setCurrencyPrice", { currencyName: "TIME", price: o }), e("setCurrencyPrice", { currencyName: "ETH", price: c }), e("setCurrencyPrice", { currencyName: "BNB", price: a }) } }, async loadStat({ commit: e }) { try { const { data: t } = await Jp.get("timewarp/statistics/users-and-gigs"); let o = ou(t.result.users); e("setUserLabels", o.labels), e("setUserData", o.data), o = ou(t.result.gigs), e("setGigsLabels", o.labels), e("setGigsData", o.data) } catch (t) { console.error(t) } }, async subscribe(e, t) { try { await Jp.post("subscribers/subscribe", { payload: { site_id: "timewarp.finance", email: t } }) } catch (o) { console.error(o) } } }, modules: { ui: Np(), network: Xp() }, plugins: [eu] }); function ou(e) { const t = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], o = {}, c = `${(new Date).getFullYear()}-${String((new Date).getMonth() + 1).padStart(2, "0")}`, a = (new Date).getDate(); for (const r of e) { const e = r.date.substring(0, 7); e === c && a < 10 || (o[e] ? o[e] += +r.count : o[e] = +r.count) } const n = [], l = []; let s = 0; for (const r in o) { const e = t[+r.substring(5, 7) - 1] + " " + r.substring(0, 4); n.push(e), l.push(o[r] + s), s += o[r] } return { labels: n, data: l } } const cu = { class: "root tw-chart" }; function au(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("canvas", cu) } var nu = o("63ea"), lu = o.n(nu), su = o("b6ad"), ru = o.n(su), iu = o("9b4a"); function du(e, ...t) { return e instanceof Function ? e(...t) : e } function bu(e, t) { return lu()({ dataset: e.datasets.map(e => ({ data: e.data })), labels: e.labels }, { dataset: t.datasets.map(e => ({ data: e.data })), labels: t.labels }) } iu["c"].register(iu["a"], iu["d"], iu["e"], iu["g"], iu["h"], iu["b"], iu["f"], iu["i"]); var pu = { name: "tw-chart", props: { type: { type: String, default: "line" }, data: [Object, Function], options: [Object, Function] }, data() { return { context: null } }, watch: { data(e) { const t = du(e, this.context); ru()(t, this.chart.data, bu) || (this.chart.data = t, this.chart.update("none")) } }, mounted() { this.context = this.$el.getContext("2d"), this.chart = new iu["c"](this.context, { type: this.type, data: du(this.data, this.context), options: du(this.options, this.context) }) } }; o("76fc"); const uu = b()(pu, [["render", au], ["__scopeId", "data-v-9fc289d6"]]); var mu = uu; const hu = ["innerHTML"]; function ku(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("span", Object(a["mergeProps"])({ class: "tw-icon", innerHTML: e.iconSvgText(e.icon) }, e.$attrs), null, 16, hu) } var Ou = '<svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M9 1.50482C13.14 1.50482 16.5 4.86482 16.5 9.00482C16.5 13.1448 13.14 16.5048 9 16.5048C4.86 16.5048 1.5 13.1448 1.5 9.00482C1.5 4.86482 4.86 1.50482 9 1.50482ZM4.51725 11.5668C5.61825 13.2093 7.27125 14.2548 9.12 14.2548C10.968 14.2548 12.6217 13.2101 13.722 11.5668C12.4738 10.4003 10.8285 9.75243 9.12 9.75482C7.41128 9.75224 5.76563 10.4001 4.51725 11.5668ZM9 8.25482C9.59674 8.25482 10.169 8.01777 10.591 7.59581C11.0129 7.17386 11.25 6.60156 11.25 6.00482C11.25 5.40808 11.0129 4.83579 10.591 4.41383C10.169 3.99187 9.59674 3.75482 9 3.75482C8.40326 3.75482 7.83097 3.99187 7.40901 4.41383C6.98705 4.83579 6.75 5.40808 6.75 6.00482C6.75 6.60156 6.98705 7.17386 7.40901 7.59581C7.83097 8.01777 8.40326 8.25482 9 8.25482Z" fill="white"/>\n</svg>\n', ju = '<svg width="14" height="8" viewBox="0 0 14 8" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M1 1L7 7L13 1" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n</svg>\n', vu = '<?xml version="1.0" encoding="utf-8"?>\r\n<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1000 1000" enable-background="new 0 0 1000 1000" xml:space="preserve">\r\n<g fill="currentColor"><g transform="translate(0.000000,511.000000) scale(0.100000,-0.100000)"><path d="M1652.8,4975.8c-375-80.5-699.3-260-980-538.3c-207-209.3-342.8-411.8-437.1-657.9C95.4,3416.1,100,3586.3,100,110.3S95.4-3195.5,235.7-3559c232.3-605,819-1085.8,1463.1-1205.4c188.6-34.5,6413.7-34.5,6602.3,0c361.2,66.7,784.4,292.1,1039.8,554.4c257.7,266.9,450.9,625.7,526.8,984.6c25.3,119.6,32.2,510.7,32.2,1985.3V593.4h-483.1h-483.1v-1718.5c0-996.1-9.2-1778.3-23-1856.5c-69-421-398-749.9-819-818.9c-181.7-29.9-6001.9-29.9-6183.7,0c-414.1,66.7-740.8,386.5-819,802.9c-29.9,163.3-32.2,6011.1,0,6199.7c69,421,398,750,819,819c78.2,13.8,860.4,23,1856.5,23h1718.4v483.1v483.1l-1845-2.3C2207.3,5008,1758.7,4998.8,1652.8,4975.8z"/><path d="M6472.3,4527.2v-483.1h878.8h881.1L6971.5,2783.4L5713.2,1525.1l340.5-340.5c186.3-186.3,349.7-338.2,361.2-338.2c13.8,0,584.3,561.3,1269.9,1246.9l1249.2,1249.1v-881.1v-878.8h483.1H9900v1713.8v1713.8H8186.2H6472.3V4527.2z"/></g></g>\r\n</svg>\r\n', wu = '<svg width="96" height="96" viewBox="0 0 96 96" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M23.0193 14.7044L48.5 0L73.9807 14.7044L64.6128 20.1366L48.5 10.8644L32.3872 20.1366L23.0193 14.7044ZM73.9807 33.2488L64.6128 27.8166L48.5 37.0888L32.3872 27.8166L23.0193 33.2488V44.1132L39.1321 53.3854V71.9297L48.5 77.362L57.8679 71.9297V53.3854L73.9807 44.1132V33.2488ZM73.9807 62.6576V51.7932L64.6128 57.2254V68.0898L73.9807 62.6576ZM80.6321 66.4976L64.5193 75.7698V86.6341L90 71.9297V42.521L80.6321 47.9532V66.4976ZM71.2641 23.9766L80.6321 29.4088V40.2732L90 34.841V23.9766L80.6321 18.5444L71.2641 23.9766ZM39.1321 79.7034V90.5678L48.5 96L57.8679 90.5678V79.7034L48.5 85.1356L39.1321 79.7034ZM23.0193 62.6576L32.3872 68.0898V57.2254L23.0193 51.7932V62.6576ZM39.1321 23.9766L48.5 29.4088L57.8679 23.9766L48.5 18.5444L39.1321 23.9766ZM16.3679 29.4088L25.7359 23.9766L16.3679 18.5444L7 23.9766V34.841L16.3679 40.2732V29.4088ZM16.3679 47.9532L7 42.521V71.9297L32.4807 86.6341V75.7698L16.3679 66.4976V47.9532Z" fill="#F1B90C"/>\n</svg>\n', fu = '<svg width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M2.66667 2.99992V0.999919C2.66667 0.823108 2.7369 0.653538 2.86193 0.528514C2.98695 0.40349 3.15652 0.333252 3.33333 0.333252H11.3333C11.5101 0.333252 11.6797 0.40349 11.8047 0.528514C11.9298 0.653538 12 0.823108 12 0.999919V10.3333C12 10.5101 11.9298 10.6796 11.8047 10.8047C11.6797 10.9297 11.5101 10.9999 11.3333 10.9999H9.33333V12.9999C9.33333 13.3679 9.03333 13.6666 8.662 13.6666H0.671333C0.583418 13.6671 0.496265 13.6503 0.414882 13.617C0.333498 13.5837 0.259489 13.5347 0.197106 13.4728C0.134723 13.4108 0.0851953 13.3372 0.0513695 13.256C0.0175437 13.1749 8.62495e-05 13.0878 0 12.9999L0.00200001 3.66659C0.00200001 3.29859 0.302 2.99992 0.673334 2.99992H2.66667ZM1.33533 4.33325L1.33333 12.3333H8V4.33325H1.33533ZM4 2.99992H9.33333V9.66659H10.6667V1.66659H4V2.99992Z" fill="#6A50FD"/>\n</svg>\n', Eu = '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M6.66649 10.1148L12.7945 3.98608L13.7378 4.92875L6.66649 12.0001L2.42383 7.75742L3.36649 6.81475L6.66649 10.1148Z" fill="currentColor"/>\n</svg>\n', gu = '<svg width="13" height="14" viewBox="0 0 13 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M3.25 5.37982L6.5 8.62982L9.75 5.37982" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n</svg>\n', yu = '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M12.0007 10.586L16.9507 5.636L18.3647 7.05L13.4147 12L18.3647 16.95L16.9507 18.364L12.0007 13.414L7.05072 18.364L5.63672 16.95L10.5867 12L5.63672 7.05L7.05072 5.636L12.0007 10.586Z" fill="currentColor"/>\n</svg>\n', Bu = '<svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M4.66667 2V3.33333H1.33333V10.6667H8.66667V7.33333H10V11.3333C10 11.5101 9.92976 11.6797 9.80474 11.8047C9.67971 11.9298 9.51014 12 9.33333 12H0.666667C0.489856 12 0.320286 11.9298 0.195262 11.8047C0.0702379 11.6797 0 11.5101 0 11.3333V2.66667C0 2.48986 0.0702379 2.32029 0.195262 2.19526C0.320286 2.07024 0.489856 2 0.666667 2H4.66667ZM12 0V6L9.47067 3.47133L5.47133 7.47133L4.52867 6.52867L8.528 2.52867L6 0H12Z" fill="#6A50FD"/>\n</svg>\n', Cu = '<svg width="96" height="84" viewBox="0 0 96 84" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M47.5439 43.8686L53.5211 37.8883C55.5382 35.8702 55.5382 32.598 53.5211 30.5799C51.5038 28.5619 48.2332 28.5619 46.2161 30.5801L40.2391 36.5602L34.2622 30.5803C32.2451 28.5621 28.9745 28.5619 26.9572 30.5801C24.9401 32.5982 24.9401 35.8704 26.9572 37.8885L32.9343 43.8688L26.9572 49.8491C24.9401 51.8672 24.9401 55.1394 26.9572 57.1575C27.9659 58.1666 29.2876 58.671 30.6097 58.671C31.9317 58.671 33.2536 58.1664 34.2622 57.1573L40.2391 51.1774L46.2161 57.1573C47.2248 58.1666 48.5463 58.671 49.8686 58.671C51.1904 58.671 52.5125 58.1664 53.5211 57.1575C55.5382 55.1394 55.5382 51.8672 53.5211 49.8491L47.5439 43.8686Z" fill="#F25A63"/>\n<path d="M96.0004 22.5127C96.0004 10.4752 86.2506 0.716797 74.2238 0.716797C67.4526 0.716797 61.4033 3.80998 57.4092 8.66155C69.9771 14.9674 78.6042 27.9799 78.6042 43.0093C78.6042 43.2967 78.6008 43.5834 78.5946 43.8694C81.856 43.2037 84.8521 41.8084 87.4058 39.8616L88.4114 39.1078L94.4179 39.9988L92.788 33.9107C94.825 30.5942 96.0004 26.691 96.0004 22.5127Z" fill="#F25A63"/>\n<path d="M40.2394 83.2829C31.3558 83.2829 22.9322 80.4408 15.8794 75.0641L14.7461 74.2145L4.938 75.6695C4.31344 75.7621 3.68381 75.5341 3.26344 75.0628C2.84306 74.5914 2.68837 73.94 2.85169 73.3299L5.51737 63.3721C1.90538 57.2137 0 50.1914 0 43.0096C0 32.2524 4.18537 22.1392 11.7851 14.5327C19.3854 6.92564 29.4907 2.73633 40.2394 2.73633C50.988 2.73633 61.0933 6.92564 68.6936 14.5327C76.2934 22.1392 80.4788 32.2526 80.4788 43.0096C80.4788 53.7667 76.2934 63.8801 68.6936 71.4866C61.0933 79.0936 50.9882 83.2829 40.2394 83.2829ZM15.2449 70.37C15.648 70.37 16.0431 70.4999 16.3697 70.7448L18.141 72.0729C24.5471 76.9565 32.1844 79.5331 40.2396 79.5331C60.36 79.5331 76.7289 63.1488 76.7289 43.0096C76.7289 22.8705 60.3598 6.48614 40.2394 6.48614C20.1189 6.48614 3.75 22.8706 3.75 43.0096C3.75 49.7713 5.61112 56.3752 9.132 62.1078C9.40144 62.5464 9.47869 63.0766 9.34556 63.5739L7.21275 71.5409L14.9698 70.3903C15.0613 70.3768 15.1534 70.37 15.2449 70.37Z" fill="#DAD8E9"/>\n</svg>\n', Nu = '<svg width="16" height="26" viewBox="0 0 16 26" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path opacity="0.6" d="M8.19674 9.69342L0.400391 13.2366L8.19674 17.8509L15.9993 13.2366L8.19674 9.69342Z" fill="white"/>\n<path opacity="0.45" d="M0.400391 13.2366L8.19674 17.8509V0.296692L0.400391 13.2366Z" fill="white"/>\n<path opacity="0.8" d="M8.19727 0.296692V17.8509L15.9936 13.2366L8.19727 0.296692Z" fill="white"/>\n<path opacity="0.45" d="M0.400391 14.7187L8.19674 25.7033V19.3268L0.400391 14.7187Z" fill="white"/>\n<path opacity="0.8" d="M8.19727 19.3268V25.7033L15.9998 14.7187L8.19727 19.3268Z" fill="white"/>\n</svg>\n', Su = '<svg width="13" height="13" viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M6.49967 11.9167C3.50805 11.9167 1.08301 9.49164 1.08301 6.50001C1.08301 3.50839 3.50805 1.08334 6.49967 1.08334C9.4913 1.08334 11.9163 3.50839 11.9163 6.50001C11.9163 9.49164 9.4913 11.9167 6.49967 11.9167ZM6.49967 10.8333C7.64895 10.8333 8.75115 10.3768 9.5638 9.56414C10.3765 8.75148 10.833 7.64928 10.833 6.50001C10.833 5.35074 10.3765 4.24854 9.5638 3.43588C8.75115 2.62322 7.64895 2.16668 6.49967 2.16668C5.3504 2.16668 4.2482 2.62322 3.43555 3.43588C2.62289 4.24854 2.16634 5.35074 2.16634 6.50001C2.16634 7.64928 2.62289 8.75148 3.43555 9.56414C4.2482 10.3768 5.3504 10.8333 6.49967 10.8333ZM5.95801 3.79168H7.04134V4.87501H5.95801V3.79168ZM5.95801 5.95834H7.04134V9.20834H5.95801V5.95834Z" fill="currentColor"/>\n</svg>\n', Vu = '<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M26.8495 3.92352L17.4199 11.4547L19.1714 7.01142L26.8495 3.92352Z" fill="#E2761B" stroke="#E2761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M5.10352 3.92352L14.4479 11.5261L12.7816 7.01142L5.10352 3.92352Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M23.46 21.3809L20.9512 25.5184L26.3192 27.1082L27.8529 21.4726L23.46 21.3809Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M4.10938 21.4726L5.63364 27.1082L11.0017 25.5184L8.50228 21.3809L4.10938 21.4726Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M10.7088 14.3898L9.21289 16.8254L14.5336 17.0802L14.3537 10.9146L10.7088 14.3898Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M21.2467 14.3898L17.545 10.8433L17.4219 17.0802L22.7426 16.8254L21.2467 14.3898Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M11 25.5184L14.2095 23.8369L11.445 21.5134L11 25.5184Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.7422 23.8369L20.9517 25.5184L20.5067 21.5134L17.7422 23.8369Z" fill="#E4761B" stroke="#E4761B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M20.9536 25.5184L17.7441 23.8369L17.9998 26.0891L17.9714 27.0369L20.9536 25.5184Z" fill="#D7C1B3" stroke="#D7C1B3" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M11.002 25.5184L13.9842 27.0369L13.9653 26.0891L14.2114 23.8369L11.002 25.5184Z" fill="#D7C1B3" stroke="#D7C1B3" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M14.0409 20.0255L11.3711 19.1796L13.2551 18.2523L14.0409 20.0255Z" fill="#233447" stroke="#233447" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.9121 20.0255L18.6979 18.2523L20.5914 19.1796L17.9121 20.0255Z" fill="#233447" stroke="#233447" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M11.0014 25.5185L11.4653 21.3809L8.50195 21.4726L11.0014 25.5185Z" fill="#CD6116" stroke="#CD6116" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M20.4883 21.3809L20.9522 25.5185L23.4611 21.4726L20.4883 21.3809Z" fill="#CD6116" stroke="#CD6116" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M22.7426 16.8255L17.4219 17.0803L17.9142 20.0255L18.7 18.2523L20.5935 19.1796L22.7426 16.8255Z" fill="#CD6116" stroke="#CD6116" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M11.3715 19.1796L13.2555 18.2523L14.0413 20.0255L14.5336 17.0803L9.21289 16.8255L11.3715 19.1796Z" fill="#CD6116" stroke="#CD6116" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M9.21094 16.8255L11.4452 21.5134L11.3695 19.1796L9.21094 16.8255Z" fill="#E4751F" stroke="#E4751F" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M20.5911 19.1796L20.5059 21.5134L22.7402 16.8255L20.5911 19.1796Z" fill="#E4751F" stroke="#E4751F" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M14.5314 17.0803L14.0391 20.0255L14.6639 23.5006L14.7965 18.9248L14.5314 17.0803Z" fill="#E4751F" stroke="#E4751F" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.4197 17.0803L17.1641 18.9147L17.2871 23.5006L17.912 20.0255L17.4197 17.0803Z" fill="#E4751F" stroke="#E4751F" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.912 20.0255L17.2871 23.5006L17.7415 23.837L20.506 21.5134L20.5913 19.1796L17.912 20.0255Z" fill="#F6851B" stroke="#F6851B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M11.3711 19.1796L11.4468 21.5134L14.2113 23.837L14.6658 23.5006L14.0409 20.0255L11.3711 19.1796Z" fill="#F6851B" stroke="#F6851B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.97 27.037L17.9984 26.0892L17.7617 25.865H14.1925L13.9653 26.0892L13.9842 27.037L11.002 25.5185L12.0434 26.4357L14.1641 28.0153H17.7901L19.9108 26.4357L20.9523 25.5185L17.97 27.037Z" fill="#C0AD9E" stroke="#C0AD9E" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.7424 23.8369L17.2879 23.5006H14.6654L14.211 23.8369L13.9648 26.0891L14.1921 25.8649H17.7613L17.998 26.0891L17.7424 23.8369Z" fill="#161616" stroke="#161616" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M27.2475 11.9439L28.0428 7.78594L26.8499 3.92352L17.7422 11.2L21.2451 14.3898L26.1966 15.949L27.2854 14.5732L26.812 14.2063L27.5694 13.4624L26.9919 12.9732L27.7493 12.3515L27.2475 11.9439Z" fill="#763D16" stroke="#763D16" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M3.91016 7.78594L4.71489 11.9439L4.20365 12.3515L4.96104 12.9732L4.38353 13.4624L5.14093 14.2063L4.66755 14.5732L5.75631 15.949L10.7078 14.3898L14.2107 11.2L5.10306 3.92352L3.91016 7.78594Z" fill="#763D16" stroke="#763D16" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M26.1958 15.9491L21.2443 14.3898L22.7402 16.8255L20.5059 21.5134L23.4597 21.4726H27.8526L26.1958 15.9491Z" fill="#F6851B" stroke="#F6851B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M10.7082 14.3898L5.75671 15.9491L4.10938 21.4726H8.50228L11.4467 21.5134L9.21234 16.8255L10.7082 14.3898Z" fill="#F6851B" stroke="#F6851B" stroke-linecap="round" stroke-linejoin="round"/>\n<path d="M17.4203 17.0803L17.7422 11.2L19.1718 7.01147H12.7812L14.2108 11.2L14.5327 17.0803L14.6558 18.935L14.6653 23.5006H17.2877L17.2972 18.935L17.4203 17.0803Z" fill="#F6851B" stroke="#F6851B" stroke-linecap="round" stroke-linejoin="round"/>\n</svg>\n', Au = '<?xml version="1.0" encoding="UTF-8"?>\n<svg width="300px" height="185px" viewBox="0 0 300 185" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <defs></defs>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="walletconnect-logo-alt" fill="#3B99FC" fill-rule="nonzero">\n            <path d="M61.4385429,36.2562612 C110.349767,-11.6319051 189.65053,-11.6319051 238.561752,36.2562612 L244.448297,42.0196786 C246.893858,44.4140867 246.893858,48.2961898 244.448297,50.690599 L224.311602,70.406102 C223.088821,71.6033071 221.106302,71.6033071 219.883521,70.406102 L211.782937,62.4749541 C177.661245,29.0669724 122.339051,29.0669724 88.2173582,62.4749541 L79.542302,70.9685592 C78.3195204,72.1657633 76.337001,72.1657633 75.1142214,70.9685592 L54.9775265,51.2530561 C52.5319653,48.8586469 52.5319653,44.9765439 54.9775265,42.5821357 L61.4385429,36.2562612 Z M280.206339,77.0300061 L298.128036,94.5769031 C300.573585,96.9713 300.573599,100.85338 298.128067,103.247793 L217.317896,182.368927 C214.872352,184.763353 210.907314,184.76338 208.461736,182.368989 C208.461726,182.368979 208.461714,182.368967 208.461704,182.368957 L151.107561,126.214385 C150.496171,125.615783 149.504911,125.615783 148.893521,126.214385 C148.893517,126.214389 148.893514,126.214393 148.89351,126.214396 L91.5405888,182.368927 C89.095052,184.763359 85.1300133,184.763399 82.6844276,182.369014 C82.6844133,182.369 82.684398,182.368986 82.6843827,182.36897 L1.87196327,103.246785 C-0.573596939,100.852377 -0.573596939,96.9702735 1.87196327,94.5758653 L19.7936929,77.028998 C22.2392531,74.6345898 26.2042918,74.6345898 28.6498531,77.028998 L86.0048306,133.184355 C86.6162214,133.782957 87.6074796,133.782957 88.2188704,133.184355 C88.2188796,133.184346 88.2188878,133.184338 88.2188969,133.184331 L145.571,77.028998 C148.016505,74.6345347 151.981544,74.6344449 154.427161,77.028798 C154.427195,77.0288316 154.427229,77.0288653 154.427262,77.028899 L211.782164,133.184331 C212.393554,133.782932 213.384814,133.782932 213.996204,133.184331 L271.350179,77.0300061 C273.79574,74.6355969 277.760778,74.6355969 280.206339,77.0300061 Z" id="WalletConnect"></path>\n        </g>\n    </g>\n</svg>', xu = '<svg width="96" height="84" viewBox="0 0 96 84" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M39.1405 58.6112C37.6402 58.6112 36.2148 57.9454 35.2518 56.7898L23.5604 42.7611C21.7703 40.6132 22.0604 37.4211 24.2082 35.631C26.3562 33.8407 29.5482 34.131 31.3383 36.279L38.9483 45.4104L49.7425 31.1368C51.4287 28.9065 54.6038 28.4659 56.834 30.1524C59.0641 31.8388 59.5047 35.0137 57.8181 37.2439L43.1785 56.6025C42.247 57.8342 40.8042 58.5735 39.2605 58.61C39.2204 58.6106 39.1803 58.6112 39.1405 58.6112Z" fill="#00C4B8"/>\n<path d="M96.0004 22.5127C96.0004 10.4752 86.2506 0.716797 74.2238 0.716797C67.4526 0.716797 61.4033 3.80998 57.4092 8.66155C69.9771 14.9674 78.6042 27.9799 78.6042 43.0093C78.6042 43.2967 78.6008 43.5834 78.5946 43.8694C81.856 43.2037 84.8521 41.8084 87.4058 39.8616L88.4114 39.1078L94.4179 39.9988L92.788 33.9107C94.825 30.5942 96.0004 26.691 96.0004 22.5127Z" fill="#00C4B8"/>\n<path d="M40.2394 83.2829C31.3558 83.2829 22.9324 80.4408 15.8794 75.0641L14.7459 74.2145L4.938 75.6695C4.31269 75.7621 3.684 75.5341 3.26325 75.0628C2.84306 74.5914 2.68819 73.94 2.8515 73.3299L5.51719 63.3721C1.90537 57.2137 0 50.1914 0 43.0096C0 32.2526 4.18537 22.1392 11.7851 14.5327C19.3854 6.92564 29.4907 2.73633 40.2394 2.73633C50.988 2.73633 61.0933 6.92564 68.6936 14.5327C76.2934 22.1392 80.4788 32.2526 80.4788 43.0096C80.4788 53.7667 76.2934 63.8801 68.6936 71.4866C61.0933 79.0936 50.9882 83.2829 40.2394 83.2829ZM15.2449 70.37C15.648 70.37 16.0433 70.4999 16.3695 70.7448L18.1408 72.0729C24.5471 76.9565 32.1844 79.5331 40.2394 79.5331C60.3598 79.5331 76.7288 63.1488 76.7288 43.0096C76.7288 22.8705 60.3598 6.48614 40.2394 6.48614C20.1189 6.48614 3.75 22.8706 3.75 43.0096C3.75 49.7713 5.61112 56.3752 9.132 62.1078C9.40144 62.5464 9.47869 63.0766 9.34556 63.5739L7.21275 71.5409L14.9696 70.3903C15.0613 70.3768 15.1532 70.37 15.2449 70.37Z" fill="#DAD8E9"/>\n</svg>\n', Tu = '<?xml version="1.0" encoding="utf-8"?>\n\x3c!-- Generator: Adobe Illustrator 24.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --\x3e\n<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n\t viewBox="0 0 38.4 33.5" style="enable-background:new 0 0 38.4 33.5;" xml:space="preserve">\n<style type="text/css">\n\t.st0{fill:#8247E5;}\n</style>\n<g>\n\t<path class="st0" d="M29,10.2c-0.7-0.4-1.6-0.4-2.4,0L21,13.5l-3.8,2.1l-5.5,3.3c-0.7,0.4-1.6,0.4-2.4,0L5,16.3\n\t\tc-0.7-0.4-1.2-1.2-1.2-2.1v-5c0-0.8,0.4-1.6,1.2-2.1l4.3-2.5c0.7-0.4,1.6-0.4,2.4,0L16,7.2c0.7,0.4,1.2,1.2,1.2,2.1v3.3l3.8-2.2V7\n\t\tc0-0.8-0.4-1.6-1.2-2.1l-8-4.7c-0.7-0.4-1.6-0.4-2.4,0L1.2,5C0.4,5.4,0,6.2,0,7v9.4c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\n\t\tc0.7,0.4,1.6,0.4,2.4,0l5.5-3.2l3.8-2.2l5.5-3.2c0.7-0.4,1.6-0.4,2.4,0l4.3,2.5c0.7,0.4,1.2,1.2,1.2,2.1v5c0,0.8-0.4,1.6-1.2,2.1\n\t\tL29,28.8c-0.7,0.4-1.6,0.4-2.4,0l-4.3-2.5c-0.7-0.4-1.2-1.2-1.2-2.1V21l-3.8,2.2v3.3c0,0.8,0.4,1.6,1.2,2.1l8.1,4.7\n\t\tc0.7,0.4,1.6,0.4,2.4,0l8.1-4.7c0.7-0.4,1.2-1.2,1.2-2.1V17c0-0.8-0.4-1.6-1.2-2.1L29,10.2z"/>\n</g>\n</svg>\n', Pu = o("bba4"), _u = o.n(Pu), Lu = o("8103"), Iu = o.n(Lu), Du = { name: "tw-icon", props: { icon: String }, methods: { iconSvgText() { return c[Iu()(_u()(this.icon))] } } }; o("fa9c"); const Fu = b()(Du, [["render", ku], ["__scopeId", "data-v-4f50b036"]]); var Mu = Fu; const Wu = { class: "root tw-modal" }; function Ru(e, t) { const o = Object(a["resolveComponent"])("tw-icon"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("section", Wu, [Object(a["createVNode"])(o, { class: "modal-close-icon", icon: "close", onClick: e.close }, null, 8, ["onClick"]), Object(a["renderSlot"])(e.$slots, "default")]) } var Uu = { name: "tw-modal", props: { closeDisabled: Boolean }, mounted() { document.addEventListener("keydown", this.keyController, !0) }, beforeUnmount() { document.removeEventListener("keydown", this.keyController, !0) }, methods: { keyController(e) { "Escape" === e.key && this.close() }, close() { this.closeDisabled || (this.$emit("close"), this.$parent.$emit("close")) } } }; o("0049"); const Hu = b()(Uu, [["render", Ru]]); var Zu = Hu; const Gu = { class: "root tw-numeric-input" }, qu = { key: 0 }, Ku = { class: "input-container" }, $u = ["placeholder", "disabled"], zu = { key: 2, class: "postfix" }; function Yu(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", Gu, [e.label ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("label", qu, Object(a["toDisplayString"])(e.label), 1)) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", Ku, [e.readOnly ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", { key: 1, ref: "readOnly" }, Object(a["toDisplayString"])(e.amount), 513)) : Object(a["withDirectives"])((Object(a["openBlock"])(), Object(a["createElementBlock"])("input", { key: 0, ref: "numeric", placeholder: e.placeholder, disabled: e.disabled, "onUpdate:modelValue": t[0] || (t[0] = t => e.amount = t), type: "tel", onBlur: t[1] || (t[1] = (...t) => e.onBlurHandler && e.onBlurHandler(...t)), onInput: t[2] || (t[2] = Object(a["withModifiers"])((...t) => e.onInputHandler && e.onInputHandler(...t), ["stop", "prevent"])), onFocus: t[3] || (t[3] = (...t) => e.onFocusHandler && e.onFocusHandler(...t)) }, null, 40, $u)), [[a["vModelText"], e.amount]]), e.postfix ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("span", zu, Object(a["toDisplayString"])(e.postfix), 1)) : Object(a["createCommentVNode"])("", !0)])]) } var Xu = o("6612"), Ju = o.n(Xu), Qu = { name: "tw-numeric-input", emits: ["update:modelValue"], props: { label: { type: String, default: "", required: !1 }, postfix: { type: String, default: "", required: !1 }, max: { type: Number, default: Number.MAX_SAFE_INTEGER || 9007199254740991, required: !1 }, min: { type: Number, default: Number.MIN_SAFE_INTEGER || -9007199254740991, required: !1 }, minus: { type: Boolean, default: !1, required: !1 }, placeholder: { type: String, default: "", required: !1 }, precision: { type: Number, default: 8, required: !1 }, separator: { type: String, default: ",", required: !1 }, modelValue: { type: [Number, String], default: 0, required: !0 }, readOnly: Boolean, disabled: Boolean }, data() { return { amount: "" } }, computed: { amountNumber() { return this.unformat(this.amount) }, valueNumber() { return this.unformat(this.modelValue) }, formatTemplate() { return `0${this.separator}0.[${"0".repeat(this.precision)}]` } }, watch: { valueNumber(e) { this.$refs.numeric !== document.activeElement && (this.amount = this.format(e)) }, precision() { this.process(this.valueNumber), this.amount = this.format(this.valueNumber) } }, mounted() { this.process(this.valueNumber), this.amount = this.format(this.valueNumber) }, methods: { onBlurHandler(e) { this.$emit("blur", this.getFixedValue(this.amountNumber)), this.amount = this.format(this.valueNumber) }, onFocusHandler(e) { this.$emit("focus", e), 0 === this.valueNumber ? this.amount = null : this.amount = this.valueNumber }, onInputHandler(e) { this.$emit("input", e), this.process(this.amountNumber) }, process(e) { e >= this.max && this.update(this.max), e <= this.min && this.update(this.min), e > this.min && e < this.max && this.update(e), !this.minus && e < 0 && (this.min >= 0 ? this.update(this.min) : this.update(0)) }, getFixedValue(e) { return Number(e).toFixed(this.precision) }, update(e) { const t = this.getFixedValue(e); this.$emit("update:modelValue", Number(t)) }, format(e) { return Ju()(e).format(this.formatTemplate) }, unformat(e) { const t = "string" === typeof e && "" === e ? 0 : e; return Ju()(t).value() } } }; o("caf6"); const em = b()(Qu, [["render", Yu]]); var tm = em; const om = { class: "root tw-numeric-input-2" }, cm = { key: 0 }, am = { class: "input-container" }, nm = ["placeholder", "disabled", "step", "max", "min"]; function lm(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", om, [e.label ? (Object(a["openBlock"])(), Object(a["createElementBlock"])("label", cm, Object(a["toDisplayString"])(e.label), 1)) : Object(a["createCommentVNode"])("", !0), Object(a["createElementVNode"])("div", am, [Object(a["withDirectives"])(Object(a["createElementVNode"])("input", { placeholder: e.placeholder, disabled: e.disabled, "onUpdate:modelValue": t[0] || (t[0] = t => e.amount = t), onInput: t[1] || (t[1] = Object(a["withModifiers"])((...t) => e.onInputChange && e.onInputChange(...t), ["stop", "prevent"])), type: "number", step: e.min, max: e.max, min: e.min, required: "" }, null, 40, nm), [[a["vModelText"], e.amount]])])]) } var sm = { name: "tw-numeric-input-2", emits: ["update:modelValue"], props: { label: { type: String, default: "", required: !1 }, placeholder: { type: String, default: "", required: !1 }, modelValue: { type: [String, Number], default: "0", required: !0 }, max: { type: [String, Number], default: Number.MAX_SAFE_INTEGER || 9007199254740991, required: !1 }, min: { type: [String, Number], default: Number.MIN_SAFE_INTEGER || -9007199254740991, required: !1 }, readOnly: Boolean, disabled: Boolean }, data() { return { amount: "" } }, mounted() { this.amount = this.modelValue }, watch: { modelValue(e) { this.amount = e } }, methods: { onInputChange() { this.$emit("update:modelValue", this.amount) } } }; o("b6fe"); const rm = b()(sm, [["render", lm]]); var im = rm; const dm = { class: "root tw-process-state" }; function bm(e, t) { const o = Object(a["resolveComponent"])("tw-icon"), c = Object(a["resolveComponent"])("tw-loader"); return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", dm, [e.success ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { class: "state icon", icon: "success", key: "success" })) : e.error ? (Object(a["openBlock"])(), Object(a["createBlock"])(o, { class: "state icon", icon: "error", key: "error" })) : Object(a["createCommentVNode"])("", !0), Object(a["createVNode"])(a["Transition"], { name: "load", appear: "" }, { default: Object(a["withCtx"])(() => [e.success || e.error ? Object(a["createCommentVNode"])("", !0) : (Object(a["openBlock"])(), Object(a["createBlock"])(c, { class: "state loading", width: "2", key: "loading" }))]), _: 1 })]) } var pm = { name: "tw-process-state", props: { success: Boolean, error: Boolean } }; o("b4a3"); const um = b()(pm, [["render", bm], ["__scopeId", "data-v-4070581f"]]); var mm = um; function hm(e, t) { const o = Object(a["resolveComponent"])("vue-slider"); return Object(a["openBlock"])(), Object(a["createBlock"])(o, Object(a["mergeProps"])({ class: "root tw-slider" }, e.sliderOptions, { value: e.value, "onUpdate:modelValue": t[0] || (t[0] = t => e.$emit("update:value", t)) }), null, 16, ["value"]) } var km = o("4971"), Om = o.n(km), jm = { eventType: "auto", width: "100%", height: 4, dotSize: 16, speed: .7, disabled: !1, data: null, clickable: !0 }, vm = (o("3e39"), { name: "tw-slider", components: { VueSlider: Om.a }, props: { value: Number }, computed: { sliderOptions() { return { ...jm, ...this.$attrs } } } }); o("f168"); const wm = b()(vm, [["render", hm]]); var fm = wm; const Em = ["checked"]; function gm(e, t) { return Object(a["openBlock"])(), Object(a["createElementBlock"])("div", { class: Object(a["normalizeClass"])(["root tw-switch", { active: e.modelValue, "switch-off": e.off }]), onClick: t[0] || (t[0] = Object(a["withModifiers"])((...t) => e.onClick && e.onClick(...t), ["stop", "prevent"])) }, [Object(a["createElementVNode"])("input", { role: "checkbox", type: "checkbox", checked: e.modelValue }, null, 8, Em)], 2) } var ym = { name: "tw-switch", emits: ["update:modelValue"], props: { value: Boolean, disabled: Boolean, off: Boolean, modelValue: { type: Boolean, default: !1, required: !0 } }, methods: { onClick() { this.disabled || (this.$emit("update:modelValue", !this.modelValue), document.activeElement.blur()) } } }; o("98d2"); const Bm = b()(ym, [["render", gm], ["__scopeId", "data-v-70bf3db1"]]); var Cm = Bm; const Nm = [$c, mu, Mu, Gc, Zu, tm, im, mm, $t, fm, Cm]; var Sm = { install: e => { for (const t of Nm) t.name && e.component(t.name, t) } }, Vm = o("39c3"); let Am = function () { }; function xm(e) { return "string" === typeof e && (e = e.split(" ")), e } function Tm(e, t) { const o = xm(t); let c; c = e.className instanceof Am ? xm(e.className.baseVal) : xm(e.className), o.forEach(e => { -1 === c.indexOf(e) && c.push(e) }), e instanceof SVGElement ? e.setAttribute("class", c.join(" ")) : e.className = c.join(" ") } function Pm(e, t) { const o = xm(t); let c; c = e.className instanceof Am ? xm(e.className.baseVal) : xm(e.className), o.forEach(e => { const t = c.indexOf(e); -1 !== t && c.splice(t, 1) }), e instanceof SVGElement ? e.setAttribute("class", c.join(" ")) : e.className = c.join(" ") } "undefined" !== typeof window && (Am = window.SVGAnimatedString); let _m = !1; if ("undefined" !== typeof window) { _m = !1; try { const e = Object.defineProperty({}, "passive", { get() { _m = !0 } }); window.addEventListener("test", null, e) } catch (zm) { } } const Lm = { container: !1, delay: 0, html: !1, placement: "top", title: "", template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", offset: 0 }, Im = []; class Dm { constructor(e, t) { Object(jn["a"])(this, "_events", []), Object(jn["a"])(this, "_setTooltipNodeEvent", (e, t, o, c) => { const a = e.relatedreference || e.toElement || e.relatedTarget, n = o => { const a = o.relatedreference || o.toElement || o.relatedTarget; this._tooltipNode.removeEventListener(e.type, n), t.contains(a) || this._scheduleHide(t, c.delay, c, o) }; return !!this._tooltipNode.contains(a) && (this._tooltipNode.addEventListener(e.type, n), !0) }), t = { ...Lm, ...t }, e.jquery && (e = e[0]), this.show = this.show.bind(this), this.hide = this.hide.bind(this), this.reference = e, this.options = t, this._isOpen = !1, this._init() } show() { this._show(this.reference, this.options) } hide() { this._hide() } dispose() { this._dispose() } toggle() { return this._isOpen ? this.hide() : this.show() } setClasses(e) { this._classes = e } setContent(e) { this.options.title = e, this._tooltipNode && this._setContent(e, this.options) } setOptions(e) { let t = !1; const o = e && e.classes || Km.options.defaultClass; lu()(this._classes, o) || (this.setClasses(o), t = !0), e = Rm(e); let c = !1, a = !1; this.options.offset === e.offset && this.options.placement === e.placement || (c = !0), (this.options.template !== e.template || this.options.trigger !== e.trigger || this.options.container !== e.container || t) && (a = !0); for (const n in e) this.options[n] = e[n]; if (this._tooltipNode) if (a) { const e = this._isOpen; this.dispose(), this._init(), e && this.show() } else c && this.popperInstance.forceUpdate() } _init() { let e = "string" === typeof this.options.trigger ? this.options.trigger.split(" ") : []; this._isDisposed = !1, this._enableDocumentTouch = -1 === e.indexOf("manual"), e = e.filter(e => -1 !== ["click", "hover", "focus"].indexOf(e)), this._setEventListeners(this.reference, e, this.options), this.$_originalTitle = this.reference.getAttribute("title"), this.reference.removeAttribute("title"), this.reference.setAttribute("data-original-title", this.$_originalTitle) } _create(e, t) { const o = window.document.createElement("div"); o.innerHTML = t.trim(); const c = o.childNodes[0]; return c.id = this.options.ariaId || "tooltip_" + Math.random().toString(36).substr(2, 10), c.setAttribute("aria-hidden", "true"), this.options.autoHide && -1 !== this.options.trigger.indexOf("hover") && (c.addEventListener("mouseenter", t => this._scheduleHide(e, this.options.delay, this.options, t)), c.addEventListener("click", t => this._scheduleHide(e, this.options.delay, this.options, t))), c } _setContent(e, t) { this.asyncContent = !1, this._applyContent(e, t).then(() => { this.popperInstance && this.popperInstance.forceUpdate() }) } _applyContent(e, t) { return new Promise((o, c) => { const a = t.html, n = this._tooltipNode; if (!n) return; const l = n.querySelector(this.options.innerSelector); if (1 === e.nodeType) { if (a) { while (l.firstChild) l.removeChild(l.firstChild); l.appendChild(e) } } else { if ("function" === typeof e) { const a = e(); return void (a && "function" === typeof a.then ? (this.asyncContent = !0, t.loadingClass && Tm(n, t.loadingClass), t.loadingContent && this._applyContent(t.loadingContent, t), a.then(e => (t.loadingClass && Pm(n, t.loadingClass), this._applyContent(e, t))).then(o).catch(c)) : this._applyContent(a, t).then(o).catch(c)) } a ? l.innerHTML = e : l.innerText = e } o() }) } _show(e, t) { if (t && "string" === typeof t.container) { const e = document.querySelector(t.container); if (!e) return } clearTimeout(this._disposeTimer), t = Object.assign({}, t), delete t.offset; let o = !0; this._tooltipNode && (Tm(this._tooltipNode, this._classes), o = !1); const c = this._ensureShown(e, t); return o && this._tooltipNode && Tm(this._tooltipNode, this._classes), Tm(e, ["v-tooltip-open"]), c } _ensureShown(e, t) { if (this._isOpen) return this; if (this._isOpen = !0, Im.push(this), this._tooltipNode) return this._tooltipNode.style.display = "", this._tooltipNode.setAttribute("aria-hidden", "false"), this.popperInstance.forceUpdate(), this.asyncContent && this._setContent(t.title, t), this; const o = e.getAttribute("title") || t.title; if (!o) return this; const c = this._create(e, t.template); this._tooltipNode = c, e.setAttribute("aria-describedby", c.id); const a = this._findContainer(t.container, e); this._append(c, a); const n = { ...t.popperOptions, placement: t.placement }; return n.modifiers = [...n.modifiers || []], n.modifiers.push({ name: "arrow", options: { element: this.options.arrowSelector } }), this.popperInstance = Object(Vm["a"])(e, c, n), this._setContent(o, t), requestAnimationFrame(() => { !this._isDisposed && this.popperInstance ? (this.popperInstance.forceUpdate(), requestAnimationFrame(() => { this._isDisposed ? this.dispose() : this._isOpen && c.setAttribute("aria-hidden", "false") })) : this.dispose() }), this } _noLongerOpen() { const e = Im.indexOf(this); -1 !== e && Im.splice(e, 1) } _hide() { if (!this._isOpen) return this; this._isOpen = !1, this._noLongerOpen(), this._tooltipNode.style.display = "none", this._tooltipNode.setAttribute("aria-hidden", "true"), clearTimeout(this._disposeTimer); const e = Km.options.disposeTimeout; return null !== e && (this._disposeTimer = setTimeout(() => { this._tooltipNode && (this._tooltipNode.removeEventListener("mouseenter", this.hide), this._tooltipNode.removeEventListener("click", this.hide), this._removeTooltipNode()) }, e)), Pm(this.reference, ["v-tooltip-open"]), this } _removeTooltipNode() { if (!this._tooltipNode) return; const e = this._tooltipNode.parentNode; e && (e.removeChild(this._tooltipNode), this.reference.removeAttribute("aria-describedby")), this._tooltipNode = null } _dispose() { return this._isDisposed = !0, this.reference.removeAttribute("data-original-title"), this.$_originalTitle && this.reference.setAttribute("title", this.$_originalTitle), this._events.forEach(({ func: e, event: t }) => { this.reference.removeEventListener(t, e) }), this._events = [], this._tooltipNode ? (this._hide(), this._tooltipNode.removeEventListener("mouseenter", this.hide), this._tooltipNode.removeEventListener("click", this.hide)) : this._noLongerOpen(), this } _findContainer(e, t) { return "string" === typeof e ? e = window.document.querySelector(e) : !1 === e && (e = t.parentNode), e } _append(e, t) { t.appendChild(e) } _setEventListeners(e, t, o) { const c = [], a = []; t.forEach(e => { switch (e) { case "hover": c.push("mouseenter"), a.push("mouseleave"), this.options.hideOnTargetClick && a.push("click"); break; case "focus": c.push("focus"), a.push("blur"), this.options.hideOnTargetClick && a.push("click"); break; case "click": c.push("click"), a.push("click"); break } }), c.forEach(t => { const c = t => { !0 !== this._isOpen && (t.usedByTooltip = !0, this._scheduleShow(e, o.delay, o, t)) }; this._events.push({ event: t, func: c }), e.addEventListener(t, c) }), a.forEach(t => { const c = t => { !0 !== t.usedByTooltip && this._scheduleHide(e, o.delay, o, t) }; this._events.push({ event: t, func: c }), e.addEventListener(t, c) }) } _onDocumentTouch(e) { this._enableDocumentTouch && this._scheduleHide(this.reference, this.options.delay, this.options, e) } _scheduleShow(e, t, o) { const c = t && t.show || t || 0; clearTimeout(this._scheduleTimer), this._scheduleTimer = window.setTimeout(() => this._show(e, o), c) } _scheduleHide(e, t, o, c) { const a = t && t.hide || t || 0; clearTimeout(this._scheduleTimer), this._scheduleTimer = window.setTimeout(() => { if (!1 !== this._isOpen && this._tooltipNode.ownerDocument.body.contains(this._tooltipNode)) { if ("mouseleave" === c.type) { const a = this._setTooltipNodeEvent(c, e, t, o); if (a) return } this._hide(e, o) } }, a) } } "undefined" !== typeof document && document.addEventListener("touchstart", e => { for (let t = 0; t < Im.length; t++)Im[t]._onDocumentTouch(e) }, !_m || { passive: !0, capture: !0 }); const Fm = { enabled: !0 }, Mm = ["top", "top-start", "top-end", "right", "right-start", "right-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end"], Wm = { defaultPlacement: "top", defaultClass: "vue-tooltip-theme tw-tooltip", defaultTargetClass: "has-tooltip", defaultHtml: !0, defaultTemplate: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', defaultArrowSelector: ".tooltip-arrow, .tooltip__arrow", defaultInnerSelector: ".tooltip-inner, .tooltip__inner", defaultDelay: 0, defaultTrigger: "hover focus click", defaultOffset: 9, defaultContainer: "body", defaultBoundariesElement: void 0, defaultPopperOptions: {}, defaultLoadingClass: "tooltip-loading", defaultLoadingContent: "...", autoHide: !0, defaultHideOnTargetClick: !0, disposeTimeout: 5e3, popover: { defaultPlacement: "bottom", defaultClass: "vue-popover-theme", defaultBaseClass: "tooltip popover", defaultWrapperClass: "wrapper", defaultInnerClass: "tooltip-inner popover-inner", defaultArrowClass: "tooltip-arrow popover-arrow", defaultOpenClass: "open", defaultDelay: 0, defaultTrigger: "click", defaultOffset: 0, defaultContainer: "body", defaultBoundariesElement: void 0, defaultPopperOptions: {}, defaultAutoHide: !0, defaultHandleResize: !0 } }; function Rm(e) { const t = { placement: "undefined" !== typeof e.placement ? e.placement : Km.options.defaultPlacement, delay: "undefined" !== typeof e.delay ? e.delay : Km.options.defaultDelay, html: "undefined" !== typeof e.html ? e.html : Km.options.defaultHtml, template: "undefined" !== typeof e.template ? e.template : Km.options.defaultTemplate, arrowSelector: "undefined" !== typeof e.arrowSelector ? e.arrowSelector : Km.options.defaultArrowSelector, innerSelector: "undefined" !== typeof e.innerSelector ? e.innerSelector : Km.options.defaultInnerSelector, trigger: "undefined" !== typeof e.trigger ? e.trigger : Km.options.defaultTrigger, offset: "undefined" !== typeof e.offset ? e.offset : Km.options.defaultOffset, container: "undefined" !== typeof e.container ? e.container : Km.options.defaultContainer, boundariesElement: "undefined" !== typeof e.boundariesElement ? e.boundariesElement : Km.options.defaultBoundariesElement, autoHide: "undefined" !== typeof e.autoHide ? e.autoHide : Km.options.autoHide, hideOnTargetClick: "undefined" !== typeof e.hideOnTargetClick ? e.hideOnTargetClick : Km.options.defaultHideOnTargetClick, loadingClass: "undefined" !== typeof e.loadingClass ? e.loadingClass : Km.options.defaultLoadingClass, loadingContent: "undefined" !== typeof e.loadingContent ? e.loadingContent : Km.options.defaultLoadingContent, popperOptions: { ..."undefined" !== typeof e.popperOptions ? e.popperOptions : Km.options.defaultPopperOptions } }; if (t.offset) { const e = typeof t.offset; let o = t.offset; ("number" === e || "string" === e && -1 === o.indexOf(",")) && (o = [0, Number(o)]), t.popperOptions.modifiers || (t.popperOptions.modifiers = []), t.popperOptions.modifiers.push({ name: "offset", options: { offset: o } }) } return t.trigger && -1 !== t.trigger.indexOf("click") && (t.hideOnTargetClick = !1), t } function Um(e, t) { let o = e.placement; for (let c = 0; c < Mm.length; c++) { const e = Mm[c]; t[e] && (o = e) } return o } function Hm(e) { const t = typeof e; return "string" === t ? e : !(!e || "object" !== t) && e.content } function Zm(e, t, o = []) { const c = Hm(t), a = "undefined" !== typeof t.classes ? t.classes : Km.options.defaultClass, n = { title: c, ...Rm({ ..."object" === typeof t ? t : {}, placement: Um(t, o) }) }, l = e._tooltip = new Dm(e, n); l.setClasses(a), l._vueEl = e; const s = "undefined" !== typeof t.targetClasses ? t.targetClasses : Km.options.defaultTargetClass; return e._tooltipTargetClasses = s, Tm(e, s), l } function Gm(e) { e._tooltip && (e._tooltip.dispose(), delete e._tooltip, delete e._tooltipOldShow), e._tooltipTargetClasses && (Pm(e, e._tooltipTargetClasses), delete e._tooltipTargetClasses) } function qm(e, { value: t, oldValue: o, modifiers: c }) { const a = Hm(t); if (a && Fm.enabled) { let o; e._tooltip ? (o = e._tooltip, o.setContent(a), o.setOptions({ ...t, placement: Um(t, c) })) : o = Zm(e, t, c), "undefined" !== typeof t.show && t.show !== e._tooltipOldShow && (e._tooltipOldShow = t.show, t.show ? o.show() : o.hide()) } else Gm(e) } const Km = { options: Wm, beforeMount: qm }; var $m = { install: e => { e.directive("popover", Km) } }; Object(a["createApp"])(k).use(tu).use(Ep).use(Sm).use($m).mount("#app") }, "570e": function (e, t, o) { "use strict"; o("5fff") }, "57b7": function (e, t, o) { }, "5fff": function (e, t, o) { }, 6: function (e, t) { }, "60e4": function (e, t, o) { }, "62be": function (e, t, o) { "use strict"; o("60e4") }, 6497: function (e, t, o) { }, "65e1": function (e, t, o) { "use strict"; o("42fc") }, "6f53": function (e, t, o) { "use strict"; o("83a5") }, 7: function (e, t) { }, "71d9": function (e, t, o) { "use strict"; o("dd5d") }, "76fc": function (e, t, o) { "use strict"; o("f9ef") }, "79d5": function (e, t, o) { }, "7a56": function (e, t, o) { "use strict"; o("266c") }, "7b35": function (e, t, o) { "use strict"; o("eaed") }, "7e65": function (e, t, o) { }, 8: function (e, t) { }, 8181: function (e, t, o) { "use strict"; o("4a83") }, "83a5": function (e, t, o) { }, 8985: function (e, t, o) { "use strict"; o("f3c5") }, "8b67": function (e, t, o) { "use strict"; o("57b7") }, "8b74": function (e, t, o) { "use strict"; o("f775") }, 9: function (e, t) { }, 9028: function (e, t, o) { }, 9455: function (e, t, o) { "use strict"; o("390d") }, "982d": function (e, t, o) { "use strict"; o("55a7") }, "98d2": function (e, t, o) { "use strict"; o("6497") }, "9bcd": function (e, t, o) { }, a19e: function (e, t, o) { "use strict"; o("9028") }, a27d: function (e, t, o) { }, a546: function (e, t, o) { "use strict"; o("f5b5") }, b4a3: function (e, t, o) { "use strict"; o("f325") }, b53f: function (e, t, o) { }, b6fe: function (e, t, o) { "use strict"; o("7e65") }, c0a0: function (e, t, o) { }, c7da: function (e, t, o) { "use strict"; o("9bcd") }, ca08: function (e, t, o) { "use strict"; o("116e") }, ca8b: function (e, t, o) { }, caf6: function (e, t, o) { "use strict"; o("c0a0") }, cf27: function (e, t, o) { }, d4f6: function (e, t, o) { }, d5c8: function (e, t, o) { "use strict"; o("a27d") }, d830: function (e, t, o) { "use strict"; o("23a6") }, dd5d: function (e, t, o) { }, df1c: function (e, t, o) { "use strict"; o("ca8b") }, e2b5: function (e, t, o) { }, eaed: function (e, t, o) { }, ed9d: function (e, t, o) { }, f168: function (e, t, o) { "use strict"; o("cf27") }, f325: function (e, t, o) { }, f3c5: function (e, t, o) { }, f3ef: function (e, t, o) { "use strict"; o("4777") }, f4af: function (e, t, o) { "use strict"; o("290d") }, f5b5: function (e, t, o) { }, f775: function (e, t, o) { }, f9ef: function (e, t, o) { }, fa9c: function (e, t, o) { "use strict"; o("116a") } });
//# sourceMappingURL=app.bec6661b.js.map